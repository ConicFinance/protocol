{"abi": [{"inputs": [{"internalType": "address", "name": "_token", "type": "address"}, {"internalType": "uint256", "name": "_endsAt", "type": "uint256"}, {"internalType": "address", "name": "_refundAddress", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "claimer", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Claimed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "bytes32", "name": "merkleRoot", "type": "bytes32"}], "name": "MerkleRootInitialized", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "Refunded", "type": "event"}, {"inputs": [{"internalType": "address", "name": "claimer", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}, {"components": [{"internalType": "uint16", "name": "nodeIndex", "type": "uint16"}, {"internalType": "bytes32[]", "name": "hashes", "type": "bytes32[]"}], "internalType": "struct MerkleProof.Proof", "name": "proof", "type": "tuple"}], "name": "claim", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "claimed", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "claimedBy", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "endsAt", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "bytes32", "name": "_merkleRoot", "type": "bytes32"}], "name": "initializeMerkleRoot", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "merkleRoot", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "refundAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "refundNonClaimed", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "token", "outputs": [{"internalType": "contract IERC20", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"17": "contracts/tokenomics/AirdropClaiming.sol", "37": "interfaces/tokenomics/IAirdropClaiming.sol", "55": "libraries/MerkleProof.sol", "57": "node_modules/@openzeppelin/contracts/access/Ownable.sol", "60": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "62": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "63": "node_modules/@openzeppelin/contracts/utils/Address.sol", "64": "node_modules/@openzeppelin/contracts/utils/Context.sol"}, "ast": {"absolutePath": "contracts/tokenomics/AirdropClaiming.sol", "exportedSymbols": {"Address": [12883], "AirdropClaiming": [5459], "Context": [12588], "IAirdropClaiming": [11706], "IERC20": [10171], "MerkleProof": [11793], "Ownable": [9505], "SafeERC20": [10420]}, "id": 5460, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 5256, "literals": ["solidity", "^", "0.8", ".13"], "nodeType": "PragmaDirective", "src": "45:24:17"}, {"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 5257, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5460, "sourceUnit": 9506, "src": "71:52:17", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 5258, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5460, "sourceUnit": 10172, "src": "124:56:17", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 5259, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5460, "sourceUnit": 10421, "src": "181:65:17", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/tokenomics/IAirdropClaiming.sol", "file": "../../interfaces/tokenomics/IAirdropClaiming.sol", "id": 5260, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5460, "sourceUnit": 11707, "src": "248:58:17", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/MerkleProof.sol", "file": "../../libraries/MerkleProof.sol", "id": 5261, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5460, "sourceUnit": 11794, "src": "308:41:17", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 5262, "name": "IAirdropClaiming", "nodeType": "IdentifierPath", "referencedDeclaration": 11706, "src": "379:16:17"}, "id": 5263, "nodeType": "InheritanceSpecifier", "src": "379:16:17"}, {"baseName": {"id": 5264, "name": "Ownable", "nodeType": "IdentifierPath", "referencedDeclaration": 9505, "src": "397:7:17"}, "id": 5265, "nodeType": "InheritanceSpecifier", "src": "397:7:17"}], "canonicalName": "AirdropClaiming", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 5459, "linearizedBaseContracts": [5459, 9505, 12588, 11706], "name": "AirdropClaiming", "nameLocation": "360:15:17", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 5269, "libraryName": {"id": 5266, "name": "SafeERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 10420, "src": "417:9:17"}, "nodeType": "UsingForDirective", "src": "411:27:17", "typeName": {"id": 5268, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5267, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 10171, "src": "431:6:17"}, "referencedDeclaration": 10171, "src": "431:6:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}}, {"global": false, "id": 5273, "libraryName": {"id": 5270, "name": "MerkleProof", "nodeType": "IdentifierPath", "referencedDeclaration": 11793, "src": "449:11:17"}, "nodeType": "UsingForDirective", "src": "443:40:17", "typeName": {"id": 5272, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5271, "name": "MerkleProof.Proof", "nodeType": "IdentifierPath", "referencedDeclaration": 11714, "src": "465:17:17"}, "referencedDeclaration": 11714, "src": "465:17:17", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$11714_storage_ptr", "typeString": "struct MerkleProof.Proof"}}}, {"baseFunctions": [11681], "constant": false, "functionSelector": "2eb4a7ab", "id": 5276, "mutability": "mutable", "name": "merkleRoot", "nameLocation": "513:10:17", "nodeType": "VariableDeclaration", "overrides": {"id": 5275, "nodeType": "OverrideSpecifier", "overrides": [], "src": "504:8:17"}, "scope": 5459, "src": "489:34:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5274, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "489:7:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"baseFunctions": [11688], "constant": false, "functionSelector": "fc0c546a", "id": 5280, "mutability": "immutable", "name": "token", "nameLocation": "563:5:17", "nodeType": "VariableDeclaration", "overrides": {"id": 5279, "nodeType": "OverrideSpecifier", "overrides": [], "src": "554:8:17"}, "scope": 5459, "src": "530:38:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}, "typeName": {"id": 5278, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5277, "name": "IERC20", "nodeType": "IdentifierPath", "referencedDeclaration": 10171, "src": "530:6:17"}, "referencedDeclaration": 10171, "src": "530:6:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "visibility": "public"}, {"baseFunctions": [11694], "constant": false, "functionSelector": "0a09284a", "id": 5283, "mutability": "immutable", "name": "endsAt", "nameLocation": "608:6:17", "nodeType": "VariableDeclaration", "overrides": {"id": 5282, "nodeType": "OverrideSpecifier", "overrides": [], "src": "599:8:17"}, "scope": 5459, "src": "574:40:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5281, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "574:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"baseFunctions": [11657], "constant": false, "functionSelector": "0cb61f6c", "id": 5286, "mutability": "immutable", "name": "refundAddress", "nameLocation": "654:13:17", "nodeType": "VariableDeclaration", "overrides": {"id": 5285, "nodeType": "OverrideSpecifier", "overrides": [], "src": "645:8:17"}, "scope": 5459, "src": "620:47:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5284, "name": "address", "nodeType": "ElementaryTypeName", "src": "620:7:17", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"baseFunctions": [11667], "constant": false, "functionSelector": "e834a834", "id": 5289, "mutability": "mutable", "name": "claimed", "nameLocation": "698:7:17", "nodeType": "VariableDeclaration", "overrides": {"id": 5288, "nodeType": "OverrideSpecifier", "overrides": [], "src": "689:8:17"}, "scope": 5459, "src": "674:31:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5287, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "674:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"baseFunctions": [11675], "constant": false, "functionSelector": "29998d4b", "id": 5294, "mutability": "mutable", "name": "claimedBy", "nameLocation": "755:9:17", "nodeType": "VariableDeclaration", "overrides": {"id": 5293, "nodeType": "OverrideSpecifier", "overrides": [], "src": "746:8:17"}, "scope": 5459, "src": "711:53:17", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "typeName": {"id": 5292, "keyType": {"id": 5290, "name": "address", "nodeType": "ElementaryTypeName", "src": "719:7:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "711:27:17", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}, "valueType": {"id": 5291, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "730:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, "visibility": "public"}, {"body": {"id": 5317, "nodeType": "Block", "src": "870:105:17", "statements": [{"expression": {"id": 5307, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5303, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5280, "src": "880:5:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 5305, "name": "_token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5296, "src": "895:6:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5304, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10171, "src": "888:6:17", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$10171_$", "typeString": "type(contract IERC20)"}}, "id": 5306, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "888:14:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "src": "880:22:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "id": 5308, "nodeType": "ExpressionStatement", "src": "880:22:17"}, {"expression": {"id": 5311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5309, "name": "endsAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5283, "src": "912:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5310, "name": "_endsAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5298, "src": "921:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "912:16:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5312, "nodeType": "ExpressionStatement", "src": "912:16:17"}, {"expression": {"id": 5315, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5313, "name": "refundAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5286, "src": "938:13:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5314, "name": "_refundAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5300, "src": "954:14:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "938:30:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 5316, "nodeType": "ExpressionStatement", "src": "938:30:17"}]}, "id": 5318, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 5301, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5296, "mutability": "mutable", "name": "_token", "nameLocation": "800:6:17", "nodeType": "VariableDeclaration", "scope": 5318, "src": "792:14:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5295, "name": "address", "nodeType": "ElementaryTypeName", "src": "792:7:17", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5298, "mutability": "mutable", "name": "_endsAt", "nameLocation": "824:7:17", "nodeType": "VariableDeclaration", "scope": 5318, "src": "816:15:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5297, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "816:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5300, "mutability": "mutable", "name": "_refundAddress", "nameLocation": "849:14:17", "nodeType": "VariableDeclaration", "scope": 5318, "src": "841:22:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5299, "name": "address", "nodeType": "ElementaryTypeName", "src": "841:7:17", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "782:87:17"}, "returnParameters": {"id": 5302, "nodeType": "ParameterList", "parameters": [], "src": "870:0:17"}, "scope": 5459, "src": "771:204:17", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [11651], "body": {"id": 5343, "nodeType": "Block", "src": "1051:160:17", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 5331, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5326, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5276, "src": "1069:10:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5329, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1091:1:17", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5328, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1083:7:17", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes32_$", "typeString": "type(bytes32)"}, "typeName": {"id": 5327, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1083:7:17", "typeDescriptions": {}}}, "id": 5330, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1083:10:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1069:24:17", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6d65726b6c6520726f6f7420616c726561647920736574", "id": 5332, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1095:25:17", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0f795f873c549e2f63f7b3d9626de21e449a72da3b7861bd354d6c9944bee1db", "typeString": "literal_string \"merkle root already set\""}, "value": "merkle root already set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_0f795f873c549e2f63f7b3d9626de21e449a72da3b7861bd354d6c9944bee1db", "typeString": "literal_string \"merkle root already set\""}], "id": 5325, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1061:7:17", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5333, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1061:60:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5334, "nodeType": "ExpressionStatement", "src": "1061:60:17"}, {"expression": {"id": 5337, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5335, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5276, "src": "1131:10:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5336, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "1144:11:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1131:24:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 5338, "nodeType": "ExpressionStatement", "src": "1131:24:17"}, {"eventCall": {"arguments": [{"id": 5340, "name": "_merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5320, "src": "1192:11:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "id": 5339, "name": "MerkleRootInitialized", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11640, "src": "1170:21:17", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$", "typeString": "function (bytes32)"}}, "id": 5341, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1170:34:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5342, "nodeType": "EmitStatement", "src": "1165:39:17"}]}, "functionSelector": "c4b125a0", "id": 5344, "implemented": true, "kind": "function", "modifiers": [{"id": 5323, "kind": "modifierInvocation", "modifierName": {"id": 5322, "name": "onlyOwner", "nodeType": "IdentifierPath", "referencedDeclaration": 9447, "src": "1041:9:17"}, "nodeType": "ModifierInvocation", "src": "1041:9:17"}], "name": "initializeMerkleRoot", "nameLocation": "990:20:17", "nodeType": "FunctionDefinition", "parameters": {"id": 5321, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5320, "mutability": "mutable", "name": "_merkleRoot", "nameLocation": "1019:11:17", "nodeType": "VariableDeclaration", "scope": 5344, "src": "1011:19:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5319, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1011:7:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "1010:21:17"}, "returnParameters": {"id": 5324, "nodeType": "ParameterList", "parameters": [], "src": "1051:0:17"}, "scope": 5459, "src": "981:230:17", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [11705], "body": {"id": 5423, "nodeType": "Block", "src": "1347:485:17", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "id": 5361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5356, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5276, "src": "1365:10:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 5359, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1387:1:17", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 5358, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1379:7:17", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes32_$", "typeString": "type(bytes32)"}, "typeName": {"id": 5357, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1379:7:17", "typeDescriptions": {}}}, "id": 5360, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1379:10:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1365:24:17", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6d65726b6c6520726f6f74206e6f7420736574", "id": 5362, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1391:21:17", "typeDescriptions": {"typeIdentifier": "t_stringliteral_acbe3b8d6975cf09b59753f350c313cda1cd9e4edbb384f515b451dfd2582156", "typeString": "literal_string \"merkle root not set\""}, "value": "merkle root not set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_acbe3b8d6975cf09b59753f350c313cda1cd9e4edbb384f515b451dfd2582156", "typeString": "literal_string \"merkle root not set\""}], "id": 5355, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1357:7:17", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5363, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1357:56:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5364, "nodeType": "ExpressionStatement", "src": "1357:56:17"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5369, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5366, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1431:5:17", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 5367, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1431:15:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 5368, "name": "endsAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5283, "src": "1449:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1431:24:17", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "61697264726f702068617320656e646564", "id": 5370, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1457:19:17", "typeDescriptions": {"typeIdentifier": "t_stringliteral_47261b16e2d60a55605a208ae5b6d33e28184fe8936fd31989899948da68a269", "typeString": "literal_string \"airdrop has ended\""}, "value": "airdrop has ended"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_47261b16e2d60a55605a208ae5b6d33e28184fe8936fd31989899948da68a269", "typeString": "literal_string \"airdrop has ended\""}], "id": 5365, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1423:7:17", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5371, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1423:54:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5372, "nodeType": "ExpressionStatement", "src": "1423:54:17"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 5374, "name": "claimedBy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5294, "src": "1495:9:17", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 5376, "indexExpression": {"id": 5375, "name": "claimer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5346, "src": "1505:7:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1495:18:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 5377, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1517:1:17", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1495:23:17", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "616c726561647920636c61696d6564", "id": 5379, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1520:17:17", "typeDescriptions": {"typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b", "typeString": "literal_string \"already claimed\""}, "value": "already claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b", "typeString": "literal_string \"already claimed\""}], "id": 5373, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1487:7:17", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5380, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1487:51:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5381, "nodeType": "ExpressionStatement", "src": "1487:51:17"}, {"assignments": [5383], "declarations": [{"constant": false, "id": 5383, "mutability": "mutable", "name": "node", "nameLocation": "1557:4:17", "nodeType": "VariableDeclaration", "scope": 5423, "src": "1549:12:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 5382, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1549:7:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 5391, "initialValue": {"arguments": [{"arguments": [{"id": 5387, "name": "claimer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5346, "src": "1591:7:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5388, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5348, "src": "1600:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5385, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "1574:3:17", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 5386, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "1574:16:17", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 5389, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1574:33:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 5384, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "1564:9:17", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 5390, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1564:44:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "1549:59:17"}, {"expression": {"arguments": [{"arguments": [{"id": 5395, "name": "node", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5383, "src": "1640:4:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 5396, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5276, "src": "1646:10:17", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 5393, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5351, "src": "1626:5:17", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$11714_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}, "id": 5394, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "isValid", "nodeType": "MemberAccess", "referencedDeclaration": 11792, "src": "1626:13:17", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_Proof_$11714_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Proof_$11714_memory_ptr_$", "typeString": "function (struct MerkleProof.Proof memory,bytes32,bytes32) pure returns (bool)"}}, "id": 5397, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1626:31:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c69642070726f6f66", "id": 5398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1659:15:17", "typeDescriptions": {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}, "value": "invalid proof"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624", "typeString": "literal_string \"invalid proof\""}], "id": 5392, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1618:7:17", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5399, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1618:57:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5400, "nodeType": "ExpressionStatement", "src": "1618:57:17"}, {"expression": {"arguments": [{"id": 5404, "name": "claimer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5346, "src": "1705:7:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5405, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5348, "src": "1714:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5401, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5280, "src": "1686:5:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "id": 5403, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 10227, "src": "1686:18:17", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10171_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10171_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 5406, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1686:35:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5407, "nodeType": "ExpressionStatement", "src": "1686:35:17"}, {"expression": {"id": 5410, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5408, "name": "claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5289, "src": "1732:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"id": 5409, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5348, "src": "1743:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1732:17:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5411, "nodeType": "ExpressionStatement", "src": "1732:17:17"}, {"expression": {"id": 5416, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 5412, "name": "claimedBy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5294, "src": "1759:9:17", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$", "typeString": "mapping(address => uint256)"}}, "id": 5414, "indexExpression": {"id": 5413, "name": "claimer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5346, "src": "1769:7:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1759:18:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5415, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5348, "src": "1780:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1759:27:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5417, "nodeType": "ExpressionStatement", "src": "1759:27:17"}, {"eventCall": {"arguments": [{"id": 5419, "name": "claimer", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5346, "src": "1809:7:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5420, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5348, "src": "1818:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5418, "name": "Claimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11635, "src": "1801:7:17", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 5421, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1801:24:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5422, "nodeType": "EmitStatement", "src": "1796:29:17"}]}, "functionSelector": "6ae7dd3d", "id": 5424, "implemented": true, "kind": "function", "modifiers": [], "name": "claim", "nameLocation": "1226:5:17", "nodeType": "FunctionDefinition", "overrides": {"id": 5353, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1338:8:17"}, "parameters": {"id": 5352, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 5346, "mutability": "mutable", "name": "claimer", "nameLocation": "1249:7:17", "nodeType": "VariableDeclaration", "scope": 5424, "src": "1241:15:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 5345, "name": "address", "nodeType": "ElementaryTypeName", "src": "1241:7:17", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 5348, "mutability": "mutable", "name": "amount", "nameLocation": "1274:6:17", "nodeType": "VariableDeclaration", "scope": 5424, "src": "1266:14:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5347, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1266:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5351, "mutability": "mutable", "name": "proof", "nameLocation": "1317:5:17", "nodeType": "VariableDeclaration", "scope": 5424, "src": "1290:32:17", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$11714_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 5350, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 5349, "name": "MerkleProof.Proof", "nodeType": "IdentifierPath", "referencedDeclaration": 11714, "src": "1290:17:17"}, "referencedDeclaration": 11714, "src": "1290:17:17", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$11714_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}], "src": "1231:97:17"}, "returnParameters": {"id": 5354, "nodeType": "ParameterList", "parameters": [], "src": "1347:0:17"}, "scope": 5459, "src": "1217:615:17", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [11661], "body": {"id": 5457, "nodeType": "Block", "src": "1884:236:17", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5432, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5429, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1902:5:17", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 5430, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1902:15:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 5431, "name": "endsAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5283, "src": "1921:6:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1902:25:17", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "61697264726f7020686173206e6f7420656e646564", "id": 5433, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1929:23:17", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e7ef5b7d715c0be7aab8e29283ada812f311325628c3be0039015ec81b0d108b", "typeString": "literal_string \"airdrop has not ended\""}, "value": "airdrop has not ended"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e7ef5b7d715c0be7aab8e29283ada812f311325628c3be0039015ec81b0d108b", "typeString": "literal_string \"airdrop has not ended\""}], "id": 5428, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1894:7:17", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5434, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1894:59:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5435, "nodeType": "ExpressionStatement", "src": "1894:59:17"}, {"assignments": [5437], "declarations": [{"constant": false, "id": 5437, "mutability": "mutable", "name": "refundAmount", "nameLocation": "1972:12:17", "nodeType": "VariableDeclaration", "scope": 5457, "src": "1964:20:17", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 5436, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1964:7:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 5445, "initialValue": {"arguments": [{"arguments": [{"id": 5442, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2011:4:17", "typeDescriptions": {"typeIdentifier": "t_contract$_AirdropClaiming_$5459", "typeString": "contract AirdropClaiming"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_AirdropClaiming_$5459", "typeString": "contract AirdropClaiming"}], "id": 5441, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2003:7:17", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5440, "name": "address", "nodeType": "ElementaryTypeName", "src": "2003:7:17", "typeDescriptions": {}}}, "id": 5443, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2003:13:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 5438, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5280, "src": "1987:5:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "id": 5439, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 10110, "src": "1987:15:17", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 5444, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1987:30:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1964:53:17"}, {"expression": {"arguments": [{"id": 5449, "name": "refundAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5286, "src": "2047:13:17", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 5450, "name": "refundAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5437, "src": "2062:12:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 5446, "name": "token", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5280, "src": "2028:5:17", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$10171", "typeString": "contract IERC20"}}, "id": 5448, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 10227, "src": "2028:18:17", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$10171_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$10171_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 5451, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2028:47:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5452, "nodeType": "ExpressionStatement", "src": "2028:47:17"}, {"eventCall": {"arguments": [{"id": 5454, "name": "refundAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 5437, "src": "2100:12:17", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 5453, "name": "Refunded", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11645, "src": "2091:8:17", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 5455, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "2091:22:17", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5456, "nodeType": "EmitStatement", "src": "2086:27:17"}]}, "functionSelector": "b85734f4", "id": 5458, "implemented": true, "kind": "function", "modifiers": [], "name": "refundNonClaimed", "nameLocation": "1847:16:17", "nodeType": "FunctionDefinition", "overrides": {"id": 5426, "nodeType": "OverrideSpecifier", "overrides": [], "src": "1875:8:17"}, "parameters": {"id": 5425, "nodeType": "ParameterList", "parameters": [], "src": "1863:2:17"}, "returnParameters": {"id": 5427, "nodeType": "ParameterList", "parameters": [], "src": "1884:0:17"}, "scope": 5459, "src": "1838:282:17", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 5460, "src": "351:1771:17", "usedErrors": []}], "src": "45:2078:17"}, "bytecode": "", "bytecodeSha1": "01ad386685aa26fe66979b4b53fae94d8db252eb", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.13+commit.abaa5c0e"}, "contractName": "AirdropClaiming", "coverageMap": {"branches": {"17": {"AirdropClaiming.claim": {"35": [1431, 1455, true], "36": [1495, 1518, true], "37": [1626, 1657, true]}, "AirdropClaiming.initializeMerkleRoot": {"39": [1069, 1093, true]}, "AirdropClaiming.refundNonClaimed": {"38": [1902, 1927, true]}}, "37": {}, "55": {"MerkleProof.isValid": {"43": [460, 478, false]}}, "57": {"Ownable.transferOwnership": {"44": [2006, 2028, true]}}, "60": {}, "62": {"SafeERC20._callOptionalReturn": {"45": [3735, 3756, false], "46": [3819, 3849, true]}}, "63": {"Address.functionCallWithValue": {"40": [5145, 5175, true]}, "Address.verifyCallResult": {"41": [7735, 7742, false], "42": [7876, 7897, false]}}, "64": {}}, "statements": {"17": {"AirdropClaiming.claim": {"1": [1357, 1413], "2": [1423, 1477], "3": [1487, 1538], "4": [1618, 1675], "5": [1686, 1721], "6": [1732, 1749], "7": [1759, 1786], "8": [1796, 1825]}, "AirdropClaiming.initializeMerkleRoot": {"14": [1061, 1121], "15": [1131, 1155], "16": [1165, 1204]}, "AirdropClaiming.refundNonClaimed": {"11": [1894, 1953], "12": [2028, 2075], "13": [2086, 2113]}}, "37": {}, "55": {"MerkleProof.isValid": {"19": [498, 555], "20": [594, 651], "21": [679, 693], "22": [437, 440], "23": [714, 739]}}, "57": {"Ownable._transferOwnership": {"25": [2378, 2395], "26": [2405, 2450]}, "Ownable.owner": {"0": [1101, 1114]}, "Ownable.renounceOwnership": {"10": [1732, 1762]}, "Ownable.transferOwnership": {"17": [1998, 2071], "18": [2081, 2109]}}, "60": {}, "62": {"SafeERC20._callOptionalReturn": {"27": [3811, 3896]}, "SafeERC20.safeTransfer": {"24": [813, 899]}}, "63": {"Address.functionCall": {"28": [4018, 4077]}, "Address.functionCallWithValue": {"29": [5137, 5218], "31": [5228, 5288], "32": [5382, 5440]}, "Address.isContract": {"30": [1458, 1488]}, "Address.verifyCallResult": {"33": [7758, 7775], "34": [8202, 8222]}}, "64": {"Context._msgSender": {"9": [712, 729]}}}}, "dependencies": ["Address", "Context", "IAirdropClaiming", "IERC20", "MerkleProof", "Ownable", "SafeERC20"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b14610178578063b85734f414610189578063c4b125a014610191578063e834a834146101a4578063f2fde38b146101ad578063fc0c546a146101c057600080fd5b80630a09284a146100b95780630cb61f6c146100f357806329998d4b146101325780632eb4a7ab146101525780636ae7dd3d1461015b578063715018a614610170575b600080fd5b6100e07f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61011a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ea565b6100e0610140366004610b40565b60036020526000908152604090205481565b6100e060015481565b61016e610169366004610b5b565b6101e7565b005b61016e610427565b6000546001600160a01b031661011a565b61016e61045d565b61016e61019f366004610bb9565b6105dd565b6100e060025481565b61016e6101bb366004610b40565b61068c565b61011a7f000000000000000000000000000000000000000000000000000000000000000081565b6001546102315760405162461bcd60e51b81526020600482015260136024820152721b595c9adb19481c9bdbdd081b9bdd081cd95d606a1b60448201526064015b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000042106102945760405162461bcd60e51b8152602060048201526011602482015270185a5c991c9bdc081a185cc8195b991959607a1b6044820152606401610228565b6001600160a01b038316600090815260036020526040902054156102ec5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610228565b6040516bffffffffffffffffffffffff19606085901b16602082015260348101839052600090605401604051602081830303815290604052805190602001209050610345816001548461033e90610c42565b9190610727565b6103815760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b6044820152606401610228565b6103b56001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016858561082a565b82600260008282546103c79190610d22565b90915550506001600160a01b03841660008181526003602052604090819020859055517fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a906104199086815260200190565b60405180910390a250505050565b6000546001600160a01b031633146104515760405162461bcd60e51b815260040161022890610d3a565b61045b6000610881565b565b7f00000000000000000000000000000000000000000000000000000000000000004210156104c55760405162461bcd60e51b8152602060048201526015602482015274185a5c991c9bdc081a185cc81b9bdd08195b991959605a1b6044820152606401610228565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105509190610d6f565b90506105a66001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361082a565b6040518181527f3d2a04f53164bedf9a8a46353305d6b2d2261410406df3b41f99ce6489dc003c906020015b60405180910390a150565b6000546001600160a01b031633146106075760405162461bcd60e51b815260040161022890610d3a565b600154156106575760405162461bcd60e51b815260206004820152601760248201527f6d65726b6c6520726f6f7420616c7265616479207365740000000000000000006044820152606401610228565b60018190556040518181527f15a788d91e22cfde45d8c8d6d82b4ff98bafd0546a402ad5fa91a8253d5b230b906020016105d2565b6000546001600160a01b031633146106b65760405162461bcd60e51b815260040161022890610d3a565b6001600160a01b03811661071b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610228565b61072481610881565b50565b602083015151835160009190825b8281101561081a57610748600283610d9e565b61ffff166000036107a957858760200151828151811061076a5761076a610dbf565b602002602001015160405160200161078c929190918252602082015260400190565b6040516020818303038152906040528051906020012095506107fb565b866020015181815181106107bf576107bf610dbf565b6020026020010151866040516020016107e2929190918252602082015260400190565b6040516020818303038152906040528051906020012095505b610806600283610dd5565b91508061081281610df6565b915050610735565b50838514925050505b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261087c9084906108d1565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610926826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166109a39092919063ffffffff16565b80519091501561087c57808060200190518101906109449190610e0f565b61087c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610228565b60606109b284846000856109ba565b949350505050565b606082471015610a1b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610228565b6001600160a01b0385163b610a725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610228565b600080866001600160a01b03168587604051610a8e9190610e61565b60006040518083038185875af1925050503d8060008114610acb576040519150601f19603f3d011682016040523d82523d6000602084013e610ad0565b606091505b5091509150610ae0828286610aeb565b979650505050505050565b60608315610afa575081610823565b825115610b0a5782518084602001fd5b8160405162461bcd60e51b81526004016102289190610e7d565b80356001600160a01b0381168114610b3b57600080fd5b919050565b600060208284031215610b5257600080fd5b61082382610b24565b600080600060608486031215610b7057600080fd5b610b7984610b24565b925060208401359150604084013567ffffffffffffffff811115610b9c57600080fd5b840160408187031215610bae57600080fd5b809150509250925092565b600060208284031215610bcb57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c0b57610c0b610bd2565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c3a57610c3a610bd2565b604052919050565b600060408236031215610c5457600080fd5b610c5c610be8565b823561ffff81168114610c6e57600080fd5b815260208381013567ffffffffffffffff80821115610c8c57600080fd5b9085019036601f830112610c9f57600080fd5b813581811115610cb157610cb1610bd2565b8060051b9150610cc2848301610c11565b8181529183018401918481019036841115610cdc57600080fd5b938501935b83851015610cfa57843582529385019390850190610ce1565b94860194909452509295945050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d3557610d35610d0c565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610d8157600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600061ffff80841680610db357610db3610d88565b92169190910692915050565b634e487b7160e01b600052603260045260246000fd5b600061ffff80841680610dea57610dea610d88565b92169190910492915050565b600060018201610e0857610e08610d0c565b5060010190565b600060208284031215610e2157600080fd5b8151801515811461082357600080fd5b60005b83811015610e4c578181015183820152602001610e34565b83811115610e5b576000848401525b50505050565b60008251610e73818460208701610e31565b9190910192915050565b6020815260008251806020840152610e9c816040850160208701610e31565b601f01601f1916919091016040019291505056fea26469706673582212200e1c67c7731b0949e89ffbcf746d3e07d908acb7b63113e62048996f915fedd964736f6c634300080d0033", "deployedSourceMap": "351:1771:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;574:40;;;;;;;;160:25:67;;;148:2;133:18;574:40:17;;;;;;;;620:47;;;;;;;;-1:-1:-1;;;;;360:32:67;;;342:51;;330:2;315:18;620:47:17;196:203:67;711:53:17;;;;;;:::i;:::-;;;;;;;;;;;;;;489:34;;;;;;1217:615;;;;;;:::i;:::-;;:::i;:::-;;1668:101:57;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:57;1036:85;;1838:282:17;;;:::i;981:230::-;;;;;;:::i;:::-;;:::i;674:31::-;;;;;;1918:198:57;;;;;;:::i;:::-;;:::i;530:38:17:-;;;;;1217:615;1365:10;;1357:56;;;;-1:-1:-1;;;1357:56:17;;2098:2:67;1357:56:17;;;2080:21:67;2137:2;2117:18;;;2110:30;-1:-1:-1;;;2156:18:67;;;2149:49;2215:18;;1357:56:17;;;;;;;;;1449:6;1431:15;:24;1423:54;;;;-1:-1:-1;;;1423:54:17;;2446:2:67;1423:54:17;;;2428:21:67;2485:2;2465:18;;;2458:30;-1:-1:-1;;;2504:18:67;;;2497:47;2561:18;;1423:54:17;2244:341:67;1423:54:17;-1:-1:-1;;;;;1495:18:17;;;;;;:9;:18;;;;;;:23;1487:51;;;;-1:-1:-1;;;1487:51:17;;2792:2:67;1487:51:17;;;2774:21:67;2831:2;2811:18;;;2804:30;-1:-1:-1;;;2850:18:67;;;2843:45;2905:18;;1487:51:17;2590:339:67;1487:51:17;1574:33;;-1:-1:-1;;3111:2:67;3107:15;;;3103:53;1574:33:17;;;3091:66:67;3173:12;;;3166:28;;;1549:12:17;;3210::67;;1574:33:17;;;;;;;;;;;;1564:44;;;;;;1549:59;;1626:31;1640:4;1646:10;;1626:5;:13;;;:::i;:::-;;:31;:13;:31::i;:::-;1618:57;;;;-1:-1:-1;;;1618:57:17;;5336:2:67;1618:57:17;;;5318:21:67;5375:2;5355:18;;;5348:30;-1:-1:-1;;;5394:18:67;;;5387:43;5447:18;;1618:57:17;5134:337:67;1618:57:17;1686:35;-1:-1:-1;;;;;1686:5:17;:18;1705:7;1714:6;1686:18;:35::i;:::-;1743:6;1732:7;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;1759:18:17;;;;;;:9;:18;;;;;;;:27;;;1801:24;;;;;1780:6;160:25:67;;148:2;133:18;;14:177;1801:24:17;;;;;;;;1347:485;1217:615;;;:::o;1668:101:57:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:57;719:10:64;1248:23:57;1240:68;;;;-1:-1:-1;;;1240:68:57;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1838:282:17:-;1921:6;1902:15;:25;;1894:59;;;;-1:-1:-1;;;1894:59:17;;6304:2:67;1894:59:17;;;6286:21:67;6343:2;6323:18;;;6316:30;-1:-1:-1;;;6362:18:67;;;6355:51;6423:18;;1894:59:17;6102:345:67;1894:59:17;1987:30;;-1:-1:-1;;;1987:30:17;;2011:4;1987:30;;;342:51:67;1964:20:17;;1987:5;-1:-1:-1;;;;;1987:15:17;;;;315:18:67;;1987:30:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1964:53;-1:-1:-1;2028:47:17;-1:-1:-1;;;;;2028:5:17;:18;2047:13;1964:53;2028:18;:47::i;:::-;2091:22;;160:25:67;;;2091:22:17;;148:2:67;133:18;2091:22:17;;;;;;;;1884:236;1838:282::o;981:230::-;1082:7:57;1108:6;-1:-1:-1;;;;;1108:6:57;719:10:64;1248:23:57;1240:68;;;;-1:-1:-1;;;1240:68:57;;;;;;;:::i;:::-;1069:10:17::1;::::0;:24;1061:60:::1;;;::::0;-1:-1:-1;;;1061:60:17;;6843:2:67;1061:60:17::1;::::0;::::1;6825:21:67::0;6882:2;6862:18;;;6855:30;6921:25;6901:18;;;6894:53;6964:18;;1061:60:17::1;6641:347:67::0;1061:60:17::1;1131:10;:24:::0;;;1170:34:::1;::::0;160:25:67;;;1170:34:17::1;::::0;148:2:67;133:18;1170:34:17::1;14:177:67::0;1918:198:57;1082:7;1108:6;-1:-1:-1;;;;;1108:6:57;719:10:64;1248:23:57;1240:68;;;;-1:-1:-1;;;1240:68:57;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:57;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:57;;7195:2:67;1998:73:57::1;::::0;::::1;7177:21:67::0;7234:2;7214:18;;;7207:30;7273:34;7253:18;;;7246:62;-1:-1:-1;;;7324:18:67;;;7317:36;7370:19;;1998:73:57::1;6993:402:67::0;1998:73:57::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;175:571:55:-;332:12;;;;:19;380:15;;299:4;;332:19;299:4;405:299;429:6;425:1;:10;405:299;;;460:13;472:1;460:9;:13;:::i;:::-;:18;;477:1;460:18;456:210;;532:4;538:5;:12;;;551:1;538:15;;;;;;;;:::i;:::-;;;;;;;515:39;;;;;;;;8005:19:67;;;8049:2;8040:12;;8033:28;8086:2;8077:12;;7848:247;515:39:55;;;;;;;;;;;;;505:50;;;;;;498:57;;456:210;;;628:5;:12;;;641:1;628:15;;;;;;;;:::i;:::-;;;;;;;645:4;611:39;;;;;;;;8005:19:67;;;8049:2;8040:12;;8033:28;8086:2;8077:12;;7848:247;611:39:55;;;;;;;;;;;;;601:50;;;;;;594:57;;456:210;679:14;692:1;679:14;;:::i;:::-;;-1:-1:-1;437:3:55;;;;:::i;:::-;;;;405:299;;;;729:10;721:4;:18;714:25;;;;175:571;;;;;;:::o;701:205:62:-;840:58;;;-1:-1:-1;;;;;8624:32:67;;840:58:62;;;8606:51:67;8673:18;;;;8666:34;;;840:58:62;;;;;;;;;;8579:18:67;;;;840:58:62;;;;;;;;-1:-1:-1;;;;;840:58:62;-1:-1:-1;;;840:58:62;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;2270:187:57:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:57;;;-1:-1:-1;;;;;;2378:17:57;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3207:706:62:-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:62;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:62;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:62;;9195:2:67;3811:85:62;;;9177:21:67;9234:2;9214:18;;;9207:30;9273:34;9253:18;;;9246:62;-1:-1:-1;;;9324:18:67;;;9317:40;9374:19;;3811:85:62;8993:406:67;3861:223:63;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:63:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:63;;9606:2:67;5137:81:63;;;9588:21:67;9645:2;9625:18;;;9618:30;9684:34;9664:18;;;9657:62;-1:-1:-1;;;9735:18:67;;;9728:36;9781:19;;5137:81:63;9404:402:67;5137:81:63;-1:-1:-1;;;;;1465:19:63;;;5228:60;;;;-1:-1:-1;;;5228:60:63;;10013:2:67;5228:60:63;;;9995:21:67;10052:2;10032:18;;;10025:30;10091:31;10071:18;;;10064:59;10140:18;;5228:60:63;9811:353:67;5228:60:63;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:63;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:63:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:63;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:63;;;;;;;;:::i;404:173:67:-;472:20;;-1:-1:-1;;;;;521:31:67;;511:42;;501:70;;567:1;564;557:12;501:70;404:173;;;:::o;582:186::-;641:6;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;955:527::-;1058:6;1066;1074;1127:2;1115:9;1106:7;1102:23;1098:32;1095:52;;;1143:1;1140;1133:12;1095:52;1166:29;1185:9;1166:29;:::i;:::-;1156:39;;1242:2;1231:9;1227:18;1214:32;1204:42;;1297:2;1286:9;1282:18;1269:32;1324:18;1316:6;1313:30;1310:50;;;1356:1;1353;1346:12;1310:50;1379:22;;1435:2;1417:16;;;1413:25;1410:45;;;1451:1;1448;1441:12;1410:45;1474:2;1464:12;;;955:527;;;;;:::o;1487:180::-;1546:6;1599:2;1587:9;1578:7;1574:23;1570:32;1567:52;;;1615:1;1612;1605:12;1567:52;-1:-1:-1;1638:23:67;;1487:180;-1:-1:-1;1487:180:67:o;3233:127::-;3294:10;3289:3;3285:20;3282:1;3275:31;3325:4;3322:1;3315:15;3349:4;3346:1;3339:15;3365:257;3437:4;3431:11;;;3469:17;;3516:18;3501:34;;3537:22;;;3498:62;3495:88;;;3563:18;;:::i;:::-;3599:4;3592:24;3365:257;:::o;3627:275::-;3698:2;3692:9;3763:2;3744:13;;-1:-1:-1;;3740:27:67;3728:40;;3798:18;3783:34;;3819:22;;;3780:62;3777:88;;;3845:18;;:::i;:::-;3881:2;3874:22;3627:275;;-1:-1:-1;3627:275:67:o;3907:1222::-;4007:9;4066:4;4058:5;4042:14;4038:26;4034:37;4031:57;;;4084:1;4081;4074:12;4031:57;4112:22;;:::i;:::-;4171:5;4158:19;4221:6;4212:7;4208:20;4199:7;4196:33;4186:61;;4243:1;4240;4233:12;4186:61;4256:24;;4299:2;4337:14;;;4324:28;4371:18;4401:14;;;4398:34;;;4428:1;4425;4418:12;4398:34;4451:18;;;;4507:14;4500:4;4492:13;;4488:34;4478:62;;4536:1;4533;4526:12;4478:62;4572:2;4559:16;4594:2;4590;4587:10;4584:36;;;4600:18;;:::i;:::-;4646:2;4643:1;4639:10;4629:20;;4669:28;4693:2;4689;4685:11;4669:28;:::i;:::-;4731:15;;;4801:11;;;4797:20;;;4762:12;;;;4840:14;4829:26;;4826:46;;;4868:1;4865;4858:12;4826:46;4892:11;;;;4912:142;4928:6;4923:3;4920:15;4912:142;;;4994:17;;4982:30;;4945:12;;;;5032;;;;4912:142;;;5070:16;;;5063:31;;;;-1:-1:-1;5074:7:67;;3907:1222;-1:-1:-1;;;;;3907:1222:67:o;5476:127::-;5537:10;5532:3;5528:20;5525:1;5518:31;5568:4;5565:1;5558:15;5592:4;5589:1;5582:15;5608:128;5648:3;5679:1;5675:6;5672:1;5669:13;5666:39;;;5685:18;;:::i;:::-;-1:-1:-1;5721:9:67;;5608:128::o;5741:356::-;5943:2;5925:21;;;5962:18;;;5955:30;6021:34;6016:2;6001:18;;5994:62;6088:2;6073:18;;5741:356::o;6452:184::-;6522:6;6575:2;6563:9;6554:7;6550:23;6546:32;6543:52;;;6591:1;6588;6581:12;6543:52;-1:-1:-1;6614:16:67;;6452:184;-1:-1:-1;6452:184:67:o;7400:127::-;7461:10;7456:3;7452:20;7449:1;7442:31;7492:4;7489:1;7482:15;7516:4;7513:1;7506:15;7532:179;7563:1;7589:6;7622:2;7619:1;7615:10;7644:3;7634:37;;7651:18;;:::i;:::-;7689:10;;7685:20;;;;;7532:179;-1:-1:-1;;7532:179:67:o;7716:127::-;7777:10;7772:3;7768:20;7765:1;7758:31;7808:4;7805:1;7798:15;7832:4;7829:1;7822:15;8100:187;8139:1;8165:6;8198:2;8195:1;8191:10;8220:3;8210:37;;8227:18;;:::i;:::-;8265:10;;8261:20;;;;;8100:187;-1:-1:-1;;8100:187:67:o;8292:135::-;8331:3;8352:17;;;8349:43;;8372:18;;:::i;:::-;-1:-1:-1;8419:1:67;8408:13;;8292:135::o;8711:277::-;8778:6;8831:2;8819:9;8810:7;8806:23;8802:32;8799:52;;;8847:1;8844;8837:12;8799:52;8879:9;8873:16;8932:5;8925:13;8918:21;8911:5;8908:32;8898:60;;8954:1;8951;8944:12;10169:258;10241:1;10251:113;10265:6;10262:1;10259:13;10251:113;;;10341:11;;;10335:18;10322:11;;;10315:39;10287:2;10280:10;10251:113;;;10382:6;10379:1;10376:13;10373:48;;;10417:1;10408:6;10403:3;10399:16;10392:27;10373:48;;10169:258;;;:::o;10432:274::-;10561:3;10599:6;10593:13;10615:53;10661:6;10656:3;10649:4;10641:6;10637:17;10615:53;:::i;:::-;10684:16;;;;;10432:274;-1:-1:-1;;10432:274:67:o;10711:383::-;10860:2;10849:9;10842:21;10823:4;10892:6;10886:13;10935:6;10930:2;10919:9;10915:18;10908:34;10951:66;11010:6;11005:2;10994:9;10990:18;10985:2;10977:6;10973:15;10951:66;:::i;:::-;11078:2;11057:15;-1:-1:-1;;11053:29:67;11038:45;;;;11085:2;11034:54;;10711:383;-1:-1:-1;;10711:383:67:o", "language": "Solidity", "natspec": {"events": {"Claimed(address,uint256)": {"notice": "emitted when a user claims his airdroped"}, "MerkleRootInitialized(bytes32)": {"notice": "emitted when the merkle root is initialized"}, "Refunded(uint256)": {"notice": "emitted at the end of the airdrop when the rest of the tokens is refunded"}}, "kind": "dev", "methods": {"claim(address,uint256,(uint16,bytes32[]))": {"notice": "claims `amount` on behalf of `claimer` the proof is a merkle proof of the claim"}, "claimed()": {"notice": "returns the total amount of claimed tokens"}, "initializeMerkleRoot(bytes32)": {"notice": "initializes the merkle root of the airdrop"}, "owner()": {"details": "Returns the address of the current owner."}, "refundNonClaimed()": {"notice": "refunds the tokens that have not been claimed"}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "stateVariables": {"claimedBy": {"return": "the total amount of tokens claimed by `_claimer`", "returns": {"_0": "the total amount of tokens claimed by `_claimer`"}}, "endsAt": {"return": "the end date of the airdrop", "returns": {"_0": "the end date of the airdrop"}}, "merkleRoot": {"return": "the merkle root", "returns": {"_0": "the merkle root"}}, "refundAddress": {"return": "the refund address for non-claimed tokens", "returns": {"_0": "the refund address for non-claimed tokens"}}, "token": {"return": "the token being airdropped", "returns": {"_0": "the token being airdropped"}}}, "version": 1}, "offset": [351, 2122], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xB85734F4 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xC4B125A0 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xE834A834 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA09284A EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xCB61F6C EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x29998D4B EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x6AE7DD3D EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0xE0 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1E7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH2 0x427 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11A JUMP JUMPDEST PUSH2 0x16E PUSH2 0x45D JUMP JUMPDEST PUSH2 0x16E PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH2 0xE0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x68C JUMP JUMPDEST PUSH2 0x11A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1B595C9ADB19481C9BDBDD081B9BDD081CD95D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 TIMESTAMP LT PUSH2 0x294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x185A5C991C9BDC081A185CC8195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x185B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP6 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x345 DUP2 PUSH1 0x1 SLOAD DUP5 PUSH2 0x33E SWAP1 PUSH2 0xC42 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x34B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x3B5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0xD22 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A SWAP1 PUSH2 0x419 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH2 0x45B PUSH1 0x0 PUSH2 0x881 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 TIMESTAMP LT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x185A5C991C9BDC081A185CC81B9BDD08195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x550 SWAP2 SWAP1 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP PUSH2 0x5A6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH32 0x0 DUP4 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x3D2A04F53164BEDF9A8A46353305D6B2D2261410406DF3B41F99CE6489DC003C SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 SLOAD ISZERO PUSH2 0x657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D65726B6C6520726F6F7420616C726561647920736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x15A788D91E22CFDE45D8C8D6D82B4FF98BAFD0546A402AD5FA91A8253D5B230B SWAP1 PUSH1 0x20 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP1 PUSH2 0xD3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x724 DUP2 PUSH2 0x881 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD MLOAD DUP4 MLOAD PUSH1 0x0 SWAP2 SWAP1 DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x81A JUMPI PUSH2 0x748 PUSH1 0x2 DUP4 PUSH2 0xD9E JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x0 SUB PUSH2 0x7A9 JUMPI DUP6 DUP8 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x76A JUMPI PUSH2 0x76A PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78C SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP PUSH2 0x7FB JUMP JUMPDEST DUP7 PUSH1 0x20 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x7BF JUMPI PUSH2 0x7BF PUSH2 0xDBF JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7E2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP JUMPDEST PUSH2 0x806 PUSH1 0x2 DUP4 PUSH2 0xDD5 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x812 DUP2 PUSH2 0xDF6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x735 JUMP JUMPDEST POP DUP4 DUP6 EQ SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x87C SWAP1 DUP5 SWAP1 PUSH2 0x8D1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x926 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x9A3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x87C JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x944 SWAP2 SWAP1 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x87C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9B2 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x9BA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xA1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0xE61 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xAE0 DUP3 DUP3 DUP7 PUSH2 0xAEB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xAFA JUMPI POP DUP2 PUSH2 0x823 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0xB0A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0xE7D JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x823 DUP3 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB79 DUP5 PUSH2 0xB24 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH1 0x40 DUP2 DUP8 SUB SLT ISZERO PUSH2 0xBAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC0B JUMPI PUSH2 0xC0B PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC3A JUMPI PUSH2 0xC3A PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0xC54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5C PUSH2 0xBE8 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0xC6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xC8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP6 ADD SWAP1 CALLDATASIZE PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xCB1 JUMPI PUSH2 0xCB1 PUSH2 0xBD2 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0xCC2 DUP5 DUP4 ADD PUSH2 0xC11 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 CALLDATASIZE DUP5 GT ISZERO PUSH2 0xCDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0xCFA JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0xCE1 JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD35 PUSH2 0xD0C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP5 AND DUP1 PUSH2 0xDB3 JUMPI PUSH2 0xDB3 PUSH2 0xD88 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 MOD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP5 AND DUP1 PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0xD88 JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE08 JUMPI PUSH2 0xE08 PUSH2 0xD0C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE4C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE34 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0xE73 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0xE31 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xE9C DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0xE31 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE SHR PUSH8 0xC7731B0949E89FFB 0xCF PUSH21 0x6D3E07D908ACB7B63113E62048996F915FEDD96473 PUSH16 0x6C634300080D00330000000000000000 ", "sha1": "d3f51bae4a0b7ee783b24b82e4483fb67f8871d7", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"../../interfaces/tokenomics/IAirdropClaiming.sol\";\n\nimport \"../../libraries/MerkleProof.sol\";\n\ncontract AirdropClaiming is IAirdropClaiming, Ownable {\n    using SafeERC20 for IERC20;\n    using MerkleProof for MerkleProof.Proof;\n\n    bytes32 public override merkleRoot;\n\n    IERC20 public immutable override token;\n    uint256 public immutable override endsAt;\n    address public immutable override refundAddress;\n\n    uint256 public override claimed;\n    mapping(address => uint256) public override claimedBy;\n\n    constructor(\n        address _token,\n        uint256 _endsAt,\n        address _refundAddress\n    ) {\n        token = IERC20(_token);\n        endsAt = _endsAt;\n        refundAddress = _refundAddress;\n    }\n\n    function initializeMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\n        require(merkleRoot == bytes32(0), \"merkle root already set\");\n        merkleRoot = _merkleRoot;\n        emit MerkleRootInitialized(_merkleRoot);\n    }\n\n    function claim(\n        address claimer,\n        uint256 amount,\n        MerkleProof.Proof calldata proof\n    ) external override {\n        require(merkleRoot != bytes32(0), \"merkle root not set\");\n        require(block.timestamp < endsAt, \"airdrop has ended\");\n        require(claimedBy[claimer] == 0, \"already claimed\");\n\n        bytes32 node = keccak256(abi.encodePacked(claimer, amount));\n        require(proof.isValid(node, merkleRoot), \"invalid proof\");\n\n        token.safeTransfer(claimer, amount);\n\n        claimed += amount;\n        claimedBy[claimer] = amount;\n        emit Claimed(claimer, amount);\n    }\n\n    function refundNonClaimed() external override {\n        require(block.timestamp >= endsAt, \"airdrop has not ended\");\n\n        uint256 refundAmount = token.balanceOf(address(this));\n\n        token.safeTransfer(refundAddress, refundAmount);\n\n        emit Refunded(refundAmount);\n    }\n}\n", "sourceMap": "351:1771:17:-:0;;;771:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:57;719:10:64;921:18:57;:32::i;:::-;-1:-1:-1;;;;;880:22:17;;;;;912:16;;;;;938:30;;;351:1771;;2270:187:57;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:57;;;-1:-1:-1;;;;;;2378:17:57;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:67:-;93:13;;-1:-1:-1;;;;;135:31:67;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;:::-;351:1771:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/tokenomics/AirdropClaiming.sol", "type": "contract", "deployment": {"address": "0x6E99ee539594fa6a621a29022Aa50AE7f32f14BB", "chainid": "1", "blockHeight": 14538941}}