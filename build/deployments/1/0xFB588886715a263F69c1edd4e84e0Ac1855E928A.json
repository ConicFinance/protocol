{"abi": [{"inputs": [{"internalType": "bytes32", "name": "_merkleRootDebtToken", "type": "bytes32"}, {"internalType": "bytes32", "name": "_merkleRootRefund", "type": "bytes32"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [], "name": "ClaimingStarted", "type": "event"}, {"anonymous": false, "inputs": [], "name": "ClaimingTerminated", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "debtPool", "type": "address"}], "name": "DebtPoolSet", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "claimant", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "DebtTokenClaimed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "address", "name": "claimant", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "RefundClaimed", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "burn", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amountDebtToken", "type": "uint256"}, {"components": [{"internalType": "uint16", "name": "nodeIndex", "type": "uint16"}, {"internalType": "bytes32[]", "name": "hashes", "type": "bytes32[]"}], "internalType": "struct MerkleProof.Proof", "name": "proofDebtTokenClaim", "type": "tuple"}, {"internalType": "uint256", "name": "amountRefund", "type": "uint256"}, {"components": [{"internalType": "uint16", "name": "nodeIndex", "type": "uint16"}, {"internalType": "bytes32[]", "name": "hashes", "type": "bytes32[]"}], "internalType": "struct MerkleProof.Proof", "name": "proofRefund", "type": "tuple"}], "name": "claimAll", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"components": [{"internalType": "uint16", "name": "nodeIndex", "type": "uint16"}, {"internalType": "bytes32[]", "name": "hashes", "type": "bytes32[]"}], "internalType": "struct MerkleProof.Proof", "name": "proof", "type": "tuple"}], "name": "claimDebtToken", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "claimIsActive", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}, {"components": [{"internalType": "uint16", "name": "nodeIndex", "type": "uint16"}, {"internalType": "bytes32[]", "name": "hashes", "type": "bytes32[]"}], "internalType": "struct MerkleProof.Proof", "name": "proof", "type": "tuple"}], "name": "claimRefund", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "debtPool", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "debtTokenClaimedBy", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "subtractedValue", "type": "uint256"}], "name": "decreaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "depositRefund", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "addedValue", "type": "uint256"}], "name": "increaseAllowance", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "merkleRootDebtToken", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "merkleRootRefund", "outputs": [{"internalType": "bytes32", "name": "", "type": "bytes32"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "refundClaimedBy", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_debtPool", "type": "address"}], "name": "setDebtPool", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "start", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "startAt", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "terminateClaiming", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol", "11": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "12": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/Address.sol", "13": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/Context.sol", "19": "contracts/ConicDebtToken.sol", "35": "interfaces/IConicDebtToken.sol", "5": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/access/Ownable.sol", "64": "libraries/MerkleProof.sol", "7": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol", "8": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "9": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"}, "ast": {"absolutePath": "contracts/ConicDebtToken.sol", "exportedSymbols": {"Address": [12151], "ConicDebtToken": [2648], "Context": [18521], "ERC20": [11342], "IConicDebtToken": [16268], "IERC20": [11420], "IERC20Metadata": [11445], "IERC20Permit": [18557], "MerkleProof": [19093], "Ownable": [10755], "SafeERC20": [11821], "ScaledMath": [16189]}, "id": 2649, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 2258, "literals": ["solidity", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "45:23:19"}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/access/Ownable.sol", "file": "@openzeppelin/contracts/access/Ownable.sol", "id": 2259, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2649, "sourceUnit": 10756, "src": "70:52:19", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 2260, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2649, "sourceUnit": 11822, "src": "123:65:19", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol", "id": 2261, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2649, "sourceUnit": 11343, "src": "189:55:19", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../libraries/ScaledMath.sol", "id": 2262, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2649, "sourceUnit": 16190, "src": "246:37:19", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IConicDebtToken.sol", "file": "../interfaces/IConicDebtToken.sol", "id": 2263, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 2649, "sourceUnit": 16269, "src": "284:43:19", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 2264, "name": "IConicDebtToken", "nameLocations": ["356:15:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 16268, "src": "356:15:19"}, "id": 2265, "nodeType": "InheritanceSpecifier", "src": "356:15:19"}, {"baseName": {"id": 2266, "name": "ERC20", "nameLocations": ["373:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 11342, "src": "373:5:19"}, "id": 2267, "nodeType": "InheritanceSpecifier", "src": "373:5:19"}, {"baseName": {"id": 2268, "name": "Ownable", "nameLocations": ["380:7:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 10755, "src": "380:7:19"}, "id": 2269, "nodeType": "InheritanceSpecifier", "src": "380:7:19"}], "canonicalName": "ConicDebtToken", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 2648, "linearizedBaseContracts": [2648, 10755, 11342, 11445, 16268, 11420, 18521], "name": "ConicDebtToken", "nameLocation": "338:14:19", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 2273, "libraryName": {"id": 2270, "name": "SafeERC20", "nameLocations": ["400:9:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 11821, "src": "400:9:19"}, "nodeType": "UsingForDirective", "src": "394:27:19", "typeName": {"id": 2272, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2271, "name": "IERC20", "nameLocations": ["414:6:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 11420, "src": "414:6:19"}, "referencedDeclaration": 11420, "src": "414:6:19", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$11420", "typeString": "contract IERC20"}}}, {"global": false, "id": 2277, "libraryName": {"id": 2274, "name": "MerkleProof", "nameLocations": ["432:11:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19093, "src": "432:11:19"}, "nodeType": "UsingForDirective", "src": "426:40:19", "typeName": {"id": 2276, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2275, "name": "MerkleProof.Proof", "nameLocations": ["448:11:19", "460:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "448:17:19"}, "referencedDeclaration": 19014, "src": "448:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}}, {"constant": true, "id": 2280, "mutability": "constant", "name": "MAX_SUPPLY", "nameLocation": "498:10:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "472:51:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2278, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "472:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "345f3333375f323333653138", "id": 2279, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "511:12:19", "typeDescriptions": {"typeIdentifier": "t_rational_4337233000000000000000000_by_1", "typeString": "int_const 4337233000000000000000000"}, "value": "4_337_233e18"}, "visibility": "internal"}, {"constant": true, "id": 2285, "mutability": "constant", "name": "CLAIM_DURATION", "nameLocation": "555:14:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "529:54:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2281, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "529:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"commonType": {"typeIdentifier": "t_rational_15552000_by_1", "typeString": "int_const 15552000"}, "id": 2284, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3330", "id": 2282, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "572:7:19", "subdenomination": "days", "typeDescriptions": {"typeIdentifier": "t_rational_2592000_by_1", "typeString": "int_const 2592000"}, "value": "30"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "36", "id": 2283, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "582:1:19", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "572:11:19", "typeDescriptions": {"typeIdentifier": "t_rational_15552000_by_1", "typeString": "int_const 15552000"}}, "visibility": "internal"}, {"constant": true, "id": 2288, "mutability": "constant", "name": "TREASURY", "nameLocation": "615:8:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "589:79:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2286, "name": "address", "nodeType": "ElementaryTypeName", "src": "589:7:19", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"hexValue": "307842323744433566383238366630363346313134393163386633343930353363423337373138626561", "id": 2287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "626:42:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xB27DC5f8286f063F11491c8f349053cB37718bea"}, "visibility": "internal"}, {"constant": true, "id": 2294, "mutability": "constant", "name": "CRVUSD", "nameLocation": "700:6:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "674:86:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2289, "name": "address", "nodeType": "ElementaryTypeName", "src": "674:7:19", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"arguments": [{"hexValue": "307866393339453041303346423037463539413733333134453733373934426530453537616331623445", "id": 2292, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "717:42:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2291, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "709:7:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2290, "name": "address", "nodeType": "ElementaryTypeName", "src": "709:7:19", "typeDescriptions": {}}}, "id": 2293, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "709:51:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "d6534584", "id": 2296, "mutability": "immutable", "name": "merkleRootDebtToken", "nameLocation": "791:19:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "766:44:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2295, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "766:7:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"constant": false, "functionSelector": "70a5ef9f", "id": 2298, "mutability": "immutable", "name": "merkleRootRefund", "nameLocation": "841:16:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "816:41:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2297, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "816:7:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "public"}, {"constant": false, "functionSelector": "8e4499e5", "id": 2302, "mutability": "mutable", "name": "debtTokenClaimedBy", "nameLocation": "896:18:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "864:50:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 2301, "keyType": {"id": 2299, "name": "address", "nodeType": "ElementaryTypeName", "src": "872:7:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "864:24:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 2300, "name": "bool", "nodeType": "ElementaryTypeName", "src": "883:4:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "93cd9652", "id": 2306, "mutability": "mutable", "name": "refundClaimedBy", "nameLocation": "952:15:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "920:47:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 2305, "keyType": {"id": 2303, "name": "address", "nodeType": "ElementaryTypeName", "src": "928:7:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "920:24:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 2304, "name": "bool", "nodeType": "ElementaryTypeName", "src": "939:4:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "c7446565", "id": 2308, "mutability": "mutable", "name": "startAt", "nameLocation": "989:7:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "974:22:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2307, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "974:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"constant": false, "functionSelector": "5303f68c", "id": 2310, "mutability": "mutable", "name": "claimIsActive", "nameLocation": "1014:13:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "1002:25:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 2309, "name": "bool", "nodeType": "ElementaryTypeName", "src": "1002:4:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "public"}, {"constant": false, "functionSelector": "1ffe1667", "id": 2312, "mutability": "mutable", "name": "debtPool", "nameLocation": "1048:8:19", "nodeType": "VariableDeclaration", "scope": 2648, "src": "1033:23:19", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2311, "name": "address", "nodeType": "ElementaryTypeName", "src": "1033:7:19", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"body": {"id": 2331, "nodeType": "Block", "src": "1189:105:19", "statements": [{"expression": {"id": 2325, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2323, "name": "merkleRootDebtToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2296, "src": "1199:19:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2324, "name": "_merkleRootDebtToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2314, "src": "1221:20:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1199:42:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2326, "nodeType": "ExpressionStatement", "src": "1199:42:19"}, {"expression": {"id": 2329, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2327, "name": "merkleRootRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2298, "src": "1251:16:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2328, "name": "_merkleRootRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2316, "src": "1270:17:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "src": "1251:36:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "id": 2330, "nodeType": "ExpressionStatement", "src": "1251:36:19"}]}, "id": 2332, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "436f6e6963204465627420546f6b656e", "id": 2319, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1160:18:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a7a77508a7906d1bf5e77b55db7dee9643c06d19477c99101a5d65b3012d4c88", "typeString": "literal_string \"Conic Debt Token\""}, "value": "Conic Debt Token"}, {"hexValue": "636e634454", "id": 2320, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1180:7:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1cab0b2100d35937645297cabaf2b15d0c4f4e5834685c8656a1292c0a911284", "typeString": "literal_string \"cncDT\""}, "value": "cncDT"}], "id": 2321, "kind": "baseConstructorSpecifier", "modifierName": {"id": 2318, "name": "ERC20", "nameLocations": ["1154:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 11342, "src": "1154:5:19"}, "nodeType": "ModifierInvocation", "src": "1154:34:19"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 2317, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2314, "mutability": "mutable", "name": "_merkleRootDebtToken", "nameLocation": "1092:20:19", "nodeType": "VariableDeclaration", "scope": 2332, "src": "1084:28:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2313, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1084:7:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 2316, "mutability": "mutable", "name": "_merkleRootRefund", "nameLocation": "1130:17:19", "nodeType": "VariableDeclaration", "scope": 2332, "src": "1122:25:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2315, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "1122:7:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "src": "1074:79:19"}, "returnParameters": {"id": 2322, "nodeType": "ParameterList", "parameters": [], "src": "1189:0:19"}, "scope": 2648, "src": "1063:231:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [16220], "body": {"id": 2352, "nodeType": "Block", "src": "1358:83:19", "statements": [{"expression": {"arguments": [{"expression": {"id": 2343, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1400:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2344, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1404:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "1400:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 2347, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1420:4:19", "typeDescriptions": {"typeIdentifier": "t_contract$_ConicDebtToken_$2648", "typeString": "contract ConicDebtToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ConicDebtToken_$2648", "typeString": "contract ConicDebtToken"}], "id": 2346, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1412:7:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2345, "name": "address", "nodeType": "ElementaryTypeName", "src": "1412:7:19", "typeDescriptions": {}}}, "id": 2348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1412:13:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2349, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2334, "src": "1427:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 2340, "name": "CRVUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2294, "src": "1375:6:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2339, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11420, "src": "1368:6:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$11420_$", "typeString": "type(contract IERC20)"}}, "id": 2341, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1368:14:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$11420", "typeString": "contract IERC20"}}, "id": 2342, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1383:16:19", "memberName": "safeTransferFrom", "nodeType": "MemberAccess", "referencedDeclaration": 11505, "src": "1368:31:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11420_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11420_$", "typeString": "function (contract IERC20,address,address,uint256)"}}, "id": 2350, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1368:66:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2351, "nodeType": "ExpressionStatement", "src": "1368:66:19"}]}, "functionSelector": "0a1348cd", "id": 2353, "implemented": true, "kind": "function", "modifiers": [{"id": 2337, "kind": "modifierInvocation", "modifierName": {"id": 2336, "name": "onlyOwner", "nameLocations": ["1348:9:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 10674, "src": "1348:9:19"}, "nodeType": "ModifierInvocation", "src": "1348:9:19"}], "name": "depositRefund", "nameLocation": "1309:13:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2335, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2334, "mutability": "mutable", "name": "amount", "nameLocation": "1331:6:19", "nodeType": "VariableDeclaration", "scope": 2353, "src": "1323:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2333, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1323:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1322:16:19"}, "returnParameters": {"id": 2338, "nodeType": "ParameterList", "parameters": [], "src": "1358:0:19"}, "scope": 2648, "src": "1300:141:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16223], "body": {"id": 2366, "nodeType": "Block", "src": "1483:74:19", "statements": [{"expression": {"id": 2361, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2358, "name": "startAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "1493:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"expression": {"id": 2359, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "1503:5:19", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 2360, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1509:9:19", "memberName": "timestamp", "nodeType": "MemberAccess", "src": "1503:15:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1493:25:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 2362, "nodeType": "ExpressionStatement", "src": "1493:25:19"}, {"eventCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 2363, "name": "ClaimingStarted", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16207, "src": "1533:15:19", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2364, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1533:17:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2365, "nodeType": "EmitStatement", "src": "1528:22:19"}]}, "functionSelector": "be9a6555", "id": 2367, "implemented": true, "kind": "function", "modifiers": [{"id": 2356, "kind": "modifierInvocation", "modifierName": {"id": 2355, "name": "onlyOwner", "nameLocations": ["1473:9:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 10674, "src": "1473:9:19"}, "nodeType": "ModifierInvocation", "src": "1473:9:19"}], "name": "start", "nameLocation": "1456:5:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2354, "nodeType": "ParameterList", "parameters": [], "src": "1461:2:19"}, "returnParameters": {"id": 2357, "nodeType": "ParameterList", "parameters": [], "src": "1483:0:19"}, "scope": 2648, "src": "1447:110:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16231], "body": {"id": 2387, "nodeType": "Block", "src": "1646:104:19", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2378, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2376, "name": "startAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "1664:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 2377, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1675:1:19", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1664:12:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436c61696d696e67206973206e6f7420616374697665", "id": 2379, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1678:24:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9270ddbe665a7e78e7b4be2fb811c0ebf9096984f4d19bd3345d2f1cb4a165dd", "typeString": "literal_string \"Claiming is not active\""}, "value": "Claiming is not active"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9270ddbe665a7e78e7b4be2fb811c0ebf9096984f4d19bd3345d2f1cb4a165dd", "typeString": "literal_string \"Claiming is not active\""}], "id": 2375, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1656:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2380, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1656:47:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2381, "nodeType": "ExpressionStatement", "src": "1656:47:19"}, {"expression": {"arguments": [{"id": 2383, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2369, "src": "1729:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2384, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2372, "src": "1737:5:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}], "id": 2382, "name": "_claimDebtToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2499, "src": "1713:15:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proof_$19014_calldata_ptr_$returns$__$", "typeString": "function (uint256,struct MerkleProof.Proof calldata)"}}, "id": 2385, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1713:30:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2386, "nodeType": "ExpressionStatement", "src": "1713:30:19"}]}, "functionSelector": "30289b15", "id": 2388, "implemented": true, "kind": "function", "modifiers": [], "name": "claimDebtToken", "nameLocation": "1572:14:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2373, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2369, "mutability": "mutable", "name": "amount", "nameLocation": "1595:6:19", "nodeType": "VariableDeclaration", "scope": 2388, "src": "1587:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2368, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1587:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2372, "mutability": "mutable", "name": "proof", "nameLocation": "1630:5:19", "nodeType": "VariableDeclaration", "scope": 2388, "src": "1603:32:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2371, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2370, "name": "MerkleProof.Proof", "nameLocations": ["1603:11:19", "1615:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "1603:17:19"}, "referencedDeclaration": 19014, "src": "1603:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}], "src": "1586:50:19"}, "returnParameters": {"id": 2374, "nodeType": "ParameterList", "parameters": [], "src": "1646:0:19"}, "scope": 2648, "src": "1563:187:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16239], "body": {"id": 2408, "nodeType": "Block", "src": "1836:101:19", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2399, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2397, "name": "startAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "1854:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 2398, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1865:1:19", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1854:12:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436c61696d696e67206973206e6f7420616374697665", "id": 2400, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1868:24:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9270ddbe665a7e78e7b4be2fb811c0ebf9096984f4d19bd3345d2f1cb4a165dd", "typeString": "literal_string \"Claiming is not active\""}, "value": "Claiming is not active"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9270ddbe665a7e78e7b4be2fb811c0ebf9096984f4d19bd3345d2f1cb4a165dd", "typeString": "literal_string \"Claiming is not active\""}], "id": 2396, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1846:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2401, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1846:47:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2402, "nodeType": "ExpressionStatement", "src": "1846:47:19"}, {"expression": {"arguments": [{"id": 2404, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2390, "src": "1916:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2405, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2393, "src": "1924:5:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}], "id": 2403, "name": "_claimRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2471, "src": "1903:12:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proof_$19014_calldata_ptr_$returns$__$", "typeString": "function (uint256,struct MerkleProof.Proof calldata)"}}, "id": 2406, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1903:27:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2407, "nodeType": "ExpressionStatement", "src": "1903:27:19"}]}, "functionSelector": "c5b42316", "id": 2409, "implemented": true, "kind": "function", "modifiers": [], "name": "claimRefund", "nameLocation": "1765:11:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2394, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2390, "mutability": "mutable", "name": "amount", "nameLocation": "1785:6:19", "nodeType": "VariableDeclaration", "scope": 2409, "src": "1777:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2389, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1777:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2393, "mutability": "mutable", "name": "proof", "nameLocation": "1820:5:19", "nodeType": "VariableDeclaration", "scope": 2409, "src": "1793:32:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2392, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2391, "name": "MerkleProof.Proof", "nameLocations": ["1793:11:19", "1805:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "1793:17:19"}, "referencedDeclaration": 19014, "src": "1793:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}], "src": "1776:50:19"}, "returnParameters": {"id": 2395, "nodeType": "ParameterList", "parameters": [], "src": "1836:0:19"}, "scope": 2648, "src": "1756:181:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16252], "body": {"id": 2439, "nodeType": "Block", "src": "2143:177:19", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2425, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2423, "name": "startAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "2161:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 2424, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2172:1:19", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "2161:12:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436c61696d696e67206973206e6f7420616374697665", "id": 2426, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2175:24:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9270ddbe665a7e78e7b4be2fb811c0ebf9096984f4d19bd3345d2f1cb4a165dd", "typeString": "literal_string \"Claiming is not active\""}, "value": "Claiming is not active"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9270ddbe665a7e78e7b4be2fb811c0ebf9096984f4d19bd3345d2f1cb4a165dd", "typeString": "literal_string \"Claiming is not active\""}], "id": 2422, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "2153:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2427, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2153:47:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2428, "nodeType": "ExpressionStatement", "src": "2153:47:19"}, {"expression": {"arguments": [{"id": 2430, "name": "amountDebtToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2411, "src": "2227:15:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2431, "name": "proofDebtTokenClaim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2414, "src": "2244:19:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}], "id": 2429, "name": "_claimDebtToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2499, "src": "2211:15:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proof_$19014_calldata_ptr_$returns$__$", "typeString": "function (uint256,struct MerkleProof.Proof calldata)"}}, "id": 2432, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2211:53:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2433, "nodeType": "ExpressionStatement", "src": "2211:53:19"}, {"expression": {"arguments": [{"id": 2435, "name": "amountRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2416, "src": "2287:12:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2436, "name": "proofRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2419, "src": "2301:11:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}], "id": 2434, "name": "_claimRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2471, "src": "2274:12:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proof_$19014_calldata_ptr_$returns$__$", "typeString": "function (uint256,struct MerkleProof.Proof calldata)"}}, "id": 2437, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2274:39:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2438, "nodeType": "ExpressionStatement", "src": "2274:39:19"}]}, "functionSelector": "7dab4d61", "id": 2440, "implemented": true, "kind": "function", "modifiers": [], "name": "claimAll", "nameLocation": "1952:8:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2420, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2411, "mutability": "mutable", "name": "amountDebtToken", "nameLocation": "1978:15:19", "nodeType": "VariableDeclaration", "scope": 2440, "src": "1970:23:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2410, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1970:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2414, "mutability": "mutable", "name": "proofDebtTokenClaim", "nameLocation": "2030:19:19", "nodeType": "VariableDeclaration", "scope": 2440, "src": "2003:46:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2413, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2412, "name": "MerkleProof.Proof", "nameLocations": ["2003:11:19", "2015:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "2003:17:19"}, "referencedDeclaration": 19014, "src": "2003:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}, {"constant": false, "id": 2416, "mutability": "mutable", "name": "amountRefund", "nameLocation": "2067:12:19", "nodeType": "VariableDeclaration", "scope": 2440, "src": "2059:20:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2415, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2059:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2419, "mutability": "mutable", "name": "proofRefund", "nameLocation": "2116:11:19", "nodeType": "VariableDeclaration", "scope": 2440, "src": "2089:38:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2418, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2417, "name": "MerkleProof.Proof", "nameLocations": ["2089:11:19", "2101:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "2089:17:19"}, "referencedDeclaration": 19014, "src": "2089:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}], "src": "1960:173:19"}, "returnParameters": {"id": 2421, "nodeType": "ParameterList", "parameters": [], "src": "2143:0:19"}, "scope": 2648, "src": "1943:377:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 2470, "nodeType": "Block", "src": "2407:178:19", "statements": [{"expression": {"arguments": [{"id": 2449, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2442, "src": "2424:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2450, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2445, "src": "2432:5:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}, {"id": 2451, "name": "merkleRootRefund", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2298, "src": "2439:16:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 2452, "name": "refundClaimedBy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2306, "src": "2457:15:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}], "id": 2448, "name": "_claim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2560, "src": "2417:6:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proof_$19014_calldata_ptr_$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$returns$__$", "typeString": "function (uint256,struct MerkleProof.Proof calldata,bytes32,mapping(address => bool))"}}, "id": 2453, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2417:56:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2454, "nodeType": "ExpressionStatement", "src": "2417:56:19"}, {"expression": {"arguments": [{"expression": {"id": 2459, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2511:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2460, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2515:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "2511:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2461, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2442, "src": "2523:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 2456, "name": "CRVUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2294, "src": "2490:6:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2455, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11420, "src": "2483:6:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$11420_$", "typeString": "type(contract IERC20)"}}, "id": 2457, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2483:14:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$11420", "typeString": "contract IERC20"}}, "id": 2458, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2498:12:19", "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 11478, "src": "2483:27:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11420_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11420_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 2462, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2483:47:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2463, "nodeType": "ExpressionStatement", "src": "2483:47:19"}, {"eventCall": {"arguments": [{"expression": {"id": 2465, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2559:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2466, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2563:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "2559:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2467, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2442, "src": "2571:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2464, "name": "RefundClaimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16205, "src": "2545:13:19", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2468, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2545:33:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2469, "nodeType": "EmitStatement", "src": "2540:38:19"}]}, "id": 2471, "implemented": true, "kind": "function", "modifiers": [], "name": "_claimRefund", "nameLocation": "2335:12:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2446, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2442, "mutability": "mutable", "name": "amount", "nameLocation": "2356:6:19", "nodeType": "VariableDeclaration", "scope": 2471, "src": "2348:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2441, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2348:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2445, "mutability": "mutable", "name": "proof", "nameLocation": "2391:5:19", "nodeType": "VariableDeclaration", "scope": 2471, "src": "2364:32:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2444, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2443, "name": "MerkleProof.Proof", "nameLocations": ["2364:11:19", "2376:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "2364:17:19"}, "referencedDeclaration": 19014, "src": "2364:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}], "src": "2347:50:19"}, "returnParameters": {"id": 2447, "nodeType": "ParameterList", "parameters": [], "src": "2407:0:19"}, "scope": 2648, "src": "2326:259:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 2498, "nodeType": "Block", "src": "2675:165:19", "statements": [{"expression": {"arguments": [{"id": 2480, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2473, "src": "2692:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 2481, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2476, "src": "2700:5:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}, {"id": 2482, "name": "merkleRootDebtToken", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2296, "src": "2707:19:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 2483, "name": "debtTokenClaimedBy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2302, "src": "2728:18:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}], "id": 2479, "name": "_claim", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2560, "src": "2685:6:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proof_$19014_calldata_ptr_$_t_bytes32_$_t_mapping$_t_address_$_t_bool_$_$returns$__$", "typeString": "function (uint256,struct MerkleProof.Proof calldata,bytes32,mapping(address => bool))"}}, "id": 2484, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2685:62:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2485, "nodeType": "ExpressionStatement", "src": "2685:62:19"}, {"expression": {"arguments": [{"expression": {"id": 2487, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2763:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2488, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2767:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "2763:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2489, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2473, "src": "2775:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2486, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11159, "src": "2757:5:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2490, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2757:25:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2491, "nodeType": "ExpressionStatement", "src": "2757:25:19"}, {"eventCall": {"arguments": [{"expression": {"id": 2493, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2814:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2818:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "2814:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2495, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2473, "src": "2826:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2492, "name": "DebtTokenClaimed", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16215, "src": "2797:16:19", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2496, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2797:36:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2497, "nodeType": "EmitStatement", "src": "2792:41:19"}]}, "id": 2499, "implemented": true, "kind": "function", "modifiers": [], "name": "_claimDebtToken", "nameLocation": "2600:15:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2477, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2473, "mutability": "mutable", "name": "amount", "nameLocation": "2624:6:19", "nodeType": "VariableDeclaration", "scope": 2499, "src": "2616:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2472, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2616:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2476, "mutability": "mutable", "name": "proof", "nameLocation": "2659:5:19", "nodeType": "VariableDeclaration", "scope": 2499, "src": "2632:32:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2475, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2474, "name": "MerkleProof.Proof", "nameLocations": ["2632:11:19", "2644:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "2632:17:19"}, "referencedDeclaration": 19014, "src": "2632:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}], "src": "2615:50:19"}, "returnParameters": {"id": 2478, "nodeType": "ParameterList", "parameters": [], "src": "2675:0:19"}, "scope": 2648, "src": "2591:249:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 2559, "nodeType": "Block", "src": "3023:328:19", "statements": [{"assignments": [2514], "declarations": [{"constant": false, "id": 2514, "mutability": "mutable", "name": "node", "nameLocation": "3041:4:19", "nodeType": "VariableDeclaration", "scope": 2559, "src": "3033:12:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2513, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "3033:7:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}], "id": 2523, "initialValue": {"arguments": [{"arguments": [{"expression": {"id": 2518, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3075:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2519, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3079:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "3075:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2520, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2501, "src": "3087:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 2516, "name": "abi", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -1, "src": "3058:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_abi", "typeString": "abi"}}, "id": 2517, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "memberLocation": "3062:12:19", "memberName": "encodePacked", "nodeType": "MemberAccess", "src": "3058:16:19", "typeDescriptions": {"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$", "typeString": "function () pure returns (bytes memory)"}}, "id": 2521, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3058:36:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 2515, "name": "keccak256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -8, "src": "3048:9:19", "typeDescriptions": {"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$", "typeString": "function (bytes memory) pure returns (bytes32)"}}, "id": 2522, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3048:47:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "nodeType": "VariableDeclarationStatement", "src": "3033:62:19"}, {"expression": {"arguments": [{"arguments": [{"id": 2527, "name": "node", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2514, "src": "3127:4:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, {"id": 2528, "name": "merkleRoot", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2506, "src": "3133:10:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}], "expression": {"id": 2525, "name": "proof", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2504, "src": "3113:5:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof calldata"}}, "id": 2526, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3119:7:19", "memberName": "isValid", "nodeType": "MemberAccess", "referencedDeclaration": 19092, "src": "3113:13:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_struct$_Proof_$19014_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Proof_$19014_memory_ptr_$", "typeString": "function (struct MerkleProof.Proof memory,bytes32,bytes32) pure returns (bool)"}}, "id": 2529, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3113:31:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "496e76616c69642070726f6f66", "id": 2530, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3146:15:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639", "typeString": "literal_string \"Invalid proof\""}, "value": "Invalid proof"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639", "typeString": "literal_string \"Invalid proof\""}], "id": 2524, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3105:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2531, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3105:57:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2532, "nodeType": "ExpressionStatement", "src": "3105:57:19"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2539, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2536, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2534, "name": "startAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "3180:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 2535, "name": "CLAIM_DURATION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2285, "src": "3190:14:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3180:24:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"expression": {"id": 2537, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3208:5:19", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 2538, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3214:9:19", "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3208:15:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3180:43:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436c61696d696e672068617320656e646564", "id": 2540, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3225:20:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_9365845c873420c46f3a1c5d4478470509c3060cd122b82f105938f7105f0ff2", "typeString": "literal_string \"Claiming has ended\""}, "value": "Claiming has ended"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_9365845c873420c46f3a1c5d4478470509c3060cd122b82f105938f7105f0ff2", "typeString": "literal_string \"Claiming has ended\""}], "id": 2533, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3172:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2541, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3172:74:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2542, "nodeType": "ExpressionStatement", "src": "3172:74:19"}, {"expression": {"arguments": [{"id": 2548, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "3264:22:19", "subExpression": {"baseExpression": {"id": 2544, "name": "claimedBy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2510, "src": "3265:9:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 2547, "indexExpression": {"expression": {"id": 2545, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3275:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2546, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3279:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "3275:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "3265:21:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "416c726561647920636c61696d6564", "id": 2549, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3288:17:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf", "typeString": "literal_string \"Already claimed\""}, "value": "Already claimed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf", "typeString": "literal_string \"Already claimed\""}], "id": 2543, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3256:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2550, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3256:50:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2551, "nodeType": "ExpressionStatement", "src": "3256:50:19"}, {"expression": {"id": 2557, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 2552, "name": "claimedBy", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2510, "src": "3316:9:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 2555, "indexExpression": {"expression": {"id": 2553, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3326:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2554, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3330:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "3326:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "3316:21:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 2556, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3340:4:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "3316:28:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 2558, "nodeType": "ExpressionStatement", "src": "3316:28:19"}]}, "id": 2560, "implemented": true, "kind": "function", "modifiers": [], "name": "_claim", "nameLocation": "2855:6:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2511, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2501, "mutability": "mutable", "name": "amount", "nameLocation": "2879:6:19", "nodeType": "VariableDeclaration", "scope": 2560, "src": "2871:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2500, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2871:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 2504, "mutability": "mutable", "name": "proof", "nameLocation": "2922:5:19", "nodeType": "VariableDeclaration", "scope": 2560, "src": "2895:32:19", "stateVariable": false, "storageLocation": "calldata", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_calldata_ptr", "typeString": "struct MerkleProof.Proof"}, "typeName": {"id": 2503, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 2502, "name": "MerkleProof.Proof", "nameLocations": ["2895:11:19", "2907:5:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 19014, "src": "2895:17:19"}, "referencedDeclaration": 19014, "src": "2895:17:19", "typeDescriptions": {"typeIdentifier": "t_struct$_Proof_$19014_storage_ptr", "typeString": "struct MerkleProof.Proof"}}, "visibility": "internal"}, {"constant": false, "id": 2506, "mutability": "mutable", "name": "merkleRoot", "nameLocation": "2945:10:19", "nodeType": "VariableDeclaration", "scope": 2560, "src": "2937:18:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}, "typeName": {"id": 2505, "name": "bytes32", "nodeType": "ElementaryTypeName", "src": "2937:7:19", "typeDescriptions": {"typeIdentifier": "t_bytes32", "typeString": "bytes32"}}, "visibility": "internal"}, {"constant": false, "id": 2510, "mutability": "mutable", "name": "claimedBy", "nameLocation": "2998:9:19", "nodeType": "VariableDeclaration", "scope": 2560, "src": "2965:42:19", "stateVariable": false, "storageLocation": "storage", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 2509, "keyType": {"id": 2507, "name": "address", "nodeType": "ElementaryTypeName", "src": "2973:7:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "2965:24:19", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 2508, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2984:4:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "internal"}], "src": "2861:152:19"}, "returnParameters": {"id": 2512, "nodeType": "ParameterList", "parameters": [], "src": "3023:0:19"}, "scope": 2648, "src": "2846:505:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [16267], "body": {"id": 2598, "nodeType": "Block", "src": "3405:256:19", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2571, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2566, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "3423:5:19", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 2567, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3429:9:19", "memberName": "timestamp", "nodeType": "MemberAccess", "src": "3423:15:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 2570, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2568, "name": "startAt", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2308, "src": "3441:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 2569, "name": "CLAIM_DURATION", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2285, "src": "3451:14:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3441:24:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3423:42:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436c61696d696e6720686173206e6f7420656e646564", "id": 2572, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3467:24:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3f5ba6548f75656dcc247621de690fdc56f89e0d5dd4e6124619ca6e4211b4e1", "typeString": "literal_string \"Claiming has not ended\""}, "value": "Claiming has not ended"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3f5ba6548f75656dcc247621de690fdc56f89e0d5dd4e6124619ca6e4211b4e1", "typeString": "literal_string \"Claiming has not ended\""}], "id": 2565, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3415:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2573, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3415:77:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2574, "nodeType": "ExpressionStatement", "src": "3415:77:19"}, {"assignments": [2576], "declarations": [{"constant": false, "id": 2576, "mutability": "mutable", "name": "fundsLeft", "nameLocation": "3510:9:19", "nodeType": "VariableDeclaration", "scope": 2598, "src": "3502:17:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2575, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3502:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 2586, "initialValue": {"arguments": [{"arguments": [{"id": 2583, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3555:4:19", "typeDescriptions": {"typeIdentifier": "t_contract$_ConicDebtToken_$2648", "typeString": "contract ConicDebtToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_ConicDebtToken_$2648", "typeString": "contract ConicDebtToken"}], "id": 2582, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3547:7:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2581, "name": "address", "nodeType": "ElementaryTypeName", "src": "3547:7:19", "typeDescriptions": {}}}, "id": 2584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3547:13:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 2578, "name": "CRVUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2294, "src": "3529:6:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2577, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11420, "src": "3522:6:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$11420_$", "typeString": "type(contract IERC20)"}}, "id": 2579, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3522:14:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$11420", "typeString": "contract IERC20"}}, "id": 2580, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3537:9:19", "memberName": "balanceOf", "nodeType": "MemberAccess", "referencedDeclaration": 11377, "src": "3522:24:19", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 2585, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3522:39:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3502:59:19"}, {"expression": {"arguments": [{"id": 2591, "name": "TREASURY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2288, "src": "3599:8:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2592, "name": "fundsLeft", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2576, "src": "3609:9:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"arguments": [{"id": 2588, "name": "CRVUSD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2294, "src": "3578:6:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2587, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11420, "src": "3571:6:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$11420_$", "typeString": "type(contract IERC20)"}}, "id": 2589, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3571:14:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$11420", "typeString": "contract IERC20"}}, "id": 2590, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3586:12:19", "memberName": "safeTransfer", "nodeType": "MemberAccess", "referencedDeclaration": 11478, "src": "3571:27:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$11420_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$11420_$", "typeString": "function (contract IERC20,address,uint256)"}}, "id": 2593, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3571:48:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2594, "nodeType": "ExpressionStatement", "src": "3571:48:19"}, {"eventCall": {"arguments": [], "expression": {"argumentTypes": [], "id": 2595, "name": "ClaimingTerminated", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16209, "src": "3634:18:19", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$__$returns$__$", "typeString": "function ()"}}, "id": 2596, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3634:20:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2597, "nodeType": "EmitStatement", "src": "3629:25:19"}]}, "functionSelector": "1a50577f", "id": 2599, "implemented": true, "kind": "function", "modifiers": [{"id": 2563, "kind": "modifierInvocation", "modifierName": {"id": 2562, "name": "onlyOwner", "nameLocations": ["3395:9:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 10674, "src": "3395:9:19"}, "nodeType": "ModifierInvocation", "src": "3395:9:19"}], "name": "terminateClaiming", "nameLocation": "3366:17:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2561, "nodeType": "ParameterList", "parameters": [], "src": "3383:2:19"}, "returnParameters": {"id": 2564, "nodeType": "ParameterList", "parameters": [], "src": "3405:0:19"}, "scope": 2648, "src": "3357:304:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16257], "body": {"id": 2624, "nodeType": "Block", "src": "3726:141:19", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2612, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 2607, "name": "debtPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2312, "src": "3744:8:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [{"hexValue": "30", "id": 2610, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3764:1:19", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 2609, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3756:7:19", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 2608, "name": "address", "nodeType": "ElementaryTypeName", "src": "3756:7:19", "typeDescriptions": {}}}, "id": 2611, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3756:10:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3744:22:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "436c61696d20706f6f6c20616c726561647920736574", "id": 2613, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3768:24:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_f309ae010f8edea7b34046f8748abfcb09a0dddaf9fad2e4e5ff0a457aa0e488", "typeString": "literal_string \"Claim pool already set\""}, "value": "Claim pool already set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_f309ae010f8edea7b34046f8748abfcb09a0dddaf9fad2e4e5ff0a457aa0e488", "typeString": "literal_string \"Claim pool already set\""}], "id": 2606, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3736:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2614, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3736:57:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2615, "nodeType": "ExpressionStatement", "src": "3736:57:19"}, {"expression": {"id": 2618, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 2616, "name": "debtPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2312, "src": "3803:8:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 2617, "name": "_debtPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2601, "src": "3814:9:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3803:20:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 2619, "nodeType": "ExpressionStatement", "src": "3803:20:19"}, {"eventCall": {"arguments": [{"id": 2621, "name": "_debtPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2601, "src": "3850:9:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 2620, "name": "DebtPoolSet", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 16199, "src": "3838:11:19", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$", "typeString": "function (address)"}}, "id": 2622, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3838:22:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2623, "nodeType": "EmitStatement", "src": "3833:27:19"}]}, "functionSelector": "42ae8684", "id": 2625, "implemented": true, "kind": "function", "modifiers": [{"id": 2604, "kind": "modifierInvocation", "modifierName": {"id": 2603, "name": "onlyOwner", "nameLocations": ["3716:9:19"], "nodeType": "IdentifierPath", "referencedDeclaration": 10674, "src": "3716:9:19"}, "nodeType": "ModifierInvocation", "src": "3716:9:19"}], "name": "setDebtPool", "nameLocation": "3676:11:19", "nodeType": "FunctionDefinition", "parameters": {"id": 2602, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2601, "mutability": "mutable", "name": "_debtPool", "nameLocation": "3696:9:19", "nodeType": "VariableDeclaration", "scope": 2625, "src": "3688:17:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2600, "name": "address", "nodeType": "ElementaryTypeName", "src": "3688:7:19", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3687:19:19"}, "returnParameters": {"id": 2605, "nodeType": "ParameterList", "parameters": [], "src": "3726:0:19"}, "scope": 2648, "src": "3667:200:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [16264], "body": {"id": 2646, "nodeType": "Block", "src": "3938:98:19", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 2637, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 2634, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "3956:3:19", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 2635, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3960:6:19", "memberName": "sender", "nodeType": "MemberAccess", "src": "3956:10:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"id": 2636, "name": "debtPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2312, "src": "3970:8:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "3956:22:19", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "696e76616c6964206275726e6572", "id": 2638, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3980:16:19", "typeDescriptions": {"typeIdentifier": "t_stringliteral_80e73dcc49c39719f5b6c0352100b643aa0bfbbf8d29bdd17a1cf643ea7c4ccc", "typeString": "literal_string \"invalid burner\""}, "value": "invalid burner"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_80e73dcc49c39719f5b6c0352100b643aa0bfbbf8d29bdd17a1cf643ea7c4ccc", "typeString": "literal_string \"invalid burner\""}], "id": 2633, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "3948:7:19", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 2639, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3948:49:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2640, "nodeType": "ExpressionStatement", "src": "3948:49:19"}, {"expression": {"arguments": [{"id": 2642, "name": "account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2627, "src": "4013:7:19", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 2643, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 2629, "src": "4022:6:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 2641, "name": "_burn", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 11231, "src": "4007:5:19", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 2644, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4007:22:19", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 2645, "nodeType": "ExpressionStatement", "src": "4007:22:19"}]}, "functionSelector": "9dc29fac", "id": 2647, "implemented": true, "kind": "function", "modifiers": [], "name": "burn", "nameLocation": "3882:4:19", "nodeType": "FunctionDefinition", "overrides": {"id": 2631, "nodeType": "OverrideSpecifier", "overrides": [], "src": "3929:8:19"}, "parameters": {"id": 2630, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 2627, "mutability": "mutable", "name": "account", "nameLocation": "3895:7:19", "nodeType": "VariableDeclaration", "scope": 2647, "src": "3887:15:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 2626, "name": "address", "nodeType": "ElementaryTypeName", "src": "3887:7:19", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 2629, "mutability": "mutable", "name": "amount", "nameLocation": "3912:6:19", "nodeType": "VariableDeclaration", "scope": 2647, "src": "3904:14:19", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2628, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3904:7:19", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3886:33:19"}, "returnParameters": {"id": 2632, "nodeType": "ParameterList", "parameters": [], "src": "3938:0:19"}, "scope": 2648, "src": "3873:163:19", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 2649, "src": "329:3709:19", "usedErrors": []}], "src": "45:3994:19"}, "bytecode": "60c06040523480156200001157600080fd5b5060405162001ddc38038062001ddc83398101604081905262000034916200011d565b6040518060400160405280601081526020016f21b7b734b1902232b13a102a37b5b2b760811b8152506040518060400160405280600581526020016418db98d11560da1b81525081600390816200008c9190620001e7565b5060046200009b8282620001e7565b505050620000b8620000b2620000c760201b60201c565b620000cb565b60809190915260a052620002b3565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200013157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200016d57607f821691505b6020821081036200018e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e257600081815260208120601f850160051c81016020861015620001bd5750805b601f850160051c820191505b81811015620001de57828155600101620001c9565b5050505b505050565b81516001600160401b0381111562000203576200020362000142565b6200021b8162000214845462000158565b8462000194565b602080601f8311600181146200025357600084156200023a5750858301515b600019600386901b1c1916600185901b178555620001de565b600085815260208120601f198616915b82811015620002845788860151825594840194600190910190840162000263565b5085821015620002a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051611af5620002e76000396000818161030a0152610ed40152600081816104080152610e0d0152611af56000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a611610104578063a457c2d7116100a2578063c744656511610071578063c7446565146103fa578063d653458414610403578063dd62ed3e1461042a578063f2fde38b1461043d57600080fd5b8063a457c2d7146103b9578063a9059cbb146103cc578063be9a6555146103df578063c5b42316146103e757600080fd5b80638e4499e5116100de5780638e4499e51461035857806393cd96521461037b57806395d89b411461039e5780639dc29fac146103a657600080fd5b8063715018a61461032c5780637dab4d61146103345780638da5cb5b1461034757600080fd5b806330289b151161017157806342ae86841161014b57806342ae8684146102bc5780635303f68c146102cf57806370a08231146102dc57806370a5ef9f1461030557600080fd5b806330289b1514610287578063313ce5671461029a57806339509351146102a957600080fd5b806318160ddd116101ad57806318160ddd1461022a5780631a50577f1461023c5780631ffe16671461024457806323b872dd1461027457600080fd5b806306fdde03146101d4578063095ea7b3146101f25780630a1348cd14610215575b600080fd5b6101dc610450565b6040516101e99190611621565b60405180910390f35b610205610200366004611670565b6104e2565b60405190151581526020016101e9565b61022861022336600461169a565b6104fc565b005b6002545b6040519081526020016101e9565b610228610527565b60095461025c9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b6102056102823660046116b3565b610663565b610228610295366004611707565b610687565b604051601281526020016101e9565b6102056102b7366004611670565b6106b7565b6102286102ca36600461174e565b6106d9565b6009546102059060ff1681565b61022e6102ea36600461174e565b6001600160a01b031660009081526020819052604090205490565b61022e7f000000000000000000000000000000000000000000000000000000000000000081565b61022861078a565b610228610342366004611770565b61079e565b6005546001600160a01b031661025c565b61020561036636600461174e565b60066020526000908152604090205460ff1681565b61020561038936600461174e565b60076020526000908152604090205460ff1681565b6101dc6107da565b6102286103b4366004611670565b6107e9565b6102056103c7366004611670565b610843565b6102056103da366004611670565b6108be565b6102286108cc565b6102286103f5366004611707565b610903565b61022e60085481565b61022e7f000000000000000000000000000000000000000000000000000000000000000081565b61022e6104383660046117e7565b61092f565b61022861044b36600461174e565b61095a565b60606003805461045f9061181a565b80601f016020809104026020016040519081016040528092919081815260200182805461048b9061181a565b80156104d85780601f106104ad576101008083540402835291602001916104d8565b820191906000526020600020905b8154815290600101906020018083116104bb57829003601f168201915b5050505050905090565b6000336104f08185856109d0565b60019150505b92915050565b610504610af4565b61052473f939e0a03fb07f59a73314e73794be0e57ac1b4e333084610b4e565b50565b61052f610af4565b62ed4e006008546105409190611864565b421161058c5760405162461bcd60e51b815260206004820152601660248201527510db185a5b5a5b99c81a185cc81b9bdd08195b99195960521b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015260009073f939e0a03fb07f59a73314e73794be0e57ac1b4e906370a0823190602401602060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190611877565b905061063773f939e0a03fb07f59a73314e73794be0e57ac1b4e73b27dc5f8286f063f11491c8f349053cb37718bea83610bb9565b6040517f7ce6a945967046d9c8b700a57ad6c3b65d16064f9b602f8389682dcbfe75842990600090a150565b600033610671858285610bee565b61067c858585610c62565b506001949350505050565b6008546000036106a95760405162461bcd60e51b815260040161058390611890565b6106b38282610e06565b5050565b6000336104f08185856106ca838361092f565b6106d49190611864565b6109d0565b6106e1610af4565b60095461010090046001600160a01b0316156107385760405162461bcd60e51b815260206004820152601660248201527510db185a5b481c1bdbdb08185b1c9958591e481cd95d60521b6044820152606401610583565b60098054610100600160a81b0319166101006001600160a01b038416908102919091179091556040517f897d28fc0f1cadc73effa45a06e2335d5371805b4dec6bd0bf5f91ecac62fd7590600090a250565b610792610af4565b61079c6000610e7b565b565b6008546000036107c05760405162461bcd60e51b815260040161058390611890565b6107ca8484610e06565b6107d48282610ecd565b50505050565b60606004805461045f9061181a565b60095461010090046001600160a01b031633146108395760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b210313ab93732b960911b6044820152606401610583565b6106b38282610f4f565b60003381610851828661092f565b9050838110156108b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610583565b61067c82868684036109d0565b6000336104f0818585610c62565b6108d4610af4565b426008556040517f26240d96b75a51a1529395e869d3abdb2ef34328a279633ed295753179e89fdb90600090a1565b6008546000036109255760405162461bcd60e51b815260040161058390611890565b6106b38282610ecd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610962610af4565b6001600160a01b0381166109c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610583565b61052481610e7b565b6001600160a01b038316610a325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610583565b6001600160a01b038216610a935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610583565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b0316331461079c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610583565b6040516001600160a01b03808516602483015283166044820152606481018290526107d49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611081565b6040516001600160a01b038316602482015260448101829052610be990849063a9059cbb60e01b90606401610b82565b505050565b6000610bfa848461092f565b905060001981146107d45781811015610c555760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610583565b6107d484848484036109d0565b6001600160a01b038316610cc65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610583565b6001600160a01b038216610d285760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610583565b6001600160a01b03831660009081526020819052604090205481811015610da05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610583565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107d4565b610e3382827f00000000000000000000000000000000000000000000000000000000000000006006611156565b610e3d33836112b0565b60408051338152602081018490527f925415f7b2251fe6a324568825a67df70e0e191aed36919f23fce8e94703cbf791015b60405180910390a15050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610efa82827f00000000000000000000000000000000000000000000000000000000000000006007611156565b610f1973f939e0a03fb07f59a73314e73794be0e57ac1b4e3384610bb9565b60408051338152602081018490527f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae99101610e6f565b6001600160a01b038216610faf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610583565b6001600160a01b038216600090815260208190526040902054818110156110235760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610583565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60006110d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661136f9092919063ffffffff16565b90508051600014806110f75750808060200190518101906110f791906118c0565b610be95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610583565b6040516bffffffffffffffffffffffff193360601b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506111ac8184866111a590611952565b9190611386565b6111e85760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610583565b4262ed4e006008546111fa9190611864565b101561123d5760405162461bcd60e51b815260206004820152601260248201527110db185a5b5a5b99c81a185cc8195b99195960721b6044820152606401610583565b3360009081526020839052604090205460ff161561128f5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610583565b5033600090815260209190915260409020805460ff19166001179055505050565b6001600160a01b0382166113065760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610583565b80600260008282546113189190611864565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606061137e8484600085611484565b949350505050565b602083015151835160009190825b82811015611479576113a7600283611a32565b61ffff166000036114085785876020015182815181106113c9576113c9611a53565b60200260200101516040516020016113eb929190918252602082015260400190565b60405160208183030381529060405280519060200120955061145a565b8660200151818151811061141e5761141e611a53565b602002602001015186604051602001611441929190918252602082015260400190565b6040516020818303038152906040528051906020012095505b611465600283611a69565b91508061147181611a8a565b915050611394565b505050911492915050565b6060824710156114e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610583565b600080866001600160a01b031685876040516115019190611aa3565b60006040518083038185875af1925050503d806000811461153e576040519150601f19603f3d011682016040523d82523d6000602084013e611543565b606091505b50915091506115548783838761155f565b979650505050505050565b606083156115ce5782516000036115c7576001600160a01b0385163b6115c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610583565b508161137e565b61137e83838151156115e35781518083602001fd5b8060405162461bcd60e51b81526004016105839190611621565b60005b83811015611618578181015183820152602001611600565b50506000910152565b60208152600082518060208401526116408160408501602087016115fd565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461166b57600080fd5b919050565b6000806040838503121561168357600080fd5b61168c83611654565b946020939093013593505050565b6000602082840312156116ac57600080fd5b5035919050565b6000806000606084860312156116c857600080fd5b6116d184611654565b92506116df60208501611654565b9150604084013590509250925092565b60006040828403121561170157600080fd5b50919050565b6000806040838503121561171a57600080fd5b82359150602083013567ffffffffffffffff81111561173857600080fd5b611744858286016116ef565b9150509250929050565b60006020828403121561176057600080fd5b61176982611654565b9392505050565b6000806000806080858703121561178657600080fd5b84359350602085013567ffffffffffffffff808211156117a557600080fd5b6117b1888389016116ef565b94506040870135935060608701359150808211156117ce57600080fd5b506117db878288016116ef565b91505092959194509250565b600080604083850312156117fa57600080fd5b61180383611654565b915061181160208401611654565b90509250929050565b600181811c9082168061182e57607f821691505b60208210810361170157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104f6576104f661184e565b60006020828403121561188957600080fd5b5051919050565b602080825260169082015275436c61696d696e67206973206e6f742061637469766560501b604082015260600190565b6000602082840312156118d257600080fd5b8151801515811461176957600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561191b5761191b6118e2565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561194a5761194a6118e2565b604052919050565b60006040823603121561196457600080fd5b61196c6118f8565b823561ffff8116811461197e57600080fd5b815260208381013567ffffffffffffffff8082111561199c57600080fd5b9085019036601f8301126119af57600080fd5b8135818111156119c1576119c16118e2565b8060051b91506119d2848301611921565b81815291830184019184810190368411156119ec57600080fd5b938501935b83851015611a0a578435825293850193908501906119f1565b94860194909452509295945050505050565b634e487b7160e01b600052601260045260246000fd5b600061ffff80841680611a4757611a47611a1c565b92169190910692915050565b634e487b7160e01b600052603260045260246000fd5b600061ffff80841680611a7e57611a7e611a1c565b92169190910492915050565b600060018201611a9c57611a9c61184e565b5060010190565b60008251611ab58184602087016115fd565b919091019291505056fea2646970667358221220a660bc2c9169c7b1b2450efa05e3e3735416d98611c28b4149cfb2497573b9f764736f6c63430008110033", "bytecodeSha1": "a02983c9fcda6479d365aef12b20edec8a4b6ddb", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.17+commit.8df45f5f"}, "contractName": "ConicDebtToken", "coverageMap": {"branches": {"10": {}, "11": {"SafeERC20._callOptionalReturn": {"116": [5728, 5750, true], "117": [5754, 5784, true]}}, "12": {"Address._revert": {"101": [8980, 9001, false]}, "Address.functionCallWithValue": {"98": [5362, 5392, true]}, "Address.verifyCallResultFromTarget": {"99": [7879, 7886, false], "100": [7906, 7928, false]}}, "13": {}, "19": {"ConicDebtToken._claim": {"95": [3113, 3144, true], "96": [3180, 3223, true], "97": [3264, 3286, true]}, "ConicDebtToken.burn": {"93": [3956, 3978, true]}, "ConicDebtToken.claimAll": {"92": [2161, 2173, true]}, "ConicDebtToken.claimDebtToken": {"90": [1664, 1676, true]}, "ConicDebtToken.claimRefund": {"94": [1854, 1866, true]}, "ConicDebtToken.setDebtPool": {"91": [3744, 3766, true]}, "ConicDebtToken.terminateClaiming": {"89": [3423, 3465, true]}}, "35": {}, "5": {"Ownable._checkOwner": {"115": [1422, 1445, true]}, "Ownable.transferOwnership": {"114": [2162, 2184, true]}}, "64": {"MerkleProof.isValid": {"113": [459, 477, false]}}, "7": {"ERC20._approve": {"103": [10558, 10577, true], "104": [10636, 10657, true]}, "ERC20._burn": {"110": [9458, 9479, true], "111": [9649, 9673, true]}, "ERC20._mint": {"112": [8603, 8624, true]}, "ERC20._spendAllowance": {"105": [11244, 11281, false], "106": [11305, 11331, true]}, "ERC20._transfer": {"107": [7552, 7570, true], "108": [7630, 7646, true], "109": [7801, 7822, true]}, "ERC20.decreaseAllowance": {"102": [6792, 6827, true]}}, "8": {}, "9": {}}, "statements": {"10": {}, "11": {"SafeERC20._callOptionalReturn": {"67": [5720, 5831]}, "SafeERC20.safeTransfer": {"44": [1023, 1109]}, "SafeERC20.safeTransferFrom": {"43": [1455, 1551]}}, "12": {"Address._revert": {"88": [9324, 9344]}, "Address.functionCall": {"76": [4265, 4324]}, "Address.functionCallWithValue": {"82": [5354, 5435], "83": [5528, 5604]}, "Address.isContract": {"84": [1695, 1725]}, "Address.verifyCallResultFromTarget": {"85": [8113, 8173], "86": [8201, 8218], "87": [8249, 8282]}}, "13": {"Context._msgSender": {"5": [712, 729]}}, "19": {"ConicDebtToken._claim": {"68": [3105, 3162], "69": [3172, 3246], "70": [3256, 3306], "71": [3316, 3344]}, "ConicDebtToken._claimDebtToken": {"54": [2685, 2747], "55": [2757, 2782], "56": [2792, 2833]}, "ConicDebtToken._claimRefund": {"59": [2417, 2473], "60": [2483, 2530], "61": [2540, 2578]}, "ConicDebtToken.burn": {"26": [3948, 3997], "27": [4007, 4029]}, "ConicDebtToken.claimAll": {"22": [2153, 2200], "23": [2211, 2264], "24": [2274, 2313]}, "ConicDebtToken.claimDebtToken": {"15": [1656, 1703], "16": [1713, 1743]}, "ConicDebtToken.claimRefund": {"33": [1846, 1893], "34": [1903, 1930]}, "ConicDebtToken.depositRefund": {"8": [1368, 1434]}, "ConicDebtToken.setDebtPool": {"18": [3736, 3793], "19": [3803, 3823], "20": [3833, 3860]}, "ConicDebtToken.start": {"31": [1493, 1518], "32": [1528, 1550]}, "ConicDebtToken.terminateClaiming": {"9": [3415, 3492], "10": [3571, 3619], "11": [3629, 3654]}}, "35": {}, "5": {"Ownable._checkOwner": {"42": [1414, 1482]}, "Ownable._transferOwnership": {"57": [2534, 2551], "58": [2561, 2606]}, "Ownable.owner": {"3": [1266, 1279]}, "Ownable.renounceOwnership": {"21": [1888, 1918]}, "Ownable.transferOwnership": {"36": [2154, 2227], "37": [2237, 2265]}}, "64": {"MerkleProof.isValid": {"77": [497, 554], "78": [593, 650], "79": [678, 692], "80": [436, 439], "81": [713, 738]}}, "7": {"ERC20._approve": {"38": [10550, 10618], "39": [10628, 10696], "40": [10707, 10743], "41": [10753, 10790]}, "ERC20._burn": {"62": [9450, 9517], "63": [9641, 9712], "64": [9746, 9790], "65": [9883, 9905], "66": [9926, 9968]}, "ERC20._mint": {"72": [8595, 8660], "73": [8731, 8753], "74": [8899, 8927], "75": [8947, 8989]}, "ERC20._spendAllowance": {"45": [11297, 11365], "46": [11407, 11458]}, "ERC20._transfer": {"47": [7544, 7612], "48": [7622, 7686], "49": [7793, 7865], "50": [7899, 7937], "51": [8114, 8137], "52": [8158, 8189], "53": [8200, 8237]}, "ERC20.allowance": {"35": [4095, 4129]}, "ERC20.approve": {"6": [4581, 4613], "7": [4623, 4634]}, "ERC20.balanceOf": {"2": [3512, 3537]}, "ERC20.decimals": {"1": [3179, 3188]}, "ERC20.decreaseAllowance": {"28": [6784, 6869], "29": [6903, 6963]}, "ERC20.increaseAllowance": {"17": [5996, 6060]}, "ERC20.name": {"4": [2237, 2249]}, "ERC20.symbol": {"25": [2450, 2464]}, "ERC20.totalSupply": {"0": [3335, 3354]}, "ERC20.transfer": {"30": [3873, 3901]}, "ERC20.transferFrom": {"12": [5356, 5394], "13": [5404, 5431], "14": [5441, 5452]}}, "8": {}, "9": {}}}, "dependencies": ["node_modules/@openzeppelin/Address", "node_modules/@openzeppelin/Context", "node_modules/@openzeppelin/ERC20", "IConicDebtToken", "node_modules/@openzeppelin/IERC20", "node_modules/@openzeppelin/IERC20Metadata", "node_modules/@openzeppelin/IERC20Permit", "MerkleProof", "node_modules/@openzeppelin/Ownable", "node_modules/@openzeppelin/SafeERC20"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063715018a611610104578063a457c2d7116100a2578063c744656511610071578063c7446565146103fa578063d653458414610403578063dd62ed3e1461042a578063f2fde38b1461043d57600080fd5b8063a457c2d7146103b9578063a9059cbb146103cc578063be9a6555146103df578063c5b42316146103e757600080fd5b80638e4499e5116100de5780638e4499e51461035857806393cd96521461037b57806395d89b411461039e5780639dc29fac146103a657600080fd5b8063715018a61461032c5780637dab4d61146103345780638da5cb5b1461034757600080fd5b806330289b151161017157806342ae86841161014b57806342ae8684146102bc5780635303f68c146102cf57806370a08231146102dc57806370a5ef9f1461030557600080fd5b806330289b1514610287578063313ce5671461029a57806339509351146102a957600080fd5b806318160ddd116101ad57806318160ddd1461022a5780631a50577f1461023c5780631ffe16671461024457806323b872dd1461027457600080fd5b806306fdde03146101d4578063095ea7b3146101f25780630a1348cd14610215575b600080fd5b6101dc610450565b6040516101e99190611621565b60405180910390f35b610205610200366004611670565b6104e2565b60405190151581526020016101e9565b61022861022336600461169a565b6104fc565b005b6002545b6040519081526020016101e9565b610228610527565b60095461025c9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101e9565b6102056102823660046116b3565b610663565b610228610295366004611707565b610687565b604051601281526020016101e9565b6102056102b7366004611670565b6106b7565b6102286102ca36600461174e565b6106d9565b6009546102059060ff1681565b61022e6102ea36600461174e565b6001600160a01b031660009081526020819052604090205490565b61022e7f000000000000000000000000000000000000000000000000000000000000000081565b61022861078a565b610228610342366004611770565b61079e565b6005546001600160a01b031661025c565b61020561036636600461174e565b60066020526000908152604090205460ff1681565b61020561038936600461174e565b60076020526000908152604090205460ff1681565b6101dc6107da565b6102286103b4366004611670565b6107e9565b6102056103c7366004611670565b610843565b6102056103da366004611670565b6108be565b6102286108cc565b6102286103f5366004611707565b610903565b61022e60085481565b61022e7f000000000000000000000000000000000000000000000000000000000000000081565b61022e6104383660046117e7565b61092f565b61022861044b36600461174e565b61095a565b60606003805461045f9061181a565b80601f016020809104026020016040519081016040528092919081815260200182805461048b9061181a565b80156104d85780601f106104ad576101008083540402835291602001916104d8565b820191906000526020600020905b8154815290600101906020018083116104bb57829003601f168201915b5050505050905090565b6000336104f08185856109d0565b60019150505b92915050565b610504610af4565b61052473f939e0a03fb07f59a73314e73794be0e57ac1b4e333084610b4e565b50565b61052f610af4565b62ed4e006008546105409190611864565b421161058c5760405162461bcd60e51b815260206004820152601660248201527510db185a5b5a5b99c81a185cc81b9bdd08195b99195960521b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015260009073f939e0a03fb07f59a73314e73794be0e57ac1b4e906370a0823190602401602060405180830381865afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190611877565b905061063773f939e0a03fb07f59a73314e73794be0e57ac1b4e73b27dc5f8286f063f11491c8f349053cb37718bea83610bb9565b6040517f7ce6a945967046d9c8b700a57ad6c3b65d16064f9b602f8389682dcbfe75842990600090a150565b600033610671858285610bee565b61067c858585610c62565b506001949350505050565b6008546000036106a95760405162461bcd60e51b815260040161058390611890565b6106b38282610e06565b5050565b6000336104f08185856106ca838361092f565b6106d49190611864565b6109d0565b6106e1610af4565b60095461010090046001600160a01b0316156107385760405162461bcd60e51b815260206004820152601660248201527510db185a5b481c1bdbdb08185b1c9958591e481cd95d60521b6044820152606401610583565b60098054610100600160a81b0319166101006001600160a01b038416908102919091179091556040517f897d28fc0f1cadc73effa45a06e2335d5371805b4dec6bd0bf5f91ecac62fd7590600090a250565b610792610af4565b61079c6000610e7b565b565b6008546000036107c05760405162461bcd60e51b815260040161058390611890565b6107ca8484610e06565b6107d48282610ecd565b50505050565b60606004805461045f9061181a565b60095461010090046001600160a01b031633146108395760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b210313ab93732b960911b6044820152606401610583565b6106b38282610f4f565b60003381610851828661092f565b9050838110156108b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610583565b61067c82868684036109d0565b6000336104f0818585610c62565b6108d4610af4565b426008556040517f26240d96b75a51a1529395e869d3abdb2ef34328a279633ed295753179e89fdb90600090a1565b6008546000036109255760405162461bcd60e51b815260040161058390611890565b6106b38282610ecd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610962610af4565b6001600160a01b0381166109c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610583565b61052481610e7b565b6001600160a01b038316610a325760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610583565b6001600160a01b038216610a935760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610583565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b0316331461079c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610583565b6040516001600160a01b03808516602483015283166044820152606481018290526107d49085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611081565b6040516001600160a01b038316602482015260448101829052610be990849063a9059cbb60e01b90606401610b82565b505050565b6000610bfa848461092f565b905060001981146107d45781811015610c555760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610583565b6107d484848484036109d0565b6001600160a01b038316610cc65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610583565b6001600160a01b038216610d285760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610583565b6001600160a01b03831660009081526020819052604090205481811015610da05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610583565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107d4565b610e3382827f00000000000000000000000000000000000000000000000000000000000000006006611156565b610e3d33836112b0565b60408051338152602081018490527f925415f7b2251fe6a324568825a67df70e0e191aed36919f23fce8e94703cbf791015b60405180910390a15050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610efa82827f00000000000000000000000000000000000000000000000000000000000000006007611156565b610f1973f939e0a03fb07f59a73314e73794be0e57ac1b4e3384610bb9565b60408051338152602081018490527f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae99101610e6f565b6001600160a01b038216610faf5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610583565b6001600160a01b038216600090815260208190526040902054818110156110235760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610583565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60006110d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661136f9092919063ffffffff16565b90508051600014806110f75750808060200190518101906110f791906118c0565b610be95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610583565b6040516bffffffffffffffffffffffff193360601b166020820152603481018590526000906054016040516020818303038152906040528051906020012090506111ac8184866111a590611952565b9190611386565b6111e85760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610583565b4262ed4e006008546111fa9190611864565b101561123d5760405162461bcd60e51b815260206004820152601260248201527110db185a5b5a5b99c81a185cc8195b99195960721b6044820152606401610583565b3360009081526020839052604090205460ff161561128f5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610583565b5033600090815260209190915260409020805460ff19166001179055505050565b6001600160a01b0382166113065760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610583565b80600260008282546113189190611864565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606061137e8484600085611484565b949350505050565b602083015151835160009190825b82811015611479576113a7600283611a32565b61ffff166000036114085785876020015182815181106113c9576113c9611a53565b60200260200101516040516020016113eb929190918252602082015260400190565b60405160208183030381529060405280519060200120955061145a565b8660200151818151811061141e5761141e611a53565b602002602001015186604051602001611441929190918252602082015260400190565b6040516020818303038152906040528051906020012095505b611465600283611a69565b91508061147181611a8a565b915050611394565b505050911492915050565b6060824710156114e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610583565b600080866001600160a01b031685876040516115019190611aa3565b60006040518083038185875af1925050503d806000811461153e576040519150601f19603f3d011682016040523d82523d6000602084013e611543565b606091505b50915091506115548783838761155f565b979650505050505050565b606083156115ce5782516000036115c7576001600160a01b0385163b6115c75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610583565b508161137e565b61137e83838151156115e35781518083602001fd5b8060405162461bcd60e51b81526004016105839190611621565b60005b83811015611618578181015183820152602001611600565b50506000910152565b60208152600082518060208401526116408160408501602087016115fd565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461166b57600080fd5b919050565b6000806040838503121561168357600080fd5b61168c83611654565b946020939093013593505050565b6000602082840312156116ac57600080fd5b5035919050565b6000806000606084860312156116c857600080fd5b6116d184611654565b92506116df60208501611654565b9150604084013590509250925092565b60006040828403121561170157600080fd5b50919050565b6000806040838503121561171a57600080fd5b82359150602083013567ffffffffffffffff81111561173857600080fd5b611744858286016116ef565b9150509250929050565b60006020828403121561176057600080fd5b61176982611654565b9392505050565b6000806000806080858703121561178657600080fd5b84359350602085013567ffffffffffffffff808211156117a557600080fd5b6117b1888389016116ef565b94506040870135935060608701359150808211156117ce57600080fd5b506117db878288016116ef565b91505092959194509250565b600080604083850312156117fa57600080fd5b61180383611654565b915061181160208401611654565b90509250929050565b600181811c9082168061182e57607f821691505b60208210810361170157634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104f6576104f661184e565b60006020828403121561188957600080fd5b5051919050565b602080825260169082015275436c61696d696e67206973206e6f742061637469766560501b604082015260600190565b6000602082840312156118d257600080fd5b8151801515811461176957600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561191b5761191b6118e2565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561194a5761194a6118e2565b604052919050565b60006040823603121561196457600080fd5b61196c6118f8565b823561ffff8116811461197e57600080fd5b815260208381013567ffffffffffffffff8082111561199c57600080fd5b9085019036601f8301126119af57600080fd5b8135818111156119c1576119c16118e2565b8060051b91506119d2848301611921565b81815291830184019184810190368411156119ec57600080fd5b938501935b83851015611a0a578435825293850193908501906119f1565b94860194909452509295945050505050565b634e487b7160e01b600052601260045260246000fd5b600061ffff80841680611a4757611a47611a1c565b92169190910692915050565b634e487b7160e01b600052603260045260246000fd5b600061ffff80841680611a7e57611a7e611a1c565b92169190910492915050565b600060018201611a9c57611a9c61184e565b5060010190565b60008251611ab58184602087016115fd565b919091019291505056fea2646970667358221220a660bc2c9169c7b1b2450efa05e3e3735416d98611c28b4149cfb2497573b9f764736f6c63430008110033", "deployedSourceMap": "329:3709:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:67;;1265:22;1247:41;;1235:2;1220:18;4444:197:7;1107:187:67;1300:141:19;;;;;;:::i;:::-;;:::i;:::-;;3255:106:7;3342:12;;3255:106;;;1630:25:67;;;1618:2;1603:18;3255:106:7;1484:177:67;3357:304:19;;;:::i;1033:23::-;;;;;;;;-1:-1:-1;;;;;1033:23:19;;;;;;-1:-1:-1;;;;;1830:32:67;;;1812:51;;1800:2;1785:18;1033:23:19;1666:203:67;5203:256:7;;;;;;:::i;:::-;;:::i;1563:187:19:-;;;;;;:::i;:::-;;:::i;3104:91:7:-;;;3186:2;2933:36:67;;2921:2;2906:18;3104:91:7;2791:184:67;5854:234:7;;;;;;:::i;:::-;;:::i;3667:200:19:-;;;;;;:::i;:::-;;:::i;1002:25::-;;;;;;;;;3419:125:7;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:7;3493:7;3519:18;;;;;;;;;;;;3419:125;816:41:19;;;;;1824:101:5;;;:::i;1943:377:19:-;;;;;;:::i;:::-;;:::i;1201:85:5:-;1273:6;;-1:-1:-1;;;;;1273:6:5;1201:85;;864:50:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;920:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2369:102:7;;;:::i;3873:163:19:-;;;;;;:::i;:::-;;:::i;6575:427:7:-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1447:110:19:-;;;:::i;1756:181::-;;;;;;:::i;:::-;;:::i;974:22::-;;;;;;766:44;;;;;3987:149:7;;;;;;:::i;:::-;;:::i;2074:198:5:-;;;;;;:::i;:::-;;:::i;2158:98:7:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:13;4581:32:7;719:10:13;4597:7:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;1300:141:19:-;1094:13:5;:11;:13::i;:::-;1368:66:19::1;717:42;1400:10;1420:4;1427:6:::0;1368:31:::1;:66::i;:::-;1300:141:::0;:::o;3357:304::-;1094:13:5;:11;:13::i;:::-;572:11:19::1;3441:7;;:24;;;;:::i;:::-;3423:15;:42;3415:77;;;::::0;-1:-1:-1;;;3415:77:19;;5214:2:67;3415:77:19::1;::::0;::::1;5196:21:67::0;5253:2;5233:18;;;5226:30;-1:-1:-1;;;5272:18:67;;;5265:52;5334:18;;3415:77:19::1;;;;;;;;;3522:39;::::0;-1:-1:-1;;;3522:39:19;;3555:4:::1;3522:39;::::0;::::1;1812:51:67::0;3502:17:19::1;::::0;717:42:::1;::::0;3522:24:::1;::::0;1785:18:67;;3522:39:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3502:59:::0;-1:-1:-1;3571:48:19::1;717:42;626;3502:59:::0;3571:27:::1;:48::i;:::-;3634:20;::::0;::::1;::::0;;;::::1;3405:256;3357:304::o:0;5203:256:7:-;5300:4;719:10:13;5356:38:7;5372:4;719:10:13;5387:6:7;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:7;;5203:256;-1:-1:-1;;;;5203:256:7:o;1563:187:19:-;1664:7;;1675:1;1664:12;1656:47;;;;-1:-1:-1;;;1656:47:19;;;;;;;:::i;:::-;1713:30;1729:6;1737:5;1713:15;:30::i;:::-;1563:187;;:::o;5854:234:7:-;5942:4;719:10:13;5996:64:7;719:10:13;6012:7:7;6049:10;6021:25;719:10:13;6012:7:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3667:200:19:-;1094:13:5;:11;:13::i;:::-;3744:8:19::1;::::0;::::1;::::0;::::1;-1:-1:-1::0;;;;;3744:8:19::1;:22:::0;3736:57:::1;;;::::0;-1:-1:-1;;;3736:57:19;;6105:2:67;3736:57:19::1;::::0;::::1;6087:21:67::0;6144:2;6124:18;;;6117:30;-1:-1:-1;;;6163:18:67;;;6156:52;6225:18;;3736:57:19::1;5903:346:67::0;3736:57:19::1;3803:8;:20:::0;;-1:-1:-1;;;;;;3803:20:19::1;;-1:-1:-1::0;;;;;3803:20:19;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3838:22:::1;::::0;::::1;::::0;-1:-1:-1;;3838:22:19::1;3667:200:::0;:::o;1824:101:5:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1943:377:19:-;2161:7;;2172:1;2161:12;2153:47;;;;-1:-1:-1;;;2153:47:19;;;;;;;:::i;:::-;2211:53;2227:15;2244:19;2211:15;:53::i;:::-;2274:39;2287:12;2301:11;2274:12;:39::i;:::-;1943:377;;;;:::o;2369:102:7:-;2425:13;2457:7;2450:14;;;;;:::i;3873:163:19:-;3970:8;;;;;-1:-1:-1;;;;;3970:8:19;3956:10;:22;3948:49;;;;-1:-1:-1;;;3948:49:19;;6456:2:67;3948:49:19;;;6438:21:67;6495:2;6475:18;;;6468:30;-1:-1:-1;;;6514:18:67;;;6507:44;6568:18;;3948:49:19;6254:338:67;3948:49:19;4007:22;4013:7;4022:6;4007:5;:22::i;6575:427:7:-;6668:4;719:10:13;6668:4:7;6749:25;719:10:13;6766:7:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:7;;6799:2:67;6784:85:7;;;6781:21:67;6838:2;6818:18;;;6811:30;6877:34;6857:18;;;6850:62;-1:-1:-1;;;6928:18:67;;;6921:35;6973:19;;6784:85:7;6597:401:67;6784:85:7;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:13;3873:28:7;719:10:13;3890:2:7;3894:6;3873:9;:28::i;1447:110:19:-;1094:13:5;:11;:13::i;:::-;1503:15:19::1;1493:7;:25:::0;1533:17:::1;::::0;::::1;::::0;;;::::1;1447:110::o:0;1756:181::-;1854:7;;1865:1;1854:12;1846:47;;;;-1:-1:-1;;;1846:47:19;;;;;;;:::i;:::-;1903:27;1916:6;1924:5;1903:12;:27::i;3987:149:7:-;-1:-1:-1;;;;;4102:18:7;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:5:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:5;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:5;;7205:2:67;2154:73:5::1;::::0;::::1;7187:21:67::0;7244:2;7224:18;;;7217:30;7283:34;7263:18;;;7256:62;-1:-1:-1;;;7334:18:67;;;7327:36;7380:19;;2154:73:5::1;7003:402:67::0;2154:73:5::1;2237:28;2256:8;2237:18;:28::i;10457:340:7:-:0;-1:-1:-1;;;;;10558:19:7;;10550:68;;;;-1:-1:-1;;;10550:68:7;;7612:2:67;10550:68:7;;;7594:21:67;7651:2;7631:18;;;7624:30;7690:34;7670:18;;;7663:62;-1:-1:-1;;;7741:18:67;;;7734:34;7785:19;;10550:68:7;7410:400:67;10550:68:7;-1:-1:-1;;;;;10636:21:7;;10628:68;;;;-1:-1:-1;;;10628:68:7;;8017:2:67;10628:68:7;;;7999:21:67;8056:2;8036:18;;;8029:30;8095:34;8075:18;;;8068:62;-1:-1:-1;;;8146:18:67;;;8139:32;8188:19;;10628:68:7;7815:398:67;10628:68:7;-1:-1:-1;;;;;10707:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1630:25:67;;;10758:32:7;;1603:18:67;10758:32:7;;;;;;;10457:340;;;:::o;1359:130:5:-;1273:6;;-1:-1:-1;;;;;1273:6:5;719:10:13;1422:23:5;1414:68;;;;-1:-1:-1;;;1414:68:5;;8420:2:67;1414:68:5;;;8402:21:67;;;8439:18;;;8432:30;8498:34;8478:18;;;8471:62;8550:18;;1414:68:5;8218:356:67;1355:203:11;1482:68;;-1:-1:-1;;;;;8837:15:67;;;1482:68:11;;;8819:34:67;8889:15;;8869:18;;;8862:43;8921:18;;;8914:34;;;1455:96:11;;1475:5;;-1:-1:-1;;;1505:27:11;8754:18:67;;1482:68:11;;;;-1:-1:-1;;1482:68:11;;;;;;;;;;;;;;-1:-1:-1;;;;;1482:68:11;-1:-1:-1;;;;;;1482:68:11;;;;;;;;;;1455:19;:96::i;941:175::-;1050:58;;-1:-1:-1;;;;;9151:32:67;;1050:58:11;;;9133:51:67;9200:18;;;9193:34;;;1023:86:11;;1043:5;;-1:-1:-1;;;1073:23:11;9106:18:67;;1050:58:11;8959:274:67;1023:86:11;941:175;;;:::o;11078:411:7:-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:7;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:7;;9440:2:67;11297:68:7;;;9422:21:67;9479:2;9459:18;;;9452:30;9518:31;9498:18;;;9491:59;9567:18;;11297:68:7;9238:353:67;11297:68:7;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;7456:788::-;-1:-1:-1;;;;;7552:18:7;;7544:68;;;;-1:-1:-1;;;7544:68:7;;9798:2:67;7544:68:7;;;9780:21:67;9837:2;9817:18;;;9810:30;9876:34;9856:18;;;9849:62;-1:-1:-1;;;9927:18:67;;;9920:35;9972:19;;7544:68:7;9596:401:67;7544:68:7;-1:-1:-1;;;;;7630:16:7;;7622:64;;;;-1:-1:-1;;;7622:64:7;;10204:2:67;7622:64:7;;;10186:21:67;10243:2;10223:18;;;10216:30;10282:34;10262:18;;;10255:62;-1:-1:-1;;;10333:18:67;;;10326:33;10376:19;;7622:64:7;10002:399:67;7622:64:7;-1:-1:-1;;;;;7768:15:7;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:7;;10608:2:67;7793:72:7;;;10590:21:67;10647:2;10627:18;;;10620:30;10686:34;10666:18;;;10659:62;-1:-1:-1;;;10737:18:67;;;10730:36;10783:19;;7793:72:7;10406:402:67;7793:72:7;-1:-1:-1;;;;;7899:15:7;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1630:25:67;;;8114:13:7;;8163:26;;1603:18:67;8163:26:7;;;;;;;8200:37;941:175:11;2591:249:19;2685:62;2692:6;2700:5;2707:19;2728:18;2685:6;:62::i;:::-;2757:25;2763:10;2775:6;2757:5;:25::i;:::-;2797:36;;;2814:10;9133:51:67;;9215:2;9200:18;;9193:34;;;2797:36:19;;9106:18:67;2797:36:19;;;;;;;;2591:249;;:::o;2426:187:5:-;2518:6;;;-1:-1:-1;;;;;2534:17:5;;;-1:-1:-1;;;;;;2534:17:5;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2326:259:19:-;2417:56;2424:6;2432:5;2439:16;2457:15;2417:6;:56::i;:::-;2483:47;717:42;2511:10;2523:6;2483:27;:47::i;:::-;2545:33;;;2559:10;9133:51:67;;9215:2;9200:18;;9193:34;;;2545:33:19;;9106:18:67;2545:33:19;8959:274:67;9375:659:7;-1:-1:-1;;;;;9458:21:7;;9450:67;;;;-1:-1:-1;;;9450:67:7;;11015:2:67;9450:67:7;;;10997:21:67;11054:2;11034:18;;;11027:30;11093:34;11073:18;;;11066:62;-1:-1:-1;;;11144:18:67;;;11137:31;11185:19;;9450:67:7;10813:397:67;9450:67:7;-1:-1:-1;;;;;9613:18:7;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:7;;11417:2:67;9641:71:7;;;11399:21:67;11456:2;11436:18;;;11429:30;11495:34;11475:18;;;11468:62;-1:-1:-1;;;11546:18:67;;;11539:32;11588:19;;9641:71:7;11215:398:67;9641:71:7;-1:-1:-1;;;;;9746:18:7;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1630:25:67;;;9746:9:7;;:18;9931:37;;1603:18:67;9931:37:7;;;;;;;941:175:11;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:11;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:11;;12102:2:67;5720:111:11;;;12084:21:67;12141:2;12121:18;;;12114:30;12180:34;12160:18;;;12153:62;-1:-1:-1;;;12231:18:67;;;12224:40;12281:19;;5720:111:11;11900:406:67;2846:505:19;3058:36;;-1:-1:-1;;3075:10:19;12488:2:67;12484:15;12480:53;3058:36:19;;;12468:66:67;12550:12;;;12543:28;;;3033:12:19;;12587::67;;3058:36:19;;;;;;;;;;;;3048:47;;;;;;3033:62;;3113:31;3127:4;3133:10;3113:5;:13;;;:::i;:::-;;:31;:13;:31::i;:::-;3105:57;;;;-1:-1:-1;;;3105:57:19;;14713:2:67;3105:57:19;;;14695:21:67;14752:2;14732:18;;;14725:30;-1:-1:-1;;;14771:18:67;;;14764:43;14824:18;;3105:57:19;14511:337:67;3105:57:19;3208:15;572:11;3180:7;;:24;;;;:::i;:::-;:43;;3172:74;;;;-1:-1:-1;;;3172:74:19;;15055:2:67;3172:74:19;;;15037:21:67;15094:2;15074:18;;;15067:30;-1:-1:-1;;;15113:18:67;;;15106:48;15171:18;;3172:74:19;14853:342:67;3172:74:19;3275:10;3265:21;;;;;;;;;;;;;;3264:22;3256:50;;;;-1:-1:-1;;;3256:50:19;;15402:2:67;3256:50:19;;;15384:21:67;15441:2;15421:18;;;15414:30;-1:-1:-1;;;15460:18:67;;;15453:45;15515:18;;3256:50:19;15200:339:67;3256:50:19;-1:-1:-1;3326:10:19;3316:21;;;;;;;;;;;;:28;;-1:-1:-1;;3316:28:19;3340:4;3316:28;;;-1:-1:-1;;;2846:505:19:o;8520:535:7:-;-1:-1:-1;;;;;8603:21:7;;8595:65;;;;-1:-1:-1;;;8595:65:7;;15746:2:67;8595:65:7;;;15728:21:67;15785:2;15765:18;;;15758:30;15824:33;15804:18;;;15797:61;15875:18;;8595:65:7;15544:355:67;8595:65:7;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:7;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1630:25:67;;;8952:37:7;;1603:18:67;8952:37:7;;;;;;;1563:187:19;;:::o;4108:223:12:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:12:o;174:571:64:-;331:12;;;;:19;379:15;;298:4;;331:19;298:4;404:299;428:6;424:1;:10;404:299;;;459:13;471:1;459:9;:13;:::i;:::-;:18;;476:1;459:18;455:210;;531:4;537:5;:12;;;550:1;537:15;;;;;;;;:::i;:::-;;;;;;;514:39;;;;;;;;16509:19:67;;;16553:2;16544:12;;16537:28;16590:2;16581:12;;16352:247;514:39:64;;;;;;;;;;;;;504:50;;;;;;497:57;;455:210;;;627:5;:12;;;640:1;627:15;;;;;;;;:::i;:::-;;;;;;;644:4;610:39;;;;;;;;16509:19:67;;;16553:2;16544:12;;16537:28;16590:2;16581:12;;16352:247;610:39:64;;;;;;;;;;;;;600:50;;;;;;593:57;;455:210;678:14;691:1;678:14;;:::i;:::-;;-1:-1:-1;436:3:64;;;;:::i;:::-;;;;404:299;;;-1:-1:-1;;;720:18:64;;;174:571;-1:-1:-1;;174:571:64:o;5165:446:12:-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:12;;17138:2:67;5354:81:12;;;17120:21:67;17177:2;17157:18;;;17150:30;17216:34;17196:18;;;17189:62;-1:-1:-1;;;17267:18:67;;;17260:36;17313:19;;5354:81:12;16936:402:67;5354:81:12;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:12;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:12:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:12;;;8113:60;;;;-1:-1:-1;;;8113:60:12;;17837:2:67;8113:60:12;;;17819:21:67;17876:2;17856:18;;;17849:30;17915:31;17895:18;;;17888:59;17964:18;;8113:60:12;17635:353:67;8113:60:12;-1:-1:-1;8208:10:12;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:12;;;;;;;;:::i;14:250:67:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:67;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:67;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:67:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:67;;777:42;;767:70;;833:1;830;823:12;767:70;670:173;;;:::o;848:254::-;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:67:o;1299:180::-;1358:6;1411:2;1399:9;1390:7;1386:23;1382:32;1379:52;;;1427:1;1424;1417:12;1379:52;-1:-1:-1;1450:23:67;;1299:180;-1:-1:-1;1299:180:67:o;1874:328::-;1951:6;1959;1967;2020:2;2008:9;1999:7;1995:23;1991:32;1988:52;;;2036:1;2033;2026:12;1988:52;2059:29;2078:9;2059:29;:::i;:::-;2049:39;;2107:38;2141:2;2130:9;2126:18;2107:38;:::i;:::-;2097:48;;2192:2;2181:9;2177:18;2164:32;2154:42;;1874:328;;;;;:::o;2207:153::-;2265:5;2310:2;2301:6;2296:3;2292:16;2288:25;2285:45;;;2326:1;2323;2316:12;2285:45;-1:-1:-1;2348:6:67;2207:153;-1:-1:-1;2207:153:67:o;2365:421::-;2459:6;2467;2520:2;2508:9;2499:7;2495:23;2491:32;2488:52;;;2536:1;2533;2526:12;2488:52;2572:9;2559:23;2549:33;;2633:2;2622:9;2618:18;2605:32;2660:18;2652:6;2649:30;2646:50;;;2692:1;2689;2682:12;2646:50;2715:65;2772:7;2763:6;2752:9;2748:22;2715:65;:::i;:::-;2705:75;;;2365:421;;;;;:::o;2980:186::-;3039:6;3092:2;3080:9;3071:7;3067:23;3063:32;3060:52;;;3108:1;3105;3098:12;3060:52;3131:29;3150:9;3131:29;:::i;:::-;3121:39;2980:186;-1:-1:-1;;;2980:186:67:o;3353:742::-;3491:6;3499;3507;3515;3568:3;3556:9;3547:7;3543:23;3539:33;3536:53;;;3585:1;3582;3575:12;3536:53;3621:9;3608:23;3598:33;;3682:2;3671:9;3667:18;3654:32;3705:18;3746:2;3738:6;3735:14;3732:34;;;3762:1;3759;3752:12;3732:34;3785:65;3842:7;3833:6;3822:9;3818:22;3785:65;:::i;:::-;3775:75;;3897:2;3886:9;3882:18;3869:32;3859:42;;3954:2;3943:9;3939:18;3926:32;3910:48;;3983:2;3973:8;3970:16;3967:36;;;3999:1;3996;3989:12;3967:36;;4022:67;4081:7;4070:8;4059:9;4055:24;4022:67;:::i;:::-;4012:77;;;3353:742;;;;;;;:::o;4100:260::-;4168:6;4176;4229:2;4217:9;4208:7;4204:23;4200:32;4197:52;;;4245:1;4242;4235:12;4197:52;4268:29;4287:9;4268:29;:::i;:::-;4258:39;;4316:38;4350:2;4339:9;4335:18;4316:38;:::i;:::-;4306:48;;4100:260;;;;;:::o;4365:380::-;4444:1;4440:12;;;;4487;;;4508:61;;4562:4;4554:6;4550:17;4540:27;;4508:61;4615:2;4607:6;4604:14;4584:18;4581:38;4578:161;;4661:10;4656:3;4652:20;4649:1;4642:31;4696:4;4693:1;4686:15;4724:4;4721:1;4714:15;4750:127;4811:10;4806:3;4802:20;4799:1;4792:31;4842:4;4839:1;4832:15;4866:4;4863:1;4856:15;4882:125;4947:9;;;4968:10;;;4965:36;;;4981:18;;:::i;5363:184::-;5433:6;5486:2;5474:9;5465:7;5461:23;5457:32;5454:52;;;5502:1;5499;5492:12;5454:52;-1:-1:-1;5525:16:67;;5363:184;-1:-1:-1;5363:184:67:o;5552:346::-;5754:2;5736:21;;;5793:2;5773:18;;;5766:30;-1:-1:-1;;;5827:2:67;5812:18;;5805:52;5889:2;5874:18;;5552:346::o;11618:277::-;11685:6;11738:2;11726:9;11717:7;11713:23;11709:32;11706:52;;;11754:1;11751;11744:12;11706:52;11786:9;11780:16;11839:5;11832:13;11825:21;11818:5;11815:32;11805:60;;11861:1;11858;11851:12;12610:127;12671:10;12666:3;12662:20;12659:1;12652:31;12702:4;12699:1;12692:15;12726:4;12723:1;12716:15;12742:257;12814:4;12808:11;;;12846:17;;12893:18;12878:34;;12914:22;;;12875:62;12872:88;;;12940:18;;:::i;:::-;12976:4;12969:24;12742:257;:::o;13004:275::-;13075:2;13069:9;13140:2;13121:13;;-1:-1:-1;;13117:27:67;13105:40;;13175:18;13160:34;;13196:22;;;13157:62;13154:88;;;13222:18;;:::i;:::-;13258:2;13251:22;13004:275;;-1:-1:-1;13004:275:67:o;13284:1222::-;13384:9;13443:4;13435:5;13419:14;13415:26;13411:37;13408:57;;;13461:1;13458;13451:12;13408:57;13489:22;;:::i;:::-;13548:5;13535:19;13598:6;13589:7;13585:20;13576:7;13573:33;13563:61;;13620:1;13617;13610:12;13563:61;13633:24;;13676:2;13714:14;;;13701:28;13748:18;13778:14;;;13775:34;;;13805:1;13802;13795:12;13775:34;13828:18;;;;13884:14;13877:4;13869:13;;13865:34;13855:62;;13913:1;13910;13903:12;13855:62;13949:2;13936:16;13971:2;13967;13964:10;13961:36;;;13977:18;;:::i;:::-;14023:2;14020:1;14016:10;14006:20;;14046:28;14070:2;14066;14062:11;14046:28;:::i;:::-;14108:15;;;14178:11;;;14174:20;;;14139:12;;;;14217:14;14206:26;;14203:46;;;14245:1;14242;14235:12;14203:46;14269:11;;;;14289:142;14305:6;14300:3;14297:15;14289:142;;;14371:17;;14359:30;;14322:12;;;;14409;;;;14289:142;;;14447:16;;;14440:31;;;;-1:-1:-1;14451:7:67;;13284:1222;-1:-1:-1;;;;;13284:1222:67:o;15904:127::-;15965:10;15960:3;15956:20;15953:1;15946:31;15996:4;15993:1;15986:15;16020:4;16017:1;16010:15;16036:179;16067:1;16093:6;16126:2;16123:1;16119:10;16148:3;16138:37;;16155:18;;:::i;:::-;16193:10;;16189:20;;;;;16036:179;-1:-1:-1;;16036:179:67:o;16220:127::-;16281:10;16276:3;16272:20;16269:1;16262:31;16312:4;16309:1;16302:15;16336:4;16333:1;16326:15;16604:187;16643:1;16669:6;16702:2;16699:1;16695:10;16724:3;16714:37;;16731:18;;:::i;:::-;16769:10;;16765:20;;;;;16604:187;-1:-1:-1;;16604:187:67:o;16796:135::-;16835:3;16856:17;;;16853:43;;16876:18;;:::i;:::-;-1:-1:-1;16923:1:67;16912:13;;16796:135::o;17343:287::-;17472:3;17510:6;17504:13;17526:66;17585:6;17580:3;17573:4;17565:6;17561:17;17526:66;:::i;:::-;17608:16;;;;;17343:287;-1:-1:-1;;17343:287:67:o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"allowance(address,address)": {"details": "See {IERC20-allowance}."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "decreaseAllowance(address,uint256)": {"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."}, "increaseAllowance(address,uint256)": {"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."}, "name()": {"details": "Returns the name of the token."}, "owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transfer(address,uint256)": {"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."}, "transferFrom(address,address,uint256)": {"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [329, 4038], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xC7446565 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC7446565 EQ PUSH2 0x3FA JUMPI DUP1 PUSH4 0xD6534584 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xC5B42316 EQ PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8E4499E5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8E4499E5 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x93CD9652 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x7DAB4D61 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30289B15 GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x42AE8684 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x42AE8684 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x5303F68C EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x70A5EF9F EQ PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30289B15 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x1A50577F EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x1FFE1667 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xA1348CD EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x169A JUMP JUMPDEST PUSH2 0x4FC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x527 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x25C SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x205 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x228 PUSH2 0x78A JUMP JUMPDEST PUSH2 0x228 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25C JUMP JUMPDEST PUSH2 0x205 PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1DC PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x228 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x843 JUMP JUMPDEST PUSH2 0x205 PUSH2 0x3DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1670 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x228 PUSH2 0x8CC JUMP JUMPDEST PUSH2 0x228 PUSH2 0x3F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x22E PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x22E PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x22E PUSH2 0x438 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E7 JUMP JUMPDEST PUSH2 0x92F JUMP JUMPDEST PUSH2 0x228 PUSH2 0x44B CALLDATASIZE PUSH1 0x4 PUSH2 0x174E JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45F SWAP1 PUSH2 0x181A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48B SWAP1 PUSH2 0x181A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F0 DUP2 DUP6 DUP6 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x504 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x524 PUSH20 0xF939E0A03FB07F59A73314E73794BE0E57AC1B4E CALLER ADDRESS DUP5 PUSH2 0xB4E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x52F PUSH2 0xAF4 JUMP JUMPDEST PUSH3 0xED4E00 PUSH1 0x8 SLOAD PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DB185A5B5A5B99C81A185CC81B9BDD08195B991959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0xF939E0A03FB07F59A73314E73794BE0E57AC1B4E SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x602 SWAP2 SWAP1 PUSH2 0x1877 JUMP JUMPDEST SWAP1 POP PUSH2 0x637 PUSH20 0xF939E0A03FB07F59A73314E73794BE0E57AC1B4E PUSH20 0xB27DC5F8286F063F11491C8F349053CB37718BEA DUP4 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x7CE6A945967046D9C8B700A57AD6C3B65D16064F9B602F8389682DCBFE758429 SWAP1 PUSH1 0x0 SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x671 DUP6 DUP3 DUP6 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x67C DUP6 DUP6 DUP6 PUSH2 0xC62 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x6A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6B3 DUP3 DUP3 PUSH2 0xE06 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F0 DUP2 DUP6 DUP6 PUSH2 0x6CA DUP4 DUP4 PUSH2 0x92F JUMP JUMPDEST PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x6E1 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x10DB185A5B481C1BDBDB08185B1C9958591E481CD95D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x897D28FC0F1CADC73EFFA45A06E2335D5371805B4DEC6BD0BF5F91ECAC62FD75 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x792 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x79C PUSH1 0x0 PUSH2 0xE7B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x7C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x7CA DUP5 DUP5 PUSH2 0xE06 JUMP JUMPDEST PUSH2 0x7D4 DUP3 DUP3 PUSH2 0xECD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x45F SWAP1 PUSH2 0x181A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x34B73B30B634B210313AB93732B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST PUSH2 0x6B3 DUP3 DUP3 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x851 DUP3 DUP7 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH2 0x67C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4F0 DUP2 DUP6 DUP6 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x8D4 PUSH2 0xAF4 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD PUSH32 0x26240D96B75A51A1529395E869D3ABDB2EF34328A279633ED295753179E89FDB SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SUB PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH2 0x6B3 DUP3 DUP3 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x962 PUSH2 0xAF4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH2 0x524 DUP2 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7D4 SWAP1 DUP6 SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0xBE9 SWAP1 DUP5 SWAP1 PUSH4 0xA9059CBB PUSH1 0xE0 SHL SWAP1 PUSH1 0x64 ADD PUSH2 0xB82 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFA DUP5 DUP5 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7D4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST PUSH2 0x7D4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x7D4 JUMP JUMPDEST PUSH2 0xE33 DUP3 DUP3 PUSH32 0x0 PUSH1 0x6 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0xE3D CALLER DUP4 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x925415F7B2251FE6A324568825A67DF70E0E191AED36919F23FCE8E94703CBF7 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xEFA DUP3 DUP3 PUSH32 0x0 PUSH1 0x7 PUSH2 0x1156 JUMP JUMPDEST PUSH2 0xF19 PUSH20 0xF939E0A03FB07F59A73314E73794BE0E57AC1B4E CALLER DUP5 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x358FE4192934D3BF28AE181FEDA1F4BD08CA67F5E2FAD55582CCE5EB67304AE9 SWAP2 ADD PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D6 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x136F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x10F7 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x11AC DUP2 DUP5 DUP7 PUSH2 0x11A5 SWAP1 PUSH2 0x1952 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x11E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x24B73B30B634B210383937B7B3 PUSH1 0x99 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST TIMESTAMP PUSH3 0xED4E00 PUSH1 0x8 SLOAD PUSH2 0x11FA SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST LT ISZERO PUSH2 0x123D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DB185A5B5A5B99C81A185CC8195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x128F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x105B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1306 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1318 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x137E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1484 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD MLOAD DUP4 MLOAD PUSH1 0x0 SWAP2 SWAP1 DUP3 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1479 JUMPI PUSH2 0x13A7 PUSH1 0x2 DUP4 PUSH2 0x1A32 JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x0 SUB PUSH2 0x1408 JUMPI DUP6 DUP8 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x13C9 JUMPI PUSH2 0x13C9 PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13EB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP PUSH2 0x145A JUMP JUMPDEST DUP7 PUSH1 0x20 ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x141E JUMPI PUSH2 0x141E PUSH2 0x1A53 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1441 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP6 POP JUMPDEST PUSH2 0x1465 PUSH1 0x2 DUP4 PUSH2 0x1A69 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1471 DUP2 PUSH2 0x1A8A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1394 JUMP JUMPDEST POP POP POP SWAP2 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x583 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1501 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x153E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1543 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1554 DUP8 DUP4 DUP4 DUP8 PUSH2 0x155F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x15CE JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x15C7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x15C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x583 JUMP JUMPDEST POP DUP2 PUSH2 0x137E JUMP JUMPDEST PUSH2 0x137E DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x15E3 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x1621 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1618 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1600 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1640 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x166B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168C DUP4 PUSH2 0x1654 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D1 DUP5 PUSH2 0x1654 JUMP JUMPDEST SWAP3 POP PUSH2 0x16DF PUSH1 0x20 DUP6 ADD PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1744 DUP6 DUP3 DUP7 ADD PUSH2 0x16EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1769 DUP3 PUSH2 0x1654 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17B1 DUP9 DUP4 DUP10 ADD PUSH2 0x16EF JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17DB DUP8 DUP3 DUP9 ADD PUSH2 0x16EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1803 DUP4 PUSH2 0x1654 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 PUSH1 0x20 DUP5 ADD PUSH2 0x1654 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x182E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1701 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4F6 JUMPI PUSH2 0x4F6 PUSH2 0x184E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1889 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x436C61696D696E67206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1769 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x191B JUMPI PUSH2 0x191B PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x194A JUMPI PUSH2 0x194A PUSH2 0x18E2 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 CALLDATASIZE SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x196C PUSH2 0x18F8 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x197E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x199C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP6 ADD SWAP1 CALLDATASIZE PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C1 PUSH2 0x18E2 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x19D2 DUP5 DUP4 ADD PUSH2 0x1921 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 CALLDATASIZE DUP5 GT ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1A0A JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x19F1 JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP5 AND DUP1 PUSH2 0x1A47 JUMPI PUSH2 0x1A47 PUSH2 0x1A1C JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 MOD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP5 AND DUP1 PUSH2 0x1A7E JUMPI PUSH2 0x1A7E PUSH2 0x1A1C JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A9C JUMPI PUSH2 0x1A9C PUSH2 0x184E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1AB5 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x15FD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 PUSH1 0xBC 0x2C SWAP2 PUSH10 0xC7B1B2450EFA05E3E373 SLOAD AND 0xD9 DUP7 GT 0xC2 DUP12 COINBASE 0x49 0xCF 0xB2 0x49 PUSH22 0x73B9F764736F6C634300081100330000000000000000 ", "sha1": "809927a17a9429fafe1c5f32b8f26e343b1cd4ab", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\nimport \"../libraries/ScaledMath.sol\";\nimport \"../interfaces/IConicDebtToken.sol\";\n\ncontract ConicDebtToken is IConicDebtToken, ERC20, Ownable {\n    using SafeERC20 for IERC20;\n    using MerkleProof for MerkleProof.Proof;\n\n    uint256 internal constant MAX_SUPPLY = 4_337_233e18;\n    uint256 internal constant CLAIM_DURATION = 30 days * 6;\n    address internal constant TREASURY = 0xB27DC5f8286f063F11491c8f349053cB37718bea;\n    address internal constant CRVUSD = address(0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E);\n    bytes32 public immutable merkleRootDebtToken;\n    bytes32 public immutable merkleRootRefund;\n\n    mapping(address => bool) public debtTokenClaimedBy;\n    mapping(address => bool) public refundClaimedBy;\n\n    uint256 public startAt;\n    bool public claimIsActive;\n    address public debtPool;\n\n    constructor(\n        bytes32 _merkleRootDebtToken,\n        bytes32 _merkleRootRefund\n    ) ERC20(\"Conic Debt Token\", \"cncDT\") {\n        merkleRootDebtToken = _merkleRootDebtToken;\n        merkleRootRefund = _merkleRootRefund;\n    }\n\n    function depositRefund(uint256 amount) external onlyOwner {\n        IERC20(CRVUSD).safeTransferFrom(msg.sender, address(this), amount);\n    }\n\n    function start() external onlyOwner {\n        startAt = block.timestamp;\n        emit ClaimingStarted();\n    }\n\n    function claimDebtToken(uint256 amount, MerkleProof.Proof calldata proof) external {\n        require(startAt != 0, \"Claiming is not active\");\n        _claimDebtToken(amount, proof);\n    }\n\n    function claimRefund(uint256 amount, MerkleProof.Proof calldata proof) external {\n        require(startAt != 0, \"Claiming is not active\");\n        _claimRefund(amount, proof);\n    }\n\n    function claimAll(\n        uint256 amountDebtToken,\n        MerkleProof.Proof calldata proofDebtTokenClaim,\n        uint256 amountRefund,\n        MerkleProof.Proof calldata proofRefund\n    ) external {\n        require(startAt != 0, \"Claiming is not active\");\n\n        _claimDebtToken(amountDebtToken, proofDebtTokenClaim);\n        _claimRefund(amountRefund, proofRefund);\n    }\n\n    function _claimRefund(uint256 amount, MerkleProof.Proof calldata proof) internal {\n        _claim(amount, proof, merkleRootRefund, refundClaimedBy);\n        IERC20(CRVUSD).safeTransfer(msg.sender, amount);\n        emit RefundClaimed(msg.sender, amount);\n    }\n\n    function _claimDebtToken(uint256 amount, MerkleProof.Proof calldata proof) internal {\n        _claim(amount, proof, merkleRootDebtToken, debtTokenClaimedBy);\n        _mint(msg.sender, amount);\n        emit DebtTokenClaimed(msg.sender, amount);\n    }\n\n    function _claim(\n        uint256 amount,\n        MerkleProof.Proof calldata proof,\n        bytes32 merkleRoot,\n        mapping(address => bool) storage claimedBy\n    ) internal {\n        bytes32 node = keccak256(abi.encodePacked(msg.sender, amount));\n        require(proof.isValid(node, merkleRoot), \"Invalid proof\");\n        require(startAt + CLAIM_DURATION >= block.timestamp, \"Claiming has ended\");\n        require(!claimedBy[msg.sender], \"Already claimed\");\n        claimedBy[msg.sender] = true;\n    }\n\n    function terminateClaiming() external onlyOwner {\n        require(block.timestamp > startAt + CLAIM_DURATION, \"Claiming has not ended\");\n        uint256 fundsLeft = IERC20(CRVUSD).balanceOf(address(this));\n        IERC20(CRVUSD).safeTransfer(TREASURY, fundsLeft);\n        emit ClaimingTerminated();\n    }\n\n    function setDebtPool(address _debtPool) external onlyOwner {\n        require(debtPool == address(0), \"Claim pool already set\");\n        debtPool = _debtPool;\n        emit DebtPoolSet(_debtPool);\n    }\n\n    function burn(address account, uint256 amount) external override {\n        require(msg.sender == debtPool, \"invalid burner\");\n        _burn(account, amount);\n    }\n}\n", "sourceMap": "329:3709:19:-:0;;;1063:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:113:7;;;;;;;;;;;;;-1:-1:-1;;;1980:113:7;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:7;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:7;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;936:32:5;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1199:42:19::1;::::0;;;;1251:36:::1;::::0;329:3709;;640:96:13;719:10;;640:96::o;2426:187:5:-;2518:6;;;-1:-1:-1;;;;;2534:17:5;;;-1:-1:-1;;;;;;2534:17:5;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:245:67:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;-1:-1:-1;;193:16:67;;249:2;234:18;;;228:25;193:16;;228:25;;-1:-1:-1;14:245:67:o;264:127::-;325:10;320:3;316:20;313:1;306:31;356:4;353:1;346:15;380:4;377:1;370:15;396:380;475:1;471:12;;;;518;;;539:61;;593:4;585:6;581:17;571:27;;539:61;646:2;638:6;635:14;615:18;612:38;609:161;;692:10;687:3;683:20;680:1;673:31;727:4;724:1;717:15;755:4;752:1;745:15;609:161;;396:380;;;:::o;907:545::-;1009:2;1004:3;1001:11;998:448;;;1045:1;1070:5;1066:2;1059:17;1115:4;1111:2;1101:19;1185:2;1173:10;1169:19;1166:1;1162:27;1156:4;1152:38;1221:4;1209:10;1206:20;1203:47;;;-1:-1:-1;1244:4:67;1203:47;1299:2;1294:3;1290:12;1287:1;1283:20;1277:4;1273:31;1263:41;;1354:82;1372:2;1365:5;1362:13;1354:82;;;1417:17;;;1398:1;1387:13;1354:82;;;1358:3;;;998:448;907:545;;;:::o;1628:1352::-;1748:10;;-1:-1:-1;;;;;1770:30:67;;1767:56;;;1803:18;;:::i;:::-;1832:97;1922:6;1882:38;1914:4;1908:11;1882:38;:::i;:::-;1876:4;1832:97;:::i;:::-;1984:4;;2048:2;2037:14;;2065:1;2060:663;;;;2767:1;2784:6;2781:89;;;-1:-1:-1;2836:19:67;;;2830:26;2781:89;-1:-1:-1;;1585:1:67;1581:11;;;1577:24;1573:29;1563:40;1609:1;1605:11;;;1560:57;2883:81;;2030:944;;2060:663;854:1;847:14;;;891:4;878:18;;-1:-1:-1;;2096:20:67;;;2214:236;2228:7;2225:1;2222:14;2214:236;;;2317:19;;;2311:26;2296:42;;2409:27;;;;2377:1;2365:14;;;;2244:19;;2214:236;;;2218:3;2478:6;2469:7;2466:19;2463:201;;;2539:19;;;2533:26;-1:-1:-1;;2622:1:67;2618:14;;;2634:3;2614:24;2610:37;2606:42;2591:58;2576:74;;2463:201;-1:-1:-1;;;;;2710:1:67;2694:14;;;2690:22;2677:36;;-1:-1:-1;1628:1352:67:o;:::-;329:3709:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/ConicDebtToken.sol", "type": "contract", "deployment": {"address": "0xFB588886715a263F69c1edd4e84e0Ac1855E928A", "chainid": "1", "blockHeight": 19070651}}