{"abi": [{"inputs": [{"internalType": "address", "name": "_controller", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address", "name": "_curvePool", "type": "address"}, {"internalType": "address", "name": "_conicPool", "type": "address"}], "name": "claimEarnings", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "cliffThreshold", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "crvAmount", "type": "uint256"}], "name": "computeClaimableConvex", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "crvAmount", "type": "uint256"}], "name": "computeClaimableConvexWithCliffInfo", "outputs": [{"internalType": "uint256", "name": "cvxEarned", "type": "uint256"}, {"components": [{"internalType": "uint256", "name": "currentCliff", "type": "uint256"}, {"internalType": "bool", "name": "withinThreshold", "type": "bool"}], "internalType": "struct Types.CliffInfo", "name": "cliffInfo", "type": "tuple"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "controller", "outputs": [{"internalType": "contract IController", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_curvePool", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "deposit", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_account", "type": "address"}, {"internalType": "address", "name": "_curvePool", "type": "address"}], "name": "getCrvEarned", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_account", "type": "address"}, {"internalType": "address[]", "name": "_curvePools", "type": "address[]"}], "name": "getCrvEarnedBatch", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_curvePool", "type": "address"}], "name": "getRewardPool", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_cliffThreshold", "type": "uint256"}], "name": "updateCliffThreshold", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_curvePool", "type": "address"}, {"internalType": "uint256", "name": "_amount", "type": "uint256"}], "name": "withdraw", "outputs": [], "stateMutability": "nonpayable", "type": "function"}], "allSourcePaths": {"10": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol", "11": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "12": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/utils/Address.sol", "23": "contracts/ConvexHandler.sol", "46": "interfaces/IController.sol", "47": "interfaces/IConvexHandler.sol", "49": "interfaces/ICurveRegistryCache.sol", "50": "interfaces/IFeeRecipient.sol", "51": "interfaces/IGenericOracle.sol", "54": "interfaces/IPoolAdapter.sol", "56": "interfaces/access/IOwnable.sol", "62": "interfaces/tokenomics/IBonding.sol", "68": "interfaces/tokenomics/IInflationManager.sol", "69": "interfaces/tokenomics/ILpTokenStaker.sol", "71": "interfaces/vendor/IBaseRewardPool.sol", "72": "interfaces/vendor/IBooster.sol", "8": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "86": "libraries/ScaledMath.sol"}, "ast": {"absolutePath": "contracts/ConvexHandler.sol", "exportedSymbols": {"Address": [20160], "ConvexHandler": [5036], "CurvePoolUtils": [27025], "IBaseRewardPool": [23331], "IBonding": [24919], "IBooster": [24992], "IConicPool": [22912], "IController": [24750], "IConvexHandler": [25053], "ICurvePoolV1": [25649], "ICurvePoolV2": [26021], "ICurveRegistryCache": [22510], "IERC20": [19429], "IERC20Metadata": [19454], "IERC20Permit": [28508], "IFeeRecipient": [24768], "IGenericOracle": [27843], "IInflationManager": [23135], "ILpToken": [24810], "ILpTokenStaker": [23252], "IOracle": [22539], "IOwnable": [25069], "IPoolAdapter": [24224], "IRewardStaking": [25148], "SafeERC20": [19830], "ScaledMath": [24055], "Types": [27189]}, "id": 5037, "license": "GPL-3.0-or-later", "nodeType": "SourceUnit", "nodes": [{"id": 4648, "literals": ["solidity", "0.8", ".17"], "nodeType": "PragmaDirective", "src": "45:23:23"}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol", "id": 4649, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 19831, "src": "70:65:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/daniel/.brownie/packages/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol", "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol", "id": 4650, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 19430, "src": "136:56:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IConvexHandler.sol", "file": "../interfaces/IConvexHandler.sol", "id": 4651, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 25054, "src": "194:42:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/pools/ILpToken.sol", "file": "../interfaces/pools/ILpToken.sol", "id": 4652, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 24811, "src": "237:42:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/access/IOwnable.sol", "file": "../interfaces/access/IOwnable.sol", "id": 4653, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 25070, "src": "280:43:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/IRewardStaking.sol", "file": "../interfaces/vendor/IRewardStaking.sol", "id": 4654, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 25149, "src": "324:49:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/IBooster.sol", "file": "../interfaces/vendor/IBooster.sol", "id": 4655, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 24993, "src": "374:43:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/vendor/IBaseRewardPool.sol", "file": "../interfaces/vendor/IBaseRewardPool.sol", "id": 4656, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 23332, "src": "418:50:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/ICurveRegistryCache.sol", "file": "../interfaces/ICurveRegistryCache.sol", "id": 4657, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 22511, "src": "469:47:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "interfaces/IController.sol", "file": "../interfaces/IController.sol", "id": 4658, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 24751, "src": "517:39:23", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "libraries/ScaledMath.sol", "file": "../libraries/ScaledMath.sol", "id": 4659, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 5037, "sourceUnit": 24056, "src": "557:37:23", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [{"baseName": {"id": 4660, "name": "IConvexHandler", "nameLocations": ["622:14:23"], "nodeType": "IdentifierPath", "referencedDeclaration": 25053, "src": "622:14:23"}, "id": 4661, "nodeType": "InheritanceSpecifier", "src": "622:14:23"}], "canonicalName": "ConvexHandler", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 5036, "linearizedBaseContracts": [5036, 25053], "name": "ConvexHandler", "nameLocation": "605:13:23", "nodeType": "ContractDefinition", "nodes": [{"global": false, "id": 4664, "libraryName": {"id": 4662, "name": "ScaledMath", "nameLocations": ["649:10:23"], "nodeType": "IdentifierPath", "referencedDeclaration": 24055, "src": "649:10:23"}, "nodeType": "UsingForDirective", "src": "643:29:23", "typeName": {"id": 4663, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "664:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}}, {"global": false, "id": 4668, "libraryName": {"id": 4665, "name": "SafeERC20", "nameLocations": ["683:9:23"], "nodeType": "IdentifierPath", "referencedDeclaration": 19830, "src": "683:9:23"}, "nodeType": "UsingForDirective", "src": "677:27:23", "typeName": {"id": 4667, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4666, "name": "IERC20", "nameLocations": ["697:6:23"], "nodeType": "IdentifierPath", "referencedDeclaration": 19429, "src": "697:6:23"}, "referencedDeclaration": 19429, "src": "697:6:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$19429", "typeString": "contract IERC20"}}}, {"constant": true, "id": 4671, "mutability": "constant", "name": "_CLIFF_COUNT", "nameLocation": "736:12:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "710:45:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4669, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "710:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "31303030", "id": 4670, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "751:4:23", "typeDescriptions": {"typeIdentifier": "t_rational_1000_by_1", "typeString": "int_const 1000"}, "value": "1000"}, "visibility": "internal"}, {"constant": true, "id": 4674, "mutability": "constant", "name": "_CLIFF_SIZE", "nameLocation": "787:11:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "761:50:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4672, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "761:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "3130305f303030653138", "id": 4673, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "801:10:23", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000000000_by_1", "typeString": "int_const 100000000000000000000000"}, "value": "100_000e18"}, "visibility": "internal"}, {"constant": true, "id": 4677, "mutability": "constant", "name": "_MAX_CVX_SUPPLY", "nameLocation": "843:15:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "817:58:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "817:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "3130305f3030305f303030653138", "id": 4676, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "861:14:23", "typeDescriptions": {"typeIdentifier": "t_rational_100000000000000000000000000_by_1", "typeString": "int_const 100000000000000000000000000"}, "value": "100_000_000e18"}, "visibility": "internal"}, {"constant": true, "id": 4680, "mutability": "constant", "name": "_MAX_CLIFF_THRESHOLD", "nameLocation": "907:20:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "881:55:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4678, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "881:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e33653138", "id": 4679, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "930:6:23", "typeDescriptions": {"typeIdentifier": "t_rational_300000000000000000_by_1", "typeString": "int_const 300000000000000000"}, "value": "0.3e18"}, "visibility": "internal"}, {"constant": true, "id": 4686, "mutability": "constant", "name": "_CVX_TOKEN", "nameLocation": "968:10:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "942:90:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4681, "name": "address", "nodeType": "ElementaryTypeName", "src": "942:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "value": {"arguments": [{"hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242", "id": 4684, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "989:42:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4683, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "981:7:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 4682, "name": "address", "nodeType": "ElementaryTypeName", "src": "981:7:23", "typeDescriptions": {}}}, "id": 4685, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "981:51:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "functionSelector": "1fa309b0", "id": 4689, "mutability": "mutable", "name": "cliffThreshold", "nameLocation": "1054:14:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "1039:39:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4687, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1039:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "value": {"hexValue": "302e3035653138", "id": 4688, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1071:7:23", "typeDescriptions": {"typeIdentifier": "t_rational_50000000000000000_by_1", "typeString": "int_const 50000000000000000"}, "value": "0.05e18"}, "visibility": "public"}, {"constant": false, "functionSelector": "f77c4791", "id": 4692, "mutability": "immutable", "name": "controller", "nameLocation": "1114:10:23", "nodeType": "VariableDeclaration", "scope": 5036, "src": "1085:39:23", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}, "typeName": {"id": 4691, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4690, "name": "IController", "nameLocations": ["1085:11:23"], "nodeType": "IdentifierPath", "referencedDeclaration": 24750, "src": "1085:11:23"}, "referencedDeclaration": 24750, "src": "1085:11:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "visibility": "public"}, {"body": {"id": 4703, "nodeType": "Block", "src": "1164:54:23", "statements": [{"expression": {"id": 4701, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4697, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "1174:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 4699, "name": "_controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4694, "src": "1199:11:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4698, "name": "IController", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24750, "src": "1187:11:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IController_$24750_$", "typeString": "type(contract IController)"}}, "id": 4700, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1187:24:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "src": "1174:37:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4702, "nodeType": "ExpressionStatement", "src": "1174:37:23"}]}, "id": 4704, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 4695, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4694, "mutability": "mutable", "name": "_controller", "nameLocation": "1151:11:23", "nodeType": "VariableDeclaration", "scope": 4704, "src": "1143:19:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4693, "name": "address", "nodeType": "ElementaryTypeName", "src": "1143:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1142:21:23"}, "returnParameters": {"id": 4696, "nodeType": "ParameterList", "parameters": [], "src": "1164:0:23"}, "scope": 5036, "src": "1131:87:23", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [25002], "body": {"id": 4732, "nodeType": "Block", "src": "1571:155:23", "statements": [{"assignments": [4713], "declarations": [{"constant": false, "id": 4713, "mutability": "mutable", "name": "pid", "nameLocation": "1589:3:23", "nodeType": "VariableDeclaration", "scope": 4732, "src": "1581:11:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4712, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1581:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4720, "initialValue": {"arguments": [{"id": 4718, "name": "_curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4707, "src": "1634:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4714, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "1595:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4715, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1606:18:23", "memberName": "curveRegistryCache", "nodeType": "MemberAccess", "referencedDeclaration": 24508, "src": "1595:29:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICurveRegistryCache_$22510_$", "typeString": "function () view external returns (contract ICurveRegistryCache)"}}, "id": 4716, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1595:31:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistryCache_$22510", "typeString": "contract ICurveRegistryCache"}}, "id": 4717, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1627:6:23", "memberName": "getPid", "nodeType": "MemberAccess", "referencedDeclaration": 22486, "src": "1595:38:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 4719, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1595:50:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "1581:64:23"}, {"expression": {"arguments": [{"id": 4727, "name": "pid", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4713, "src": "1700:3:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 4728, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4709, "src": "1705:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "74727565", "id": 4729, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1714:4:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"arguments": [{"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4722, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "1664:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4723, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1675:13:23", "memberName": "convexBooster", "nodeType": "MemberAccess", "referencedDeclaration": 24650, "src": "1664:24:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 4724, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1664:26:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4721, "name": "IBooster", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24992, "src": "1655:8:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IBooster_$24992_$", "typeString": "type(contract IBooster)"}}, "id": 4725, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1655:36:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IBooster_$24992", "typeString": "contract IBooster"}}, "id": 4726, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1692:7:23", "memberName": "deposit", "nodeType": "MemberAccess", "referencedDeclaration": 24954, "src": "1655:44:23", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,uint256,bool) external returns (bool)"}}, "id": 4730, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1655:64:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4731, "nodeType": "ExpressionStatement", "src": "1655:64:23"}]}, "documentation": {"id": 4705, "nodeType": "StructuredDocumentation", "src": "1224:279:23", "text": "@notice Deposits a Curve LP token on Convex and stakes the Convex\n Curve LP token in the respective CRV rewards contract on Convex.\n @param _curvePool Curve Pool for which LP tokens should be deposited\n @param _amount Amount of Curve LP tokens to deposit"}, "functionSelector": "47e7ef24", "id": 4733, "implemented": true, "kind": "function", "modifiers": [], "name": "deposit", "nameLocation": "1517:7:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4710, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4707, "mutability": "mutable", "name": "_curvePool", "nameLocation": "1533:10:23", "nodeType": "VariableDeclaration", "scope": 4733, "src": "1525:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4706, "name": "address", "nodeType": "ElementaryTypeName", "src": "1525:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4709, "mutability": "mutable", "name": "_amount", "nameLocation": "1553:7:23", "nodeType": "VariableDeclaration", "scope": 4733, "src": "1545:15:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4708, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1545:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1524:37:23"}, "returnParameters": {"id": 4711, "nodeType": "ParameterList", "parameters": [], "src": "1571:0:23"}, "scope": 5036, "src": "1508:218:23", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 4758, "nodeType": "Block", "src": "2071:166:23", "statements": [{"assignments": [4742], "declarations": [{"constant": false, "id": 4742, "mutability": "mutable", "name": "rewardPool", "nameLocation": "2089:10:23", "nodeType": "VariableDeclaration", "scope": 4758, "src": "2081:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4741, "name": "address", "nodeType": "ElementaryTypeName", "src": "2081:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4749, "initialValue": {"arguments": [{"id": 4747, "name": "_curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4736, "src": "2148:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4743, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "2102:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4744, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2113:18:23", "memberName": "curveRegistryCache", "nodeType": "MemberAccess", "referencedDeclaration": 24508, "src": "2102:29:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICurveRegistryCache_$22510_$", "typeString": "function () view external returns (contract ICurveRegistryCache)"}}, "id": 4745, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2102:31:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistryCache_$22510", "typeString": "contract ICurveRegistryCache"}}, "id": 4746, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2134:13:23", "memberName": "getRewardPool", "nodeType": "MemberAccess", "referencedDeclaration": 22493, "src": "2102:45:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$", "typeString": "function (address) view external returns (address)"}}, "id": 4748, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2102:57:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2081:78:23"}, {"expression": {"arguments": [{"id": 4754, "name": "_amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4738, "src": "2215:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "66616c7365", "id": 4755, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "2224:5:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"arguments": [{"id": 4751, "name": "rewardPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4742, "src": "2185:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4750, "name": "IBaseRewardPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23331, "src": "2169:15:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$23331_$", "typeString": "type(contract IBaseRewardPool)"}}, "id": 4752, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2169:27:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IBaseRewardPool_$23331", "typeString": "contract IBaseRewardPool"}}, "id": 4753, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2197:17:23", "memberName": "withdrawAndUnwrap", "nodeType": "MemberAccess", "referencedDeclaration": 23289, "src": "2169:45:23", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$", "typeString": "function (uint256,bool) external returns (bool)"}}, "id": 4756, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2169:61:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4757, "nodeType": "ExpressionStatement", "src": "2169:61:23"}]}, "documentation": {"id": 4734, "nodeType": "StructuredDocumentation", "src": "1732:270:23", "text": "@notice Withdraws Curve LP tokens from Convex.\n @dev Curve LP tokens get unstaked from the Convex CRV rewards contract.\n @param _curvePool Curve pool for which LP tokens should be withdrawn.\n @param _amount Amount of Curve LP tokens to withdraw."}, "functionSelector": "f3fef3a3", "id": 4759, "implemented": true, "kind": "function", "modifiers": [], "name": "withdraw", "nameLocation": "2016:8:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4739, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4736, "mutability": "mutable", "name": "_curvePool", "nameLocation": "2033:10:23", "nodeType": "VariableDeclaration", "scope": 4759, "src": "2025:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4735, "name": "address", "nodeType": "ElementaryTypeName", "src": "2025:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4738, "mutability": "mutable", "name": "_amount", "nameLocation": "2053:7:23", "nodeType": "VariableDeclaration", "scope": 4759, "src": "2045:15:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4737, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2045:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2024:37:23"}, "returnParameters": {"id": 4740, "nodeType": "ParameterList", "parameters": [], "src": "2071:0:23"}, "scope": 5036, "src": "2007:230:23", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [25009], "body": {"id": 4772, "nodeType": "Block", "src": "2565:59:23", "statements": [{"expression": {"arguments": [{"id": 4768, "name": "_curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4762, "src": "2594:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4769, "name": "_conicPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4764, "src": "2606:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 4767, "name": "_claimConvexReward", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4813, "src": "2575:18:23", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$", "typeString": "function (address,address)"}}, "id": 4770, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2575:42:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4771, "nodeType": "ExpressionStatement", "src": "2575:42:23"}]}, "documentation": {"id": 4760, "nodeType": "StructuredDocumentation", "src": "2243:245:23", "text": "@notice Claims CRV, CVX and extra rewards from Convex on behalf of a Conic pool.\n @param _curvePool Curve pool from which LP tokens have been deposited on Convex.\n @param _conicPool Conic pool for which rewards will be claimed."}, "functionSelector": "970de381", "id": 4773, "implemented": true, "kind": "function", "modifiers": [], "name": "claimEarnings", "nameLocation": "2502:13:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4765, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4762, "mutability": "mutable", "name": "_curvePool", "nameLocation": "2524:10:23", "nodeType": "VariableDeclaration", "scope": 4773, "src": "2516:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4761, "name": "address", "nodeType": "ElementaryTypeName", "src": "2516:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4764, "mutability": "mutable", "name": "_conicPool", "nameLocation": "2544:10:23", "nodeType": "VariableDeclaration", "scope": 4773, "src": "2536:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4763, "name": "address", "nodeType": "ElementaryTypeName", "src": "2536:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2515:40:23"}, "returnParameters": {"id": 4766, "nodeType": "ParameterList", "parameters": [], "src": "2565:0:23"}, "scope": 5036, "src": "2493:131:23", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"baseFunctions": [25016], "body": {"id": 4787, "nodeType": "Block", "src": "2703:81:23", "statements": [{"expression": {"arguments": [{"id": 4784, "name": "_curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4775, "src": "2766:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4780, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "2720:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4781, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2731:18:23", "memberName": "curveRegistryCache", "nodeType": "MemberAccess", "referencedDeclaration": 24508, "src": "2720:29:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICurveRegistryCache_$22510_$", "typeString": "function () view external returns (contract ICurveRegistryCache)"}}, "id": 4782, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2720:31:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistryCache_$22510", "typeString": "contract ICurveRegistryCache"}}, "id": 4783, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2752:13:23", "memberName": "getRewardPool", "nodeType": "MemberAccess", "referencedDeclaration": 22493, "src": "2720:45:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$", "typeString": "function (address) view external returns (address)"}}, "id": 4785, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2720:57:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "functionReturnParameters": 4779, "id": 4786, "nodeType": "Return", "src": "2713:64:23"}]}, "functionSelector": "514a9009", "id": 4788, "implemented": true, "kind": "function", "modifiers": [], "name": "getRewardPool", "nameLocation": "2639:13:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4776, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4775, "mutability": "mutable", "name": "_curvePool", "nameLocation": "2661:10:23", "nodeType": "VariableDeclaration", "scope": 4788, "src": "2653:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4774, "name": "address", "nodeType": "ElementaryTypeName", "src": "2653:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2652:20:23"}, "returnParameters": {"id": 4779, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4778, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4788, "src": "2694:7:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4777, "name": "address", "nodeType": "ElementaryTypeName", "src": "2694:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2693:9:23"}, "scope": 5036, "src": "2630:154:23", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"body": {"id": 4812, "nodeType": "Block", "src": "2867:160:23", "statements": [{"assignments": [4796], "declarations": [{"constant": false, "id": 4796, "mutability": "mutable", "name": "rewardPool", "nameLocation": "2885:10:23", "nodeType": "VariableDeclaration", "scope": 4812, "src": "2877:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4795, "name": "address", "nodeType": "ElementaryTypeName", "src": "2877:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4803, "initialValue": {"arguments": [{"id": 4801, "name": "_curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4790, "src": "2944:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4797, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "2898:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4798, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2909:18:23", "memberName": "curveRegistryCache", "nodeType": "MemberAccess", "referencedDeclaration": 24508, "src": "2898:29:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICurveRegistryCache_$22510_$", "typeString": "function () view external returns (contract ICurveRegistryCache)"}}, "id": 4799, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2898:31:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistryCache_$22510", "typeString": "contract ICurveRegistryCache"}}, "id": 4800, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2930:13:23", "memberName": "getRewardPool", "nodeType": "MemberAccess", "referencedDeclaration": 22493, "src": "2898:45:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$", "typeString": "function (address) view external returns (address)"}}, "id": 4802, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2898:57:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2877:78:23"}, {"expression": {"arguments": [{"id": 4808, "name": "_conicPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4792, "src": "3003:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"hexValue": "74727565", "id": 4809, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "3015:4:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_bool", "typeString": "bool"}], "expression": {"arguments": [{"id": 4805, "name": "rewardPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4796, "src": "2981:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4804, "name": "IBaseRewardPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23331, "src": "2965:15:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$23331_$", "typeString": "type(contract IBaseRewardPool)"}}, "id": 4806, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2965:27:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IBaseRewardPool_$23331", "typeString": "contract IBaseRewardPool"}}, "id": 4807, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2993:9:23", "memberName": "getReward", "nodeType": "MemberAccess", "referencedDeclaration": 23306, "src": "2965:37:23", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$", "typeString": "function (address,bool) external"}}, "id": 4810, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2965:55:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 4811, "nodeType": "ExpressionStatement", "src": "2965:55:23"}]}, "id": 4813, "implemented": true, "kind": "function", "modifiers": [], "name": "_claimConvexReward", "nameLocation": "2799:18:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4793, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4790, "mutability": "mutable", "name": "_curvePool", "nameLocation": "2826:10:23", "nodeType": "VariableDeclaration", "scope": 4813, "src": "2818:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4789, "name": "address", "nodeType": "ElementaryTypeName", "src": "2818:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4792, "mutability": "mutable", "name": "_conicPool", "nameLocation": "2846:10:23", "nodeType": "VariableDeclaration", "scope": 4813, "src": "2838:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4791, "name": "address", "nodeType": "ElementaryTypeName", "src": "2838:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "2817:40:23"}, "returnParameters": {"id": 4794, "nodeType": "ParameterList", "parameters": [], "src": "2867:0:23"}, "scope": 5036, "src": "2790:237:23", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"baseFunctions": [25025], "body": {"id": 4839, "nodeType": "Block", "src": "3468:156:23", "statements": [{"assignments": [4824], "declarations": [{"constant": false, "id": 4824, "mutability": "mutable", "name": "rewardPool", "nameLocation": "3486:10:23", "nodeType": "VariableDeclaration", "scope": 4839, "src": "3478:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4823, "name": "address", "nodeType": "ElementaryTypeName", "src": "3478:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4831, "initialValue": {"arguments": [{"id": 4829, "name": "_curvePool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4818, "src": "3545:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"id": 4825, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "3499:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}, "id": 4826, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3510:18:23", "memberName": "curveRegistryCache", "nodeType": "MemberAccess", "referencedDeclaration": 24508, "src": "3499:29:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICurveRegistryCache_$22510_$", "typeString": "function () view external returns (contract ICurveRegistryCache)"}}, "id": 4827, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3499:31:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_ICurveRegistryCache_$22510", "typeString": "contract ICurveRegistryCache"}}, "id": 4828, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3531:13:23", "memberName": "getRewardPool", "nodeType": "MemberAccess", "referencedDeclaration": 22493, "src": "3499:45:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$", "typeString": "function (address) view external returns (address)"}}, "id": 4830, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3499:57:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "3478:78:23"}, {"expression": {"arguments": [{"id": 4836, "name": "_account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4816, "src": "3608:8:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"arguments": [{"id": 4833, "name": "rewardPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4824, "src": "3589:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4832, "name": "IBaseRewardPool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 23331, "src": "3573:15:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IBaseRewardPool_$23331_$", "typeString": "type(contract IBaseRewardPool)"}}, "id": 4834, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3573:27:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IBaseRewardPool_$23331", "typeString": "contract IBaseRewardPool"}}, "id": 4835, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3601:6:23", "memberName": "earned", "nodeType": "MemberAccess", "referencedDeclaration": 23296, "src": "3573:34:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view external returns (uint256)"}}, "id": 4837, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3573:44:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4822, "id": 4838, "nodeType": "Return", "src": "3566:51:23"}]}, "documentation": {"id": 4814, "nodeType": "StructuredDocumentation", "src": "3033:340:23", "text": "@notice Gets total amount of CRV earned by an account from staking an amount of\n Curve LP tokens via Convex for a single Curve pool.\n @param _account Account which staked an amount of Curve LP tokens.\n @param _curvePool Curve pool for which earned CRV should be computed.\n @return Total amount of CRV earned."}, "functionSelector": "212f9b4f", "id": 4840, "implemented": true, "kind": "function", "modifiers": [], "name": "getCrvEarned", "nameLocation": "3387:12:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4819, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4816, "mutability": "mutable", "name": "_account", "nameLocation": "3408:8:23", "nodeType": "VariableDeclaration", "scope": 4840, "src": "3400:16:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4815, "name": "address", "nodeType": "ElementaryTypeName", "src": "3400:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4818, "mutability": "mutable", "name": "_curvePool", "nameLocation": "3426:10:23", "nodeType": "VariableDeclaration", "scope": 4840, "src": "3418:18:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4817, "name": "address", "nodeType": "ElementaryTypeName", "src": "3418:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "3399:38:23"}, "returnParameters": {"id": 4822, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4821, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4840, "src": "3459:7:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4820, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3459:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3458:9:23"}, "scope": 5036, "src": "3378:246:23", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [25035], "body": {"id": 4881, "nodeType": "Block", "src": "4073:238:23", "statements": [{"assignments": [4852], "declarations": [{"constant": false, "id": 4852, "mutability": "mutable", "name": "totalCrvEarned", "nameLocation": "4091:14:23", "nodeType": "VariableDeclaration", "scope": 4881, "src": "4083:22:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4851, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4083:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4853, "nodeType": "VariableDeclarationStatement", "src": "4083:22:23"}, {"body": {"id": 4877, "nodeType": "Block", "src": "4160:114:23", "statements": [{"assignments": [4865], "declarations": [{"constant": false, "id": 4865, "mutability": "mutable", "name": "pool", "nameLocation": "4182:4:23", "nodeType": "VariableDeclaration", "scope": 4877, "src": "4174:12:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4864, "name": "address", "nodeType": "ElementaryTypeName", "src": "4174:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 4869, "initialValue": {"baseExpression": {"id": 4866, "name": "_curvePools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4846, "src": "4189:11:23", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 4868, "indexExpression": {"id": 4867, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4855, "src": "4201:1:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4189:14:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "4174:29:23"}, {"expression": {"id": 4875, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4870, "name": "totalCrvEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4852, "src": "4217:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"arguments": [{"id": 4872, "name": "_account", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4843, "src": "4248:8:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 4873, "name": "pool", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4865, "src": "4258:4:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "id": 4871, "name": "getCrvEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4840, "src": "4235:12:23", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$", "typeString": "function (address,address) view returns (uint256)"}}, "id": 4874, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4235:28:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4217:46:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4876, "nodeType": "ExpressionStatement", "src": "4217:46:23"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4860, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4857, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4855, "src": "4131:1:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"expression": {"id": 4858, "name": "_curvePools", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4846, "src": "4135:11:23", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 4859, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4147:6:23", "memberName": "length", "nodeType": "MemberAccess", "src": "4135:18:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4131:22:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4878, "initializationExpression": {"assignments": [4855], "declarations": [{"constant": false, "id": 4855, "mutability": "mutable", "name": "i", "nameLocation": "4128:1:23", "nodeType": "VariableDeclaration", "scope": 4878, "src": "4120:9:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4854, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4120:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4856, "nodeType": "VariableDeclarationStatement", "src": "4120:9:23"}, "loopExpression": {"expression": {"id": 4862, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4155:3:23", "subExpression": {"id": 4861, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4855, "src": "4155:1:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4863, "nodeType": "ExpressionStatement", "src": "4155:3:23"}, "nodeType": "ForStatement", "src": "4115:159:23"}, {"expression": {"id": 4879, "name": "totalCrvEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4852, "src": "4290:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4850, "id": 4880, "nodeType": "Return", "src": "4283:21:23"}]}, "documentation": {"id": 4841, "nodeType": "StructuredDocumentation", "src": "3630:309:23", "text": "@notice Gets total amount of CRV earned by an account from staking multiple Curve\n LP tokens via Convex.\n @param _account Account which staked Curve LP tokens.\n @param _curvePools List of Curve pools for which earned CRV should be computed.\n @return Total amount of CRV earned."}, "functionSelector": "d8335008", "id": 4882, "implemented": true, "kind": "function", "modifiers": [], "name": "getCrvEarnedBatch", "nameLocation": "3953:17:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4847, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4843, "mutability": "mutable", "name": "_account", "nameLocation": "3988:8:23", "nodeType": "VariableDeclaration", "scope": 4882, "src": "3980:16:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 4842, "name": "address", "nodeType": "ElementaryTypeName", "src": "3980:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 4846, "mutability": "mutable", "name": "_curvePools", "nameLocation": "4023:11:23", "nodeType": "VariableDeclaration", "scope": 4882, "src": "4006:28:23", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 4844, "name": "address", "nodeType": "ElementaryTypeName", "src": "4006:7:23", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 4845, "nodeType": "ArrayTypeName", "src": "4006:9:23", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "src": "3970:70:23"}, "returnParameters": {"id": 4850, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4849, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4882, "src": "4064:7:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4848, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4064:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4063:9:23"}, "scope": 5036, "src": "3944:367:23", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"baseFunctions": [25052], "body": {"id": 4979, "nodeType": "Block", "src": "4819:784:23", "statements": [{"assignments": [4894], "declarations": [{"constant": false, "id": 4894, "mutability": "mutable", "name": "cvxTotalSupply", "nameLocation": "4837:14:23", "nodeType": "VariableDeclaration", "scope": 4979, "src": "4829:22:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4893, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4829:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4900, "initialValue": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"id": 4896, "name": "_CVX_TOKEN", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4686, "src": "4861:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 4895, "name": "IERC20", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19429, "src": "4854:6:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IERC20_$19429_$", "typeString": "type(contract IERC20)"}}, "id": 4897, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4854:18:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IERC20_$19429", "typeString": "contract IERC20"}}, "id": 4898, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "4873:11:23", "memberName": "totalSupply", "nodeType": "MemberAccess", "referencedDeclaration": 19378, "src": "4854:30:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$", "typeString": "function () view external returns (uint256)"}}, "id": 4899, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4854:32:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4829:57:23"}, {"expression": {"id": 4907, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 4901, "name": "cliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4891, "src": "4896:9:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo memory"}}, "id": 4903, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "4906:12:23", "memberName": "currentCliff", "nodeType": "MemberAccess", "referencedDeclaration": 27185, "src": "4896:22:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4906, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4904, "name": "cvxTotalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "4921:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 4905, "name": "_CLIFF_SIZE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4674, "src": "4938:11:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4921:28:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4896:53:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4908, "nodeType": "ExpressionStatement", "src": "4896:53:23"}, {"assignments": [4910], "declarations": [{"constant": false, "id": 4910, "mutability": "mutable", "name": "cvxNeededUntilNextCliff", "nameLocation": "4967:23:23", "nodeType": "VariableDeclaration", "scope": 4979, "src": "4959:31:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4909, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4959:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4917, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4916, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4911, "name": "_CLIFF_SIZE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4674, "src": "4993:11:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4914, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4912, "name": "cvxTotalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "5008:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"id": 4913, "name": "_CLIFF_SIZE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4674, "src": "5025:11:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5008:28:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 4915, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5007:30:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4993:44:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4959:78:23"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4923, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4918, "name": "cvxNeededUntilNextCliff", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4910, "src": "5051:23:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"arguments": [{"id": 4921, "name": "cliffThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4689, "src": "5098:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 4919, "name": "_CLIFF_SIZE", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4674, "src": "5078:11:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4920, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5090:7:23", "memberName": "mulDown", "nodeType": "MemberAccess", "referencedDeclaration": 23603, "src": "5078:19:23", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$", "typeString": "function (uint256,uint256) pure returns (uint256)"}}, "id": 4922, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5078:35:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5051:62:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4937, "nodeType": "IfStatement", "src": "5047:166:23", "trueBody": {"id": 4936, "nodeType": "Block", "src": "5115:98:23", "statements": [{"expression": {"id": 4928, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 4924, "name": "cliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4891, "src": "5129:9:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo memory"}}, "id": 4926, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "5139:12:23", "memberName": "currentCliff", "nodeType": "MemberAccess", "referencedDeclaration": 27185, "src": "5129:22:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "+=", "rightHandSide": {"hexValue": "31", "id": 4927, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5155:1:23", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "src": "5129:27:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4929, "nodeType": "ExpressionStatement", "src": "5129:27:23"}, {"expression": {"id": 4934, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"expression": {"id": 4930, "name": "cliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4891, "src": "5170:9:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo memory"}}, "id": 4932, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberLocation": "5180:15:23", "memberName": "withinThreshold", "nodeType": "MemberAccess", "referencedDeclaration": 27187, "src": "5170:25:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 4933, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5198:4:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "5170:32:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4935, "nodeType": "ExpressionStatement", "src": "5170:32:23"}]}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4941, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 4938, "name": "cliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4891, "src": "5227:9:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo memory"}}, "id": 4939, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "5237:12:23", "memberName": "currentCliff", "nodeType": "MemberAccess", "referencedDeclaration": 27185, "src": "5227:22:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"id": 4940, "name": "_CLIFF_COUNT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "5253:12:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5227:38:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4947, "nodeType": "IfStatement", "src": "5223:90:23", "trueBody": {"id": 4946, "nodeType": "Block", "src": "5267:46:23", "statements": [{"expression": {"components": [{"hexValue": "30", "id": 4942, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5289:1:23", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 4943, "name": "cliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4891, "src": "5292:9:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo memory"}}], "id": 4944, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5288:14:23", "typeDescriptions": {"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_struct$_CliffInfo_$27188_memory_ptr_$", "typeString": "tuple(int_const 0,struct Types.CliffInfo memory)"}}, "functionReturnParameters": 4892, "id": 4945, "nodeType": "Return", "src": "5281:21:23"}]}}, {"assignments": [4949], "declarations": [{"constant": false, "id": 4949, "mutability": "mutable", "name": "remaining", "nameLocation": "5331:9:23", "nodeType": "VariableDeclaration", "scope": 4979, "src": "5323:17:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4948, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5323:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4954, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4953, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4950, "name": "_CLIFF_COUNT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "5343:12:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"expression": {"id": 4951, "name": "cliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4891, "src": "5358:9:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo memory"}}, "id": 4952, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "memberLocation": "5368:12:23", "memberName": "currentCliff", "nodeType": "MemberAccess", "referencedDeclaration": 27185, "src": "5358:22:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5343:37:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5323:57:23"}, {"expression": {"id": 4962, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4955, "name": "cvxEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4888, "src": "5390:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4961, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4958, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4956, "name": "crvAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4885, "src": "5403:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"id": 4957, "name": "remaining", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4949, "src": "5415:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5403:21:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 4959, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "5402:23:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"id": 4960, "name": "_CLIFF_COUNT", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4671, "src": "5428:12:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5402:38:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5390:50:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4963, "nodeType": "ExpressionStatement", "src": "5390:50:23"}, {"assignments": [4965], "declarations": [{"constant": false, "id": 4965, "mutability": "mutable", "name": "amountTillMax", "nameLocation": "5458:13:23", "nodeType": "VariableDeclaration", "scope": 4979, "src": "5450:21:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4964, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5450:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 4969, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4968, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4966, "name": "_MAX_CVX_SUPPLY", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4677, "src": "5474:15:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"id": 4967, "name": "cvxTotalSupply", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4894, "src": "5492:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5474:32:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "5450:56:23"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 4972, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 4970, "name": "cvxEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4888, "src": "5520:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"id": 4971, "name": "amountTillMax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4965, "src": "5532:13:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5520:25:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 4978, "nodeType": "IfStatement", "src": "5516:81:23", "trueBody": {"id": 4977, "nodeType": "Block", "src": "5547:50:23", "statements": [{"expression": {"id": 4975, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 4973, "name": "cvxEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4888, "src": "5561:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 4974, "name": "amountTillMax", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4965, "src": "5573:13:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "5561:25:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 4976, "nodeType": "ExpressionStatement", "src": "5561:25:23"}]}}]}, "documentation": {"id": 4883, "nodeType": "StructuredDocumentation", "src": "4317:345:23", "text": "@notice Computes how much CVX can be claimed for an amount of CRV earned\n @dev Not easily computable from the CVX token contract\n @param crvAmount Amount of CRV for which CVX will be minted pro rata.\n @return cvxEarned CVX amount that would be minted.\n @return cliffInfo information about the current Convex cliff"}, "functionSelector": "705e1e55", "id": 4980, "implemented": true, "kind": "function", "modifiers": [], "name": "computeClaimableConvexWithCliffInfo", "nameLocation": "4676:35:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4886, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4885, "mutability": "mutable", "name": "crvAmount", "nameLocation": "4729:9:23", "nodeType": "VariableDeclaration", "scope": 4980, "src": "4721:17:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4884, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4721:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4711:33:23"}, "returnParameters": {"id": 4892, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4888, "mutability": "mutable", "name": "cvxEarned", "nameLocation": "4774:9:23", "nodeType": "VariableDeclaration", "scope": 4980, "src": "4766:17:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4887, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4766:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 4891, "mutability": "mutable", "name": "cliffInfo", "nameLocation": "4808:9:23", "nodeType": "VariableDeclaration", "scope": 4980, "src": "4785:32:23", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_memory_ptr", "typeString": "struct Types.CliffInfo"}, "typeName": {"id": 4890, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 4889, "name": "Types.CliffInfo", "nameLocations": ["4785:5:23", "4791:9:23"], "nodeType": "IdentifierPath", "referencedDeclaration": 27188, "src": "4785:15:23"}, "referencedDeclaration": 27188, "src": "4785:15:23", "typeDescriptions": {"typeIdentifier": "t_struct$_CliffInfo_$27188_storage_ptr", "typeString": "struct Types.CliffInfo"}}, "visibility": "internal"}], "src": "4765:53:23"}, "scope": 5036, "src": "4667:936:23", "stateMutability": "view", "virtual": false, "visibility": "public"}, {"baseFunctions": [25042], "body": {"id": 4995, "nodeType": "Block", "src": "5692:113:23", "statements": [{"assignments": [4988, null], "declarations": [{"constant": false, "id": 4988, "mutability": "mutable", "name": "cvxEarned", "nameLocation": "5711:9:23", "nodeType": "VariableDeclaration", "scope": 4995, "src": "5703:17:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4987, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5703:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, null], "id": 4992, "initialValue": {"arguments": [{"id": 4990, "name": "crvAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4982, "src": "5762:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 4989, "name": "computeClaimableConvexWithCliffInfo", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4980, "src": "5726:35:23", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_struct$_CliffInfo_$27188_memory_ptr_$", "typeString": "function (uint256) view returns (uint256,struct Types.CliffInfo memory)"}}, "id": 4991, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5726:46:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_uint256_$_t_struct$_CliffInfo_$27188_memory_ptr_$", "typeString": "tuple(uint256,struct Types.CliffInfo memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5702:70:23"}, {"expression": {"id": 4993, "name": "cvxEarned", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4988, "src": "5789:9:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 4986, "id": 4994, "nodeType": "Return", "src": "5782:16:23"}]}, "functionSelector": "323808cd", "id": 4996, "implemented": true, "kind": "function", "modifiers": [], "name": "computeClaimableConvex", "nameLocation": "5618:22:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4983, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4982, "mutability": "mutable", "name": "crvAmount", "nameLocation": "5649:9:23", "nodeType": "VariableDeclaration", "scope": 4996, "src": "5641:17:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4981, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5641:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5640:19:23"}, "returnParameters": {"id": 4986, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4985, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 4996, "src": "5683:7:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4984, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5683:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5682:9:23"}, "scope": 5036, "src": "5609:196:23", "stateMutability": "view", "virtual": false, "visibility": "external"}, {"body": {"id": 5034, "nodeType": "Block", "src": "5875:379:23", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 5012, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 5002, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "5906:3:23", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 5003, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5910:6:23", "memberName": "sender", "nodeType": "MemberAccess", "src": "5906:10:23", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"arguments": [], "expression": {"argumentTypes": [], "expression": {"arguments": [{"arguments": [{"id": 5007, "name": "controller", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4692, "src": "5937:10:23", "typeDescriptions": {"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IController_$24750", "typeString": "contract IController"}], "id": 5006, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5929:7:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 5005, "name": "address", "nodeType": "ElementaryTypeName", "src": "5929:7:23", "typeDescriptions": {}}}, "id": 5008, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5929:19:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 5004, "name": "IOwnable", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 25069, "src": "5920:8:23", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IOwnable_$25069_$", "typeString": "type(contract IOwnable)"}}, "id": 5009, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5920:29:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IOwnable_$25069", "typeString": "contract IOwnable"}}, "id": 5010, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5950:5:23", "memberName": "owner", "nodeType": "MemberAccess", "referencedDeclaration": 25060, "src": "5920:35:23", "typeDescriptions": {"typeIdentifier": "t_function_external_view$__$returns$_t_address_$", "typeString": "function () view external returns (address)"}}, "id": 5011, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5920:37:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5906:51:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "63616c6c6572206973206e6f7420676f7665726e616e63652070726f7879", "id": 5013, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5971:32:23", "typeDescriptions": {"typeIdentifier": "t_stringliteral_bfaa88921f4cae682dc9cb1cb697a4be696e5da0025246208e1140ea8beb054f", "typeString": "literal_string \"caller is not governance proxy\""}, "value": "caller is not governance proxy"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_bfaa88921f4cae682dc9cb1cb697a4be696e5da0025246208e1140ea8beb054f", "typeString": "literal_string \"caller is not governance proxy\""}], "id": 5001, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5885:7:23", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5014, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5885:128:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5015, "nodeType": "ExpressionStatement", "src": "5885:128:23"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5019, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5017, "name": "_cliffThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4998, "src": "6031:15:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 5018, "name": "_MAX_CLIFF_THRESHOLD", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4680, "src": "6050:20:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6031:39:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6e657720636c696666207468726573686f6c6420697320746f6f2068696768", "id": 5020, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6072:33:23", "typeDescriptions": {"typeIdentifier": "t_stringliteral_6ee2d6e967c0e47c5eed620563ea3f9ea3559b02d29b6ed5b2618715aa0753bd", "typeString": "literal_string \"new cliff threshold is too high\""}, "value": "new cliff threshold is too high"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_6ee2d6e967c0e47c5eed620563ea3f9ea3559b02d29b6ed5b2618715aa0753bd", "typeString": "literal_string \"new cliff threshold is too high\""}], "id": 5016, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6023:7:23", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5021, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6023:83:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5022, "nodeType": "ExpressionStatement", "src": "6023:83:23"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 5026, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 5024, "name": "_cliffThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4998, "src": "6124:15:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"id": 5025, "name": "cliffThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4689, "src": "6143:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6124:33:23", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "6e657720636c696666207468726573686f6c64206d75737420626520686967686572206f72206c6f776572", "id": 5027, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "6159:45:23", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a3cef0e4480b0da5b71860d5afed5736b9c58c997d8e66af4fdca67bdd6ac38b", "typeString": "literal_string \"new cliff threshold must be higher or lower\""}, "value": "new cliff threshold must be higher or lower"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_a3cef0e4480b0da5b71860d5afed5736b9c58c997d8e66af4fdca67bdd6ac38b", "typeString": "literal_string \"new cliff threshold must be higher or lower\""}], "id": 5023, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "6116:7:23", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 5028, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "6116:89:23", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 5029, "nodeType": "ExpressionStatement", "src": "6116:89:23"}, {"expression": {"id": 5032, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 5030, "name": "cliffThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4689, "src": "6215:14:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 5031, "name": "_cliffThreshold", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 4998, "src": "6232:15:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "6215:32:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 5033, "nodeType": "ExpressionStatement", "src": "6215:32:23"}]}, "functionSelector": "080898ca", "id": 5035, "implemented": true, "kind": "function", "modifiers": [], "name": "updateCliffThreshold", "nameLocation": "5820:20:23", "nodeType": "FunctionDefinition", "parameters": {"id": 4999, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 4998, "mutability": "mutable", "name": "_cliffThreshold", "nameLocation": "5849:15:23", "nodeType": "VariableDeclaration", "scope": 5035, "src": "5841:23:23", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 4997, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5841:7:23", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5840:25:23"}, "returnParameters": {"id": 5000, "nodeType": "ParameterList", "parameters": [], "src": "5875:0:23"}, "scope": 5036, "src": "5811:443:23", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 5037, "src": "596:5660:23", "usedErrors": []}], "src": "45:6212:23"}, "bytecode": "", "bytecodeSha1": "f84822d1ff3b7a28c86141147894ac13bf402fba", "compiler": {"evm_version": "london", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.17+commit.8df45f5f"}, "contractName": "ConvexHandler", "coverageMap": {"branches": {"10": {}, "11": {}, "12": {}, "23": {"ConvexHandler.computeClaimableConvexWithCliffInfo": {"22": [5051, 5113, false], "23": [5520, 5545, false]}, "ConvexHandler.updateCliffThreshold": {"19": [5906, 5957, true], "20": [6031, 6070, true], "21": [6124, 6157, true]}}, "46": {}, "47": {}, "49": {}, "50": {}, "51": {}, "54": {}, "56": {}, "62": {}, "68": {}, "69": {}, "71": {}, "72": {}, "8": {}, "86": {}}, "statements": {"10": {}, "11": {}, "12": {}, "23": {"ConvexHandler._claimConvexReward": {"18": [2965, 3020]}, "ConvexHandler.claimEarnings": {"13": [2575, 2617]}, "ConvexHandler.computeClaimableConvexWithCliffInfo": {"7": [4896, 4949], "8": [5129, 5156], "9": [5170, 5202], "10": [5281, 5302], "11": [5390, 5440], "12": [5561, 5586]}, "ConvexHandler.deposit": {"5": [1655, 1719]}, "ConvexHandler.getCrvEarned": {"4": [3566, 3617]}, "ConvexHandler.getCrvEarnedBatch": {"14": [4217, 4263], "15": [4155, 4158]}, "ConvexHandler.getRewardPool": {"6": [2713, 2777]}, "ConvexHandler.updateCliffThreshold": {"0": [5885, 6013], "1": [6023, 6106], "2": [6116, 6205], "3": [6215, 6247]}, "ConvexHandler.withdraw": {"16": [2169, 2230]}}, "46": {}, "47": {}, "49": {}, "50": {}, "51": {}, "54": {}, "56": {}, "62": {}, "68": {}, "69": {}, "71": {}, "72": {}, "8": {}, "86": {"ScaledMath.mulDown": {"17": [274, 294]}}}}, "dependencies": ["node_modules/@openzeppelin/Address", "IBaseRewardPool", "IBonding", "IBooster", "IController", "IConvexHandler", "ICurveRegistryCache", "node_modules/@openzeppelin/IERC20", "node_modules/@openzeppelin/IERC20Permit", "IFeeRecipient", "IGenericOracle", "IInflationManager", "ILpTokenStaker", "IOwnable", "IPoolAdapter", "node_modules/@openzeppelin/SafeERC20", "ScaledMath"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063514a900911610071578063514a900914610118578063705e1e5514610143578063970de3811461017a578063d83350081461018d578063f3fef3a3146101a0578063f77c4791146101b357600080fd5b8063080898ca146100ae5780631fa309b0146100c3578063212f9b4f146100df578063323808cd146100f257806347e7ef2414610105575b600080fd5b6100c16100bc366004610c79565b6101da565b005b6100cc60005481565b6040519081526020015b60405180910390f35b6100cc6100ed366004610cba565b610383565b6100cc610100366004610c79565b6104ea565b6100c1610113366004610cf3565b6104fe565b61012b610126366004610d1f565b6106f4565b6040516001600160a01b0390911681526020016100d6565b610156610151366004610c79565b6107e4565b604080519283528151602080850191909152909101511515908201526060016100d6565b6100c1610188366004610cba565b610969565b6100cc61019b366004610d52565b610977565b6100c16101ae366004610cf3565b6109ce565b61012b7f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025c9190610e2c565b6001600160a01b0316336001600160a01b0316146102c15760405162461bcd60e51b815260206004820152601e60248201527f63616c6c6572206973206e6f7420676f7665726e616e63652070726f7879000060448201526064015b60405180910390fd5b670429d069189e00008111156103195760405162461bcd60e51b815260206004820152601f60248201527f6e657720636c696666207468726573686f6c6420697320746f6f20686967680060448201526064016102b8565b600054810361037e5760405162461bcd60e51b815260206004820152602b60248201527f6e657720636c696666207468726573686f6c64206d757374206265206869676860448201526a32b91037b9103637bbb2b960a91b60648201526084016102b8565b600055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639f82b2176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104089190610e2c565b60405163514a900960e01b81526001600160a01b038581166004830152919091169063514a900990602401602060405180830381865afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104749190610e2c565b6040516246613160e11b81526001600160a01b03868116600483015291925090821690628cc26290602401602060405180830381865afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e09190610e49565b9150505b92915050565b6000806104f6836107e4565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639f82b2176040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105829190610e2c565b6040516343b55f3560e01b81526001600160a01b03858116600483015291909116906343b55f3590602401602060405180830381865afa1580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190610e49565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632cdacb506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561064e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106729190610e2c565b6040516321d0683360e11b81526004810183905260248101849052600160448201526001600160a01b0391909116906343a0d066906064015b6020604051808303816000875af11580156106ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ee9190610e62565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639f82b2176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190610e2c565b60405163514a900960e01b81526001600160a01b038481166004830152919091169063514a900990602401602060405180830381865afa1580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190610e2c565b60408051808201909152600080825260208201819052906000734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b6001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561084f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108739190610e49565b905061088969152d02c7e14af680000082610eb0565b825260006108a169152d02c7e14af680000083610ec4565b6108b59069152d02c7e14af6800000610ed8565b90506108d660005469152d02c7e14af6800000610af590919063ffffffff16565b81116108fa576001836000018181516108ef9190610eeb565b905250600160208401525b82516103e81161090f57600093505050915091565b8251600090610920906103e8610ed8565b90506103e861092f8288610efe565b6109399190610eb0565b94506000610952846a52b7d2dcc80cd2e4000000610ed8565b905080861115610960578095505b50505050915091565b6109738282610b1e565b5050565b60008060005b83518110156104f657600084828151811061099a5761099a610f15565b602002602001015190506109ae8682610383565b6109b89084610eeb565b92505080806109c690610f2b565b91505061097d565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639f82b2176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a529190610e2c565b60405163514a900960e01b81526001600160a01b038581166004830152919091169063514a900990602401602060405180830381865afa158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe9190610e2c565b604051636197390160e11b815260048101849052600060248201529091506001600160a01b0382169063c32e7202906044016106ab565b6000610b036012600a611028565b610b0d8385610efe565b610b179190610eb0565b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639f82b2176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba29190610e2c565b60405163514a900960e01b81526001600160a01b038581166004830152919091169063514a900990602401602060405180830381865afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190610e2c565b604051637050ccd960e01b81526001600160a01b0384811660048301526001602483015291925090821690637050ccd990604401600060405180830381600087803b158015610c5c57600080fd5b505af1158015610c70573d6000803e3d6000fd5b50505050505050565b600060208284031215610c8b57600080fd5b5035919050565b6001600160a01b0381168114610ca757600080fd5b50565b8035610cb581610c92565b919050565b60008060408385031215610ccd57600080fd5b8235610cd881610c92565b91506020830135610ce881610c92565b809150509250929050565b60008060408385031215610d0657600080fd5b8235610d1181610c92565b946020939093013593505050565b600060208284031215610d3157600080fd5b8135610b1781610c92565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610d6557600080fd5b8235610d7081610c92565b915060208381013567ffffffffffffffff80821115610d8e57600080fd5b818601915086601f830112610da257600080fd5b813581811115610db457610db4610d3c565b8060051b604051601f19603f83011681018181108582111715610dd957610dd9610d3c565b604052918252848201925083810185019189831115610df757600080fd5b938501935b82851015610e1c57610e0d85610caa565b84529385019392850192610dfc565b8096505050505050509250929050565b600060208284031215610e3e57600080fd5b8151610b1781610c92565b600060208284031215610e5b57600080fd5b5051919050565b600060208284031215610e7457600080fd5b81518015158114610b1757600080fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082610ebf57610ebf610e84565b500490565b600082610ed357610ed3610e84565b500690565b818103818111156104e4576104e4610e9a565b808201808211156104e4576104e4610e9a565b80820281158282048414176104e4576104e4610e9a565b634e487b7160e01b600052603260045260246000fd5b600060018201610f3d57610f3d610e9a565b5060010190565b600181815b80851115610f7f578160001904821115610f6557610f65610e9a565b80851615610f7257918102915b93841c9390800290610f49565b509250929050565b600082610f96575060016104e4565b81610fa3575060006104e4565b8160018114610fb95760028114610fc357610fdf565b60019150506104e4565b60ff841115610fd457610fd4610e9a565b50506001821b6104e4565b5060208310610133831016604e8410600b8410161715611002575081810a6104e4565b61100c8383610f44565b806000190482111561102057611020610e9a565b029392505050565b6000610b178383610f8756fea2646970667358221220d3a87fef64eb4ab1cd665b8dca7b4784b14ff527c796f8f0715e719df1a4bac164736f6c63430008110033", "deployedSourceMap": "596:5660:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5811:443;;;;;;:::i;:::-;;:::i;:::-;;1039:39;;;;;;;;;345:25:88;;;333:2;318:18;1039:39:23;;;;;;;;3378:246;;;;;;:::i;:::-;;:::i;5609:196::-;;;;;;:::i;:::-;;:::i;1508:218::-;;;;;;:::i;:::-;;:::i;2630:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1785:32:88;;;1767:51;;1755:2;1740:18;2630:154:23;1621:203:88;4667:936:23;;;;;;:::i;:::-;;:::i;:::-;;;;2059:25:88;;;2120:13;;2115:2;2100:18;;;2093:41;;;;2190:15;;;2184:22;2177:30;2170:38;2150:18;;;2143:66;2047:2;2032:18;4667:936:23;1829:386:88;2493:131:23;;;;;;:::i;:::-;;:::i;3944:367::-;;;;;;:::i;:::-;;:::i;2007:230::-;;;;;;:::i;:::-;;:::i;1085:39::-;;;;;5811:443;5937:10;-1:-1:-1;;;;;5920:35:23;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5906:51:23;:10;-1:-1:-1;;;;;5906:51:23;;5885:128;;;;-1:-1:-1;;;5885:128:23;;4300:2:88;5885:128:23;;;4282:21:88;4339:2;4319:18;;;4312:30;4378:32;4358:18;;;4351:60;4428:18;;5885:128:23;;;;;;;;;930:6;6031:15;:39;;6023:83;;;;-1:-1:-1;;;6023:83:23;;4659:2:88;6023:83:23;;;4641:21:88;4698:2;4678:18;;;4671:30;4737:33;4717:18;;;4710:61;4788:18;;6023:83:23;4457:355:88;6023:83:23;6143:14;;6124:15;:33;6116:89;;;;-1:-1:-1;;;6116:89:23;;5019:2:88;6116:89:23;;;5001:21:88;5058:2;5038:18;;;5031:30;5097:34;5077:18;;;5070:62;-1:-1:-1;;;5148:18:88;;;5141:41;5199:19;;6116:89:23;4817:407:88;6116:89:23;6215:14;:32;5811:443::o;3378:246::-;3459:7;3478:18;3499:10;-1:-1:-1;;;;;3499:29:23;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;-1:-1:-1;;;3499:57:23;;-1:-1:-1;;;;;1785:32:88;;;3499:57:23;;;1767:51:88;3499:45:23;;;;;;;1740:18:88;;3499:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3573:44;;-1:-1:-1;;;3573:44:23;;-1:-1:-1;;;;;1785:32:88;;;3573:44:23;;;1767:51:88;3478:78:23;;-1:-1:-1;3573:34:23;;;;;;1740:18:88;;3573:44:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3566:51;;;3378:246;;;;;:::o;5609:196::-;5683:7;5703:17;5726:46;5762:9;5726:35;:46::i;:::-;-1:-1:-1;5702:70:23;5609:196;-1:-1:-1;;;5609:196:23:o;1508:218::-;1581:11;1595:10;-1:-1:-1;;;;;1595:29:23;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;-1:-1:-1;;;1595:50:23;;-1:-1:-1;;;;;1785:32:88;;;1595:50:23;;;1767:51:88;1595:38:23;;;;;;;1740:18:88;;1595:50:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1581:64;;1664:10;-1:-1:-1;;;;;1664:24:23;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1655:64;;-1:-1:-1;;;1655:64:23;;;;;5899:25:88;;;5940:18;;;5933:34;;;1714:4:23;5983:18:88;;;5976:50;-1:-1:-1;;;;;1655:44:23;;;;;;;5872:18:88;;1655:64:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1571:155;1508:218;;:::o;2630:154::-;2694:7;2720:10;-1:-1:-1;;;;;2720:29:23;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;-1:-1:-1;;;2720:57:23;;-1:-1:-1;;;;;1785:32:88;;;2720:57:23;;;1767:51:88;2720:45:23;;;;;;;1740:18:88;;2720:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4667:936::-;-1:-1:-1;;;;;;;;;4766:17:23;-1:-1:-1;;;;;;;;;4766:17:23;4829:22;989:42;-1:-1:-1;;;;;4854:30:23;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4829:57;-1:-1:-1;4921:28:23;801:10;4829:57;4921:28;:::i;:::-;4896:53;;:22;5008:28;801:10;5008:14;:28;:::i;:::-;4993:44;;801:10;4993:44;:::i;:::-;4959:78;;5078:35;5098:14;;801:10;5078:19;;:35;;;;:::i;:::-;5051:23;:62;5047:166;;5155:1;5129:9;:22;;:27;;;;;;;:::i;:::-;;;-1:-1:-1;5198:4:23;5170:25;;;:32;5047:166;5227:22;;751:4;-1:-1:-1;5223:90:23;;5289:1;5281:21;;;;4667:936;;;:::o;5223:90::-;5358:22;;5323:17;;5343:37;;751:4;5343:37;:::i;:::-;5323:57;-1:-1:-1;751:4:23;5403:21;5323:57;5403:9;:21;:::i;:::-;5402:38;;;;:::i;:::-;5390:50;-1:-1:-1;5450:21:23;5474:32;5492:14;861;5474:32;:::i;:::-;5450:56;;5532:13;5520:9;:25;5516:81;;;5573:13;5561:25;;5516:81;4819:784;;;;4667:936;;;:::o;2493:131::-;2575:42;2594:10;2606;2575:18;:42::i;:::-;2493:131;;:::o;3944:367::-;4064:7;4083:22;4120:9;4115:159;4135:11;:18;4131:1;:22;4115:159;;;4174:12;4189:11;4201:1;4189:14;;;;;;;;:::i;:::-;;;;;;;4174:29;;4235:28;4248:8;4258:4;4235:12;:28::i;:::-;4217:46;;;;:::i;:::-;;;4160:114;4155:3;;;;;:::i;:::-;;;;4115:159;;2007:230;2081:18;2102:10;-1:-1:-1;;;;;2102:29:23;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;-1:-1:-1;;;2102:57:23;;-1:-1:-1;;;;;1785:32:88;;;2102:57:23;;;1767:51:88;2102:45:23;;;;;;;1740:18:88;;2102:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2169:61;;-1:-1:-1;;;2169:61:23;;;;;7701:25:88;;;2224:5:23;7742:18:88;;;7735:50;2081:78:23;;-1:-1:-1;;;;;;2169:45:23;;;;;7674:18:88;;2169:61:23;7533:258:88;193:108:86;255:7;172:14;132:2;172;:14;:::i;:::-;282:5;286:1;282;:5;:::i;:::-;281:13;;;;:::i;:::-;274:20;193:108;-1:-1:-1;;;193:108:86:o;2790:237:23:-;2877:18;2898:10;-1:-1:-1;;;;;2898:29:23;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;-1:-1:-1;;;2898:57:23;;-1:-1:-1;;;;;1785:32:88;;;2898:57:23;;;1767:51:88;2898:45:23;;;;;;;1740:18:88;;2898:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2965:55;;-1:-1:-1;;;2965:55:23;;-1:-1:-1;;;;;9356:32:88;;;2965:55:23;;;9338:51:88;3015:4:23;9405:18:88;;;9398:50;2877:78:23;;-1:-1:-1;2965:37:23;;;;;;9311:18:88;;2965:55:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2867:160;2790:237;;:::o;14:180:88:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:88;;14:180;-1:-1:-1;14:180:88:o;381:131::-;-1:-1:-1;;;;;456:31:88;;446:42;;436:70;;502:1;499;492:12;436:70;381:131;:::o;517:134::-;585:20;;614:31;585:20;614:31;:::i;:::-;517:134;;;:::o;656:388::-;724:6;732;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;840:9;827:23;859:31;884:5;859:31;:::i;:::-;909:5;-1:-1:-1;966:2:88;951:18;;938:32;979:33;938:32;979:33;:::i;:::-;1031:7;1021:17;;;656:388;;;;;:::o;1049:315::-;1117:6;1125;1178:2;1166:9;1157:7;1153:23;1149:32;1146:52;;;1194:1;1191;1184:12;1146:52;1233:9;1220:23;1252:31;1277:5;1252:31;:::i;:::-;1302:5;1354:2;1339:18;;;;1326:32;;-1:-1:-1;;;1049:315:88:o;1369:247::-;1428:6;1481:2;1469:9;1460:7;1456:23;1452:32;1449:52;;;1497:1;1494;1487:12;1449:52;1536:9;1523:23;1555:31;1580:5;1555:31;:::i;2220:127::-;2281:10;2276:3;2272:20;2269:1;2262:31;2312:4;2309:1;2302:15;2336:4;2333:1;2326:15;2352:1256;2445:6;2453;2506:2;2494:9;2485:7;2481:23;2477:32;2474:52;;;2522:1;2519;2512:12;2474:52;2561:9;2548:23;2580:31;2605:5;2580:31;:::i;:::-;2630:5;-1:-1:-1;2654:2:88;2692:18;;;2679:32;2730:18;2760:14;;;2757:34;;;2787:1;2784;2777:12;2757:34;2825:6;2814:9;2810:22;2800:32;;2870:7;2863:4;2859:2;2855:13;2851:27;2841:55;;2892:1;2889;2882:12;2841:55;2928:2;2915:16;2950:2;2946;2943:10;2940:36;;;2956:18;;:::i;:::-;3002:2;2999:1;2995:10;3034:2;3028:9;3097:2;3093:7;3088:2;3084;3080:11;3076:25;3068:6;3064:38;3152:6;3140:10;3137:22;3132:2;3120:10;3117:18;3114:46;3111:72;;;3163:18;;:::i;:::-;3199:2;3192:22;3249:18;;;3283:15;;;;-1:-1:-1;3325:11:88;;;3321:20;;;3353:19;;;3350:39;;;3385:1;3382;3375:12;3350:39;3409:11;;;;3429:148;3445:6;3440:3;3437:15;3429:148;;;3511:23;3530:3;3511:23;:::i;:::-;3499:36;;3462:12;;;;3555;;;;3429:148;;;3596:6;3586:16;;;;;;;;2352:1256;;;;;:::o;3842:251::-;3912:6;3965:2;3953:9;3944:7;3940:23;3936:32;3933:52;;;3981:1;3978;3971:12;3933:52;4013:9;4007:16;4032:31;4057:5;4032:31;:::i;5514:184::-;5584:6;5637:2;5625:9;5616:7;5612:23;5608:32;5605:52;;;5653:1;5650;5643:12;5605:52;-1:-1:-1;5676:16:88;;5514:184;-1:-1:-1;5514:184:88:o;6037:277::-;6104:6;6157:2;6145:9;6136:7;6132:23;6128:32;6125:52;;;6173:1;6170;6163:12;6125:52;6205:9;6199:16;6258:5;6251:13;6244:21;6237:5;6234:32;6224:60;;6280:1;6277;6270:12;6319:127;6380:10;6375:3;6371:20;6368:1;6361:31;6411:4;6408:1;6401:15;6435:4;6432:1;6425:15;6451:127;6512:10;6507:3;6503:20;6500:1;6493:31;6543:4;6540:1;6533:15;6567:4;6564:1;6557:15;6583:120;6623:1;6649;6639:35;;6654:18;;:::i;:::-;-1:-1:-1;6688:9:88;;6583:120::o;6708:112::-;6740:1;6766;6756:35;;6771:18;;:::i;:::-;-1:-1:-1;6805:9:88;;6708:112::o;6825:128::-;6892:9;;;6913:11;;;6910:37;;;6927:18;;:::i;6958:125::-;7023:9;;;7044:10;;;7041:36;;;7057:18;;:::i;7088:168::-;7161:9;;;7192;;7209:15;;;7203:22;;7189:37;7179:71;;7230:18;;:::i;7261:127::-;7322:10;7317:3;7313:20;7310:1;7303:31;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7393:135;7432:3;7453:17;;;7450:43;;7473:18;;:::i;:::-;-1:-1:-1;7520:1:88;7509:13;;7393:135::o;7796:422::-;7885:1;7928:5;7885:1;7942:270;7963:7;7953:8;7950:21;7942:270;;;8022:4;8018:1;8014:6;8010:17;8004:4;8001:27;7998:53;;;8031:18;;:::i;:::-;8081:7;8071:8;8067:22;8064:55;;;8101:16;;;;8064:55;8180:22;;;;8140:15;;;;7942:270;;;7946:3;7796:422;;;;;:::o;8223:806::-;8272:5;8302:8;8292:80;;-1:-1:-1;8343:1:88;8357:5;;8292:80;8391:4;8381:76;;-1:-1:-1;8428:1:88;8442:5;;8381:76;8473:4;8491:1;8486:59;;;;8559:1;8554:130;;;;8466:218;;8486:59;8516:1;8507:10;;8530:5;;;8554:130;8591:3;8581:8;8578:17;8575:43;;;8598:18;;:::i;:::-;-1:-1:-1;;8654:1:88;8640:16;;8669:5;;8466:218;;8768:2;8758:8;8755:16;8749:3;8743:4;8740:13;8736:36;8730:2;8720:8;8717:16;8712:2;8706:4;8703:12;8699:35;8696:77;8693:159;;;-1:-1:-1;8805:19:88;;;8837:5;;8693:159;8884:34;8909:8;8903:4;8884:34;:::i;:::-;8954:6;8950:1;8946:6;8942:19;8933:7;8930:32;8927:58;;;8965:18;;:::i;:::-;9003:20;;8223:806;-1:-1:-1;;;8223:806:88:o;9034:131::-;9094:5;9123:36;9150:8;9144:4;9123:36;:::i", "language": "Solidity", "natspec": {"kind": "dev", "methods": {"claimEarnings(address,address)": {"notice": "Claims CRV, CVX and extra rewards from Convex on behalf of a Conic pool.", "params": {"_conicPool": "Conic pool for which rewards will be claimed.", "_curvePool": "Curve pool from which LP tokens have been deposited on Convex."}}, "computeClaimableConvexWithCliffInfo(uint256)": {"details": "Not easily computable from the CVX token contract", "notice": "Computes how much CVX can be claimed for an amount of CRV earned", "params": {"crvAmount": "Amount of CRV for which CVX will be minted pro rata."}, "returns": {"cliffInfo": "information about the current Convex cliff", "cvxEarned": "CVX amount that would be minted."}}, "deposit(address,uint256)": {"notice": "Deposits a Curve LP token on Convex and stakes the Convex Curve LP token in the respective CRV rewards contract on Convex.", "params": {"_amount": "Amount of Curve LP tokens to deposit", "_curvePool": "Curve Pool for which LP tokens should be deposited"}}, "getCrvEarned(address,address)": {"notice": "Gets total amount of CRV earned by an account from staking an amount of Curve LP tokens via Convex for a single Curve pool.", "params": {"_account": "Account which staked an amount of Curve LP tokens.", "_curvePool": "Curve pool for which earned CRV should be computed."}, "returns": {"_0": "Total amount of CRV earned."}}, "getCrvEarnedBatch(address,address[])": {"notice": "Gets total amount of CRV earned by an account from staking multiple Curve LP tokens via Convex.", "params": {"_account": "Account which staked Curve LP tokens.", "_curvePools": "List of Curve pools for which earned CRV should be computed."}, "returns": {"_0": "Total amount of CRV earned."}}, "withdraw(address,uint256)": {"details": "Curve LP tokens get unstaked from the Convex CRV rewards contract.", "notice": "Withdraws Curve LP tokens from Convex.", "params": {"_amount": "Amount of Curve LP tokens to withdraw.", "_curvePool": "Curve pool for which LP tokens should be withdrawn."}}}, "version": 1}, "offset": [596, 6256], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x514A9009 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x514A9009 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x705E1E55 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x970DE381 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xD8335008 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xF77C4791 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80898CA EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x1FA309B0 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x212F9B4F EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x323808CD EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x105 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH2 0xED CALLDATASIZE PUSH1 0x4 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x100 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x4FE JUMP JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xD1F JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0xC79 JUMP JUMPDEST PUSH2 0x7E4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0xD6 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xCBA JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH2 0xCC PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xD52 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xCF3 JUMP JUMPDEST PUSH2 0x9CE JUMP JUMPDEST PUSH2 0x12B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x238 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420676F7665726E616E63652070726F78790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x429D069189E0000 DUP2 GT ISZERO PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E657720636C696666207468726573686F6C6420697320746F6F206869676800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 SUB PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E657720636C696666207468726573686F6C64206D7573742062652068696768 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x32B91037B9103637BBB2B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9F82B217 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x408 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x514A9009 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x514A9009 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x474 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x466131 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH3 0x8CC262 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4F6 DUP4 PUSH2 0x7E4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9F82B217 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x55E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x582 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x43B55F35 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x43B55F35 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5EE SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2CDACB50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x672 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x21D06833 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x43A0D066 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0xE62 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9F82B217 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x754 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x778 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x514A9009 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x514A9009 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH1 0x0 PUSH20 0x4E3FBD56CD56C3E72C1403E103B45DB9DA5B9D2B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH2 0x889 PUSH10 0x152D02C7E14AF6800000 DUP3 PUSH2 0xEB0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x0 PUSH2 0x8A1 PUSH10 0x152D02C7E14AF6800000 DUP4 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x8B5 SWAP1 PUSH10 0x152D02C7E14AF6800000 PUSH2 0xED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x8D6 PUSH1 0x0 SLOAD PUSH10 0x152D02C7E14AF6800000 PUSH2 0xAF5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 GT PUSH2 0x8FA JUMPI PUSH1 0x1 DUP4 PUSH1 0x0 ADD DUP2 DUP2 MLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0xEEB JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x20 DUP5 ADD MSTORE JUMPDEST DUP3 MLOAD PUSH2 0x3E8 GT PUSH2 0x90F JUMPI PUSH1 0x0 SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x920 SWAP1 PUSH2 0x3E8 PUSH2 0xED8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8 PUSH2 0x92F DUP3 DUP9 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0x939 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 PUSH2 0x952 DUP5 PUSH11 0x52B7D2DCC80CD2E4000000 PUSH2 0xED8 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 GT ISZERO PUSH2 0x960 JUMPI DUP1 SWAP6 POP JUMPDEST POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x973 DUP3 DUP3 PUSH2 0xB1E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x99A JUMPI PUSH2 0x99A PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x9AE DUP7 DUP3 PUSH2 0x383 JUMP JUMPDEST PUSH2 0x9B8 SWAP1 DUP5 PUSH2 0xEEB JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x9C6 SWAP1 PUSH2 0xF2B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x97D JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9F82B217 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x514A9009 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x514A9009 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABE SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x61973901 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC32E7202 SWAP1 PUSH1 0x44 ADD PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB03 PUSH1 0x12 PUSH1 0xA PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xB0D DUP4 DUP6 PUSH2 0xEFE JUMP JUMPDEST PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0xEB0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9F82B217 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x514A9009 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x514A9009 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0E SWAP2 SWAP1 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x7050CCD9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0x7050CCD9 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xCB5 DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCD8 DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xCE8 DUP2 PUSH2 0xC92 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD11 DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB17 DUP2 PUSH2 0xC92 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xD70 DUP2 PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB4 PUSH2 0xD3C JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xDD9 JUMPI PUSH2 0xDD9 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xE1C JUMPI PUSH2 0xE0D DUP6 PUSH2 0xCAA JUMP JUMPDEST DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xDFC JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB17 DUP2 PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEBF JUMPI PUSH2 0xEBF PUSH2 0xE84 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xED3 JUMPI PUSH2 0xED3 PUSH2 0xE84 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0xE9A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0xE9A JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4E4 JUMPI PUSH2 0x4E4 PUSH2 0xE9A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF3D JUMPI PUSH2 0xF3D PUSH2 0xE9A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xF7F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xF65 JUMPI PUSH2 0xF65 PUSH2 0xE9A JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xF72 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xF49 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF96 JUMPI POP PUSH1 0x1 PUSH2 0x4E4 JUMP JUMPDEST DUP2 PUSH2 0xFA3 JUMPI POP PUSH1 0x0 PUSH2 0x4E4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xFB9 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xFC3 JUMPI PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD4 PUSH2 0xE9A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4E4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1002 JUMPI POP DUP2 DUP2 EXP PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x100C DUP4 DUP4 PUSH2 0xF44 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1020 JUMPI PUSH2 0x1020 PUSH2 0xE9A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB17 DUP4 DUP4 PUSH2 0xF87 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xA8 PUSH32 0xEF64EB4AB1CD665B8DCA7B4784B14FF527C796F8F0715E719DF1A4BAC164736F PUSH13 0x63430008110033000000000000 ", "sha1": "450a8054fc7e6d7d07f1efb477ceb5444d3019c2", "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"../interfaces/IConvexHandler.sol\";\nimport \"../interfaces/pools/ILpToken.sol\";\nimport \"../interfaces/access/IOwnable.sol\";\nimport \"../interfaces/vendor/IRewardStaking.sol\";\nimport \"../interfaces/vendor/IBooster.sol\";\nimport \"../interfaces/vendor/IBaseRewardPool.sol\";\nimport \"../interfaces/ICurveRegistryCache.sol\";\nimport \"../interfaces/IController.sol\";\nimport \"../libraries/ScaledMath.sol\";\n\ncontract ConvexHandler is IConvexHandler {\n    using ScaledMath for uint256;\n    using SafeERC20 for IERC20;\n\n    uint256 internal constant _CLIFF_COUNT = 1000;\n    uint256 internal constant _CLIFF_SIZE = 100_000e18;\n    uint256 internal constant _MAX_CVX_SUPPLY = 100_000_000e18;\n    uint256 internal constant _MAX_CLIFF_THRESHOLD = 0.3e18;\n    address internal constant _CVX_TOKEN = address(0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B);\n\n    uint256 public cliffThreshold = 0.05e18;\n\n    IController public immutable controller;\n\n    constructor(address _controller) {\n        controller = IController(_controller);\n    }\n\n    /// @notice Deposits a Curve LP token on Convex and stakes the Convex\n    /// Curve LP token in the respective CRV rewards contract on Convex.\n    /// @param _curvePool Curve Pool for which LP tokens should be deposited\n    /// @param _amount Amount of Curve LP tokens to deposit\n    function deposit(address _curvePool, uint256 _amount) external {\n        uint256 pid = controller.curveRegistryCache().getPid(_curvePool);\n        IBooster(controller.convexBooster()).deposit(pid, _amount, true);\n    }\n\n    /// @notice Withdraws Curve LP tokens from Convex.\n    /// @dev Curve LP tokens get unstaked from the Convex CRV rewards contract.\n    /// @param _curvePool Curve pool for which LP tokens should be withdrawn.\n    /// @param _amount Amount of Curve LP tokens to withdraw.\n    function withdraw(address _curvePool, uint256 _amount) external {\n        address rewardPool = controller.curveRegistryCache().getRewardPool(_curvePool);\n        IBaseRewardPool(rewardPool).withdrawAndUnwrap(_amount, false);\n    }\n\n    /// @notice Claims CRV, CVX and extra rewards from Convex on behalf of a Conic pool.\n    /// @param _curvePool Curve pool from which LP tokens have been deposited on Convex.\n    /// @param _conicPool Conic pool for which rewards will be claimed.\n    function claimEarnings(address _curvePool, address _conicPool) external {\n        _claimConvexReward(_curvePool, _conicPool);\n    }\n\n    function getRewardPool(address _curvePool) public view returns (address) {\n        return controller.curveRegistryCache().getRewardPool(_curvePool);\n    }\n\n    function _claimConvexReward(address _curvePool, address _conicPool) internal {\n        address rewardPool = controller.curveRegistryCache().getRewardPool(_curvePool);\n        IBaseRewardPool(rewardPool).getReward(_conicPool, true);\n    }\n\n    /// @notice Gets total amount of CRV earned by an account from staking an amount of\n    /// Curve LP tokens via Convex for a single Curve pool.\n    /// @param _account Account which staked an amount of Curve LP tokens.\n    /// @param _curvePool Curve pool for which earned CRV should be computed.\n    /// @return Total amount of CRV earned.\n    function getCrvEarned(address _account, address _curvePool) public view returns (uint256) {\n        address rewardPool = controller.curveRegistryCache().getRewardPool(_curvePool);\n        return IBaseRewardPool(rewardPool).earned(_account);\n    }\n\n    /// @notice Gets total amount of CRV earned by an account from staking multiple Curve\n    /// LP tokens via Convex.\n    /// @param _account Account which staked Curve LP tokens.\n    /// @param _curvePools List of Curve pools for which earned CRV should be computed.\n    /// @return Total amount of CRV earned.\n    function getCrvEarnedBatch(\n        address _account,\n        address[] memory _curvePools\n    ) external view returns (uint256) {\n        uint256 totalCrvEarned;\n        for (uint256 i; i < _curvePools.length; i++) {\n            address pool = _curvePools[i];\n            totalCrvEarned += getCrvEarned(_account, pool);\n        }\n        return totalCrvEarned;\n    }\n\n    /// @notice Computes how much CVX can be claimed for an amount of CRV earned\n    /// @dev Not easily computable from the CVX token contract\n    /// @param crvAmount Amount of CRV for which CVX will be minted pro rata.\n    /// @return cvxEarned CVX amount that would be minted.\n    /// @return cliffInfo information about the current Convex cliff\n    function computeClaimableConvexWithCliffInfo(\n        uint256 crvAmount\n    ) public view returns (uint256 cvxEarned, Types.CliffInfo memory cliffInfo) {\n        uint256 cvxTotalSupply = IERC20(_CVX_TOKEN).totalSupply();\n        cliffInfo.currentCliff = cvxTotalSupply / _CLIFF_SIZE;\n        uint256 cvxNeededUntilNextCliff = _CLIFF_SIZE - (cvxTotalSupply % _CLIFF_SIZE);\n        if (cvxNeededUntilNextCliff <= _CLIFF_SIZE.mulDown(cliffThreshold)) {\n            cliffInfo.currentCliff += 1;\n            cliffInfo.withinThreshold = true;\n        }\n\n        if (cliffInfo.currentCliff >= _CLIFF_COUNT) {\n            return (0, cliffInfo);\n        }\n\n        uint256 remaining = _CLIFF_COUNT - cliffInfo.currentCliff;\n        cvxEarned = (crvAmount * remaining) / _CLIFF_COUNT;\n        uint256 amountTillMax = _MAX_CVX_SUPPLY - cvxTotalSupply;\n        if (cvxEarned > amountTillMax) {\n            cvxEarned = amountTillMax;\n        }\n    }\n\n    function computeClaimableConvex(uint256 crvAmount) external view returns (uint256) {\n        (uint256 cvxEarned, ) = computeClaimableConvexWithCliffInfo(crvAmount);\n        return cvxEarned;\n    }\n\n    function updateCliffThreshold(uint256 _cliffThreshold) external {\n        require(\n            msg.sender == IOwnable(address(controller)).owner(),\n            \"caller is not governance proxy\"\n        );\n        require(_cliffThreshold <= _MAX_CLIFF_THRESHOLD, \"new cliff threshold is too high\");\n        require(_cliffThreshold != cliffThreshold, \"new cliff threshold must be higher or lower\");\n        cliffThreshold = _cliffThreshold;\n    }\n}\n", "sourceMap": "596:5660:23:-:0;;;1071:7;1039:39;;1131:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1174:37:23;;;596:5660;;14:290:88;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:88;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:88:o;:::-;596:5660:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;", "sourcePath": "contracts/ConvexHandler.sol", "type": "contract", "deployment": {"address": "0xca432AbffBe075CC3fA63a8FA9Fb933d6f92D798", "chainid": "1", "blockHeight": 19036191}}